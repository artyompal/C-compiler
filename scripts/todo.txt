
 TODO:


 Фиксы:

 * Надо сделать вычисление таблиц анализатора ленивым.


 Оптимизации конкретного теста:

 * Надо переделать сборку regressive-тестов на cl/link в обход devenv.

 * В тесте надо сменить всю арифметику на беззнаковую и убрать лишний AND. Тогда можно будет оптимизировать
   кодовые последовательности, маскирующие первый и второй младшие байты.


 Общие алгоритмы:

 * Надо построить список всех локальных переменных, включая автогенерированные и инлайненные.
   Надо посчитать число использований каждой переменной после раскраски регистров и написать дефрагментацию стекового фрейма.

 * Надо кешировать доступ к часто используемым переменным в памяти. Регистровые переменные должны иметь возможность оказаться 
   также в часто используемых структурах и в произвольных адресуемых областях памяти, а переменные в стековом фрейме должны 
   стать частным случаем. Надо ограничивать такое кеширование в соответствии с правилами алиасинга, а лучше ограничивать 
   любыми записями в память.

 * Нужно проводить межпроцедурный анализ использования указателей, чтобы анализировать указатели на отстутствие алиасинга.

 * Надо написать векторизацию кода над 2-4х-мерными векторами. Для того, чтобы проверить, что эта операция стала улучшением
   кода, нужно написать клонирование кода функции и вычисление метрики (хотя бы как числа инструкций, но предпочтительнее
   вычислять ожидаемое время выполнения с учётом циклов).

 * Надо выносить из if-else инструкции, общие для обеих веток.

 * Можно распознавать простейшие условные конструкции, такие, как min/max. Кроме того, надо переделывать простые IF,
   содержащие несколько MOV, в условные, однако нужно доказывать, что в сгенерированном коде не добавился access violation.

 * Надо написать построение графа циклов для потока.

 * Нужно написать проверку графа на приводимость.

 * Нужно вынести константные вычисления из цикла. Вещественное деление в цикле должно быть также распознано, как подвыражение.

 * Надо написать устранение общих подвыражений.

 * Можно освободить регистр ebp, если отказаться от стек-фреймов в статических функциях.
   Можно одним проходом после инлайнинга перевести всю адресацию с ebp на esp.

 * Надо гарантировать уникальность соответствия меток и переходов. (На самом деле, нужно только для переходов вперёд).

