
 TODO:


 Мелкие оптимизации:

 * Надо сделать вычисление таблиц анализатора ленивым.

 * Надо переделать сборку regressive-тестов на cl/link в обход devenv.

 * Надо выносить из if-else инструкции, общие для обеих веток.

 * В тесте надо сменить всю арифметику на беззнаковую и убрать лишний AND. Тогда можно будет оптимизировать
   кодовые последовательности, маскирующие первый и второй младшие байты.

 * Можно распознавать простейшие условные конструкции, такие, как min/max.


 Общие алгоритмы:

 * Надо написать построение графа циклов для потока.

 * Нужно написать проверку графа на приводимость.

 * Нужно вынести константные вычисления из цикла.

 * Надо написать устранение общих подвыражений.

 * Можно освободить регистр ebp, если отказаться от стек-фреймов в статических функциях.
   Можно одним проходом после инлайнинга перевести всю адресацию с ebp на esp.

 * Надо кешировать доступ к часто используемым переменным в памяти.
   Регистровые переменные должны иметь возможность оказаться также в часто используемых структурах и в произвольных адресуемых
   областях памяти, а переменные в стековом фрейме должны стать частным случаем.

 * Надо ограничивать такое кеширование в соответствии с правилами алиасинга, а лучше ограничивать любыми записями в память.

 * Надо гарантировать уникальность соответствия меток и переходов. (На самом деле, нужно только для переходов вперёд).

