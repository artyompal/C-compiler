
 TODO:


 Мелкие оптимизации:

 * Надо разрешить регистровым переменным участвовать в int2float/float2int в случае включённого SSE.

 * Заменить табы в листинге на пробелы.

 * Изменить нумерацию esp/ebp во внутреннем представлении компилятора.

 * Параметры функций, если они становятся регистровыми переменными, должны сохраняться в свой адрес в памяти.
   В начале функции они должны интерпретироваться как swapped.

 * Для коммутативных операций, если первый операнд выгружен в память, а второй доступен и более ненужен,
   то можно поменять их местами.


 Общие алгоритмы:

 * Надо написать обнаружение циклов. 

 * Нужно написать проверку графа на приводимость.

 * Надо написать распространение копирований.
   Тогда можно будет убрать все хакерские оптимизации регистровых переменных.

 * Нужно вынести константные вычисления из цикла.

 * Надо написать устранение общих подвыражений.


 Оптимизации:

 * Надо написать оценочную функцию для примерного вычисления времени выполнения функции.

 * Желательно детектировать количество итераций в простейших циклах. Тогда можно будет усовершенствовать оценочную функцию.

 * Надо написать функцию клонирования всего кода функции.
   После этого станет возможно перебирать варианты кодогенерации.

 * Можно улучшить алгоритм вытеснения регистров, если регистры, которые можно просто загрузить из памяти, не сохранять.

 * Можно улучшить алгоритм вытеснения регистров, имея оценочную функцию с информацией о внутренних циклах,
   с тем, чтобы не помещать код сохранения/восстановления регистра во внутренний цикл.

 * Можно освободить регистр ebp, если отказаться от стек-фреймов в статических функциях.
   Можно одним проходом после инлайнинга перевести всю адресацию с ebp на esp.

 * Нужно заменять вещественные деления на константу на умножения.

 * Можно делать статические функции fastcall.

