
 TODO:


 Мелкие оптимизации:

 * Надо переделать сборку regressive-тестов на cl/link в обход devenv.

 * Надо оптимизировать множественные add/sub esp,4 в одну инструкцию

 * Надо удалять мёртвый код после раскраски регистров.

 * Надо добавить стадию оптимизации после раскраски, и удалить там, в том числе, дублирующиеся метки.

 * Нужно переименовать листинги rasterizer__* сообразно с опциями.


 Общие алгоритмы:

 * Надо написать построение графа циклов для потока.

 * Нужно написать проверку графа на приводимость.

 * Надо написать распространение копирований. Тогда можно будет убрать все хакерские оптимизации регистровых переменных.

 * Нужно вынести константные вычисления из цикла.

 * Надо написать устранение общих подвыражений.

 * Нужно заменять вещественные деления на константу на умножения.

 * Можно освободить регистр ebp, если отказаться от стек-фреймов в статических функциях.
   Можно одним проходом после инлайнинга перевести всю адресацию с ebp на esp.

 * Надо кешировать доступ к часто используемым переменным в памяти.
   Регистровые переменные должны иметь возможность оказаться также в часто используемых структурах и в произвольных адресуемых
   областях памяти, а переменные в стековом фрейме должны стать частным случаем.

 * Надо ограничивать такое кеширование в соответствии с правилами алиасинга, а лучше ограничивать любыми записями в память.

 * Надо выносить из if-else инструкции, общие для обеих веток.

 * Надо гарантировать уникальность соответствия меток и переходов.


 Оценочная функция:

 * Надо написать оценочную функцию для примерного вычисления времени выполнения функции.

 * Желательно детектировать количество итераций в простейших циклах. Тогда можно будет усовершенствовать оценочную функцию.

 * Надо написать функцию клонирования всего кода функции.
   После этого станет возможно перебирать варианты кодогенерации.

 * Можно улучшить алгоритм вытеснения регистров, если регистры, которые можно просто загрузить из памяти, не сохранять.

 * Можно улучшить алгоритм вытеснения регистров, имея оценочную функцию с информацией о внутренних циклах,
   с тем, чтобы не помещать код сохранения/восстановления регистра во внутренний цикл.

