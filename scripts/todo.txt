
 TODO:


 Ядро кодогенератора/оптимизатора:

 * Надо написать вытеснение регистров в стек.

 * Надо написать функцию клонирования всего кода функции.

 * Надо написать оценочную функцию для примерного вычисления времени выполнения функции.
   После этого станет возможно перебирать варианты кодогенерации.

 * Когда будет написано вытеснение регистров, и кодогенератор. таким образом, сможет генерировать код в любом случае,
   можно будет убрать подсчёт числа свободных регистров в аллокаторе регистровых переменных.
   Тогда регистровые переменные можно будет создавать условно, на основании оценочной функции.

 * Надо написать вытеснение регистров eax/edx для нужд mul/div/idiv.
   Тогда можно будет избавиться от хардкода в аллокаторе регистров.

 * Надо написать бектреккинг раскрашивания регистров для результата функции eax.

 * Надо написать распространение копий.

 * Надо написать устранение общих подвыражений.


 Дополнительно:

 * Надо написать обнаружение циклов. Желательно детектировать количество итераций в простейших циклах.
   После этого станет возможно усовершенствовать оценочную функцию.

 * Можно улучшить алгоритм вытеснения регистров, если регистры, которые можно просто загрузить из памяти, не сохранять.

 * Можно улучшить алгоритм вытеснения регистров, имея оценочную функцию с информацией о внутренних циклах,
   с тем, чтобы не помещать код сохранения/восстановления регистра во внутренний цикл.

