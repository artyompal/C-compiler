State 321 contains 1 shift/reduce conflict.

Grammar
rule 1    primary_expression -> lxm_identifier
rule 2    primary_expression -> lxm_constant
rule 3    primary_expression -> lxm_string_literal
rule 4    primary_expression -> '(' expression ')'
rule 5    postfix_expression -> primary_expression
rule 6    postfix_expression -> postfix_expression lxm_inc
rule 7    postfix_expression -> postfix_expression lxm_dec
rule 8    postfix_expression -> postfix_expression '[' expression ']'
rule 9    postfix_expression -> postfix_expression '.' lxm_identifier
rule 10   postfix_expression -> postfix_expression lxm_arrow lxm_identifier
rule 11   postfix_expression -> postfix_expression '(' ')'
rule 12   postfix_expression -> postfix_expression '(' argument_expression_list ')'
rule 13   argument_expression_list -> assignment_expression
rule 14   argument_expression_list -> argument_expression_list ',' assignment_expression
rule 15   unary_expression -> postfix_expression
rule 16   unary_expression -> lxm_inc unary_expression
rule 17   unary_expression -> lxm_dec unary_expression
rule 18   unary_expression -> lxm_sizeof unary_expression
rule 19   unary_expression -> lxm_sizeof '(' type_name ')'
rule 20   unary_expression -> '&' cast_expression
rule 21   unary_expression -> '*' cast_expression
rule 22   unary_expression -> '+' cast_expression
rule 23   unary_expression -> '-' cast_expression
rule 24   unary_expression -> '~' cast_expression
rule 25   unary_expression -> '!' cast_expression
rule 26   cast_expression -> unary_expression
rule 27   cast_expression -> '(' type_name ')' cast_expression
rule 28   multiplicative_expression -> cast_expression
rule 29   multiplicative_expression -> multiplicative_expression '*' cast_expression
rule 30   multiplicative_expression -> multiplicative_expression '/' cast_expression
rule 31   multiplicative_expression -> multiplicative_expression '%' cast_expression
rule 32   additive_expression -> multiplicative_expression
rule 33   additive_expression -> additive_expression '+' multiplicative_expression
rule 34   additive_expression -> additive_expression '-' multiplicative_expression
rule 35   shift_expression -> additive_expression
rule 36   shift_expression -> shift_expression lxm_shl additive_expression
rule 37   shift_expression -> shift_expression lxm_shr additive_expression
rule 38   relational_expression -> shift_expression
rule 39   relational_expression -> relational_expression '<' shift_expression
rule 40   relational_expression -> relational_expression '>' shift_expression
rule 41   relational_expression -> relational_expression lxm_le shift_expression
rule 42   relational_expression -> relational_expression lxm_ge shift_expression
rule 43   equality_expression -> relational_expression
rule 44   equality_expression -> equality_expression lxm_eq relational_expression
rule 45   equality_expression -> equality_expression lxm_ne relational_expression
rule 46   and_expression -> equality_expression
rule 47   and_expression -> and_expression '&' equality_expression
rule 48   exclusive_or_expression -> and_expression
rule 49   exclusive_or_expression -> exclusive_or_expression '^' and_expression
rule 50   inclusive_or_expression -> exclusive_or_expression
rule 51   inclusive_or_expression -> inclusive_or_expression '|' exclusive_or_expression
rule 52   logical_and_expression -> inclusive_or_expression
rule 53   logical_and_expression -> logical_and_expression lxm_bool_and inclusive_or_expression
rule 54   logical_or_expression -> logical_and_expression
rule 55   logical_or_expression -> logical_or_expression lxm_bool_or logical_and_expression
rule 56   conditional_expression -> logical_or_expression
rule 57   conditional_expression -> logical_or_expression '?' expression ':' conditional_expression
rule 58   assignment_expression -> conditional_expression
rule 59   assignment_expression -> unary_expression '=' assignment_expression
rule 60   assignment_expression -> unary_expression lxm_add_assign assignment_expression
rule 61   assignment_expression -> unary_expression lxm_sub_assign assignment_expression
rule 62   assignment_expression -> unary_expression lxm_mul_assign assignment_expression
rule 63   assignment_expression -> unary_expression lxm_div_assign assignment_expression
rule 64   assignment_expression -> unary_expression lxm_mod_assign assignment_expression
rule 65   assignment_expression -> unary_expression lxm_shl_assign assignment_expression
rule 66   assignment_expression -> unary_expression lxm_shr_assign assignment_expression
rule 67   assignment_expression -> unary_expression lxm_and_assign assignment_expression
rule 68   assignment_expression -> unary_expression lxm_xor_assign assignment_expression
rule 69   assignment_expression -> unary_expression lxm_or_assign assignment_expression
rule 70   expression -> assignment_expression
rule 71   expression -> expression ',' assignment_expression
rule 72   constant_expression -> conditional_expression
rule 73   declaration -> declaration_specifiers ';'
rule 74   declaration -> declaration_specifiers init_declarator_list ';'
rule 75   declaration -> declaration_specifiers error ';'
rule 76   declaration_specifiers -> storage_class_specifier
rule 77   declaration_specifiers -> declaration_specifiers storage_class_specifier
rule 78   declaration_specifiers -> type_specifier
rule 79   declaration_specifiers -> declaration_specifiers type_specifier
rule 80   declaration_specifiers -> type_qualifier
rule 81   declaration_specifiers -> declaration_specifiers type_qualifier
rule 82   storage_class_specifier -> lxm_typedef
rule 83   storage_class_specifier -> lxm_extern
rule 84   storage_class_specifier -> lxm_static
rule 85   storage_class_specifier -> lxm_auto
rule 86   storage_class_specifier -> lxm_register
rule 87   type_specifier -> lxm_void
rule 88   type_specifier -> lxm_char
rule 89   type_specifier -> lxm_short
rule 90   type_specifier -> lxm_int
rule 91   type_specifier -> lxm_long
rule 92   type_specifier -> lxm_float
rule 93   type_specifier -> lxm_double
rule 94   type_specifier -> lxm_signed
rule 95   type_specifier -> lxm_unsigned
rule 96   type_specifier -> struct_or_union_specifier
rule 97   type_specifier -> enum_specifier
rule 98   type_specifier -> lxm_typedef_name
rule 99   struct_or_union_specifier -> lxm_struct lxm_identifier '{' struct_declaration_list '}'
rule 100  struct_or_union_specifier -> lxm_union lxm_identifier '{' struct_declaration_list '}'
rule 101  struct_or_union_specifier -> lxm_struct '{' struct_declaration_list '}'
rule 102  struct_or_union_specifier -> lxm_union '{' struct_declaration_list '}'
rule 103  struct_or_union_specifier -> lxm_struct lxm_identifier
rule 104  struct_or_union_specifier -> lxm_union lxm_identifier
rule 105  struct_declaration_list -> struct_declaration
rule 106  struct_declaration_list -> struct_declaration_list struct_declaration
rule 107  type_qualifier -> lxm_const
rule 108  type_qualifier -> lxm_volatile
rule 109  specifier_qualifier_list -> type_specifier
rule 110  specifier_qualifier_list -> specifier_qualifier_list type_specifier
rule 111  specifier_qualifier_list -> type_qualifier
rule 112  specifier_qualifier_list -> specifier_qualifier_list type_qualifier
rule 113  struct_declaration -> specifier_qualifier_list struct_declarator_list ';'
rule 114  struct_declaration -> error ';'
rule 115  struct_declarator_list -> struct_declarator
rule 116  struct_declarator_list -> struct_declarator_list ',' struct_declarator
rule 117  struct_declarator -> declarator
rule 118  struct_declarator -> ':' constant_expression
rule 119  struct_declarator -> declarator ':' constant_expression
rule 120  init_declarator_list -> init_declarator
rule 121  init_declarator_list -> init_declarator_list ',' init_declarator
rule 122  init_declarator -> declarator
rule 123  init_declarator -> declarator '=' initializer
rule 124  enum_specifier -> lxm_enum '{' enumerator_list '}'
rule 125  enum_specifier -> lxm_enum lxm_identifier '{' enumerator_list '}'
rule 126  enum_specifier -> lxm_enum lxm_identifier
rule 127  enumerator_list -> enumerator
rule 128  enumerator_list -> enumerator_list ',' enumerator
rule 129  enumerator -> lxm_identifier
rule 130  enumerator -> lxm_identifier '=' constant_expression
rule 131  declarator -> pointer direct_declarator
rule 132  declarator -> direct_declarator
rule 133  direct_declarator -> lxm_identifier
rule 134  direct_declarator -> '(' declarator ')'
rule 135  direct_declarator -> direct_declarator '[' constant_expression ']'
rule 136  direct_declarator -> direct_declarator '[' error ']'
rule 137  direct_declarator -> direct_declarator '[' ']'
rule 138  direct_declarator -> direct_declarator '(' parameter_type_list ')'
rule 139  direct_declarator -> direct_declarator '(' error ')'
rule 140  direct_declarator -> direct_declarator '(' ')'
rule 141  pointer -> '*'
rule 142  pointer -> '*' type_qualifier_list
rule 143  pointer -> '*' pointer
rule 144  pointer -> '*' type_qualifier_list pointer
rule 145  type_qualifier_list -> type_qualifier
rule 146  type_qualifier_list -> type_qualifier_list type_qualifier
rule 147  parameter_type_list -> parameter_list
rule 148  parameter_type_list -> parameter_list ',' lxm_ellipsis
rule 149  parameter_list -> parameter_declaration
rule 150  parameter_list -> parameter_list ',' parameter_declaration
rule 151  parameter_declaration -> declaration_specifiers declarator
rule 152  parameter_declaration -> declaration_specifiers abstract_declarator
rule 153  parameter_declaration -> declaration_specifiers
rule 154  type_name -> specifier_qualifier_list
rule 155  type_name -> specifier_qualifier_list abstract_declarator
rule 156  abstract_declarator -> pointer
rule 157  abstract_declarator -> direct_abstract_declarator
rule 158  abstract_declarator -> pointer direct_abstract_declarator
rule 159  direct_abstract_declarator -> '(' abstract_declarator ')'
rule 160  direct_abstract_declarator -> '[' ']'
rule 161  direct_abstract_declarator -> '[' constant_expression ']'
rule 162  direct_abstract_declarator -> '[' error ']'
rule 163  direct_abstract_declarator -> direct_abstract_declarator '[' ']'
rule 164  direct_abstract_declarator -> direct_abstract_declarator '[' constant_expression ']'
rule 165  direct_abstract_declarator -> direct_abstract_declarator '[' error ']'
rule 166  direct_abstract_declarator -> '(' ')'
rule 167  direct_abstract_declarator -> '(' parameter_type_list ')'
rule 168  direct_abstract_declarator -> '(' error ')'
rule 169  direct_abstract_declarator -> direct_abstract_declarator '(' ')'
rule 170  direct_abstract_declarator -> direct_abstract_declarator '(' parameter_type_list ')'
rule 171  direct_abstract_declarator -> direct_abstract_declarator '(' error ')'
rule 172  initializer -> assignment_expression
rule 173  initializer -> '{' initializer_list '}'
rule 174  initializer -> '{' initializer_list ',' '}'
rule 175  initializer_list -> initializer
rule 176  initializer_list -> initializer_list ',' initializer
rule 177  declaration_or_statement -> declaration
rule 178  declaration_or_statement -> statement
rule 179  declaration_or_statement -> error ';'
rule 180  declaration_or_statement_list -> declaration_or_statement
rule 181  declaration_or_statement_list -> declaration_or_statement_list declaration_or_statement
rule 182  compound_statement_rest -> '}'
rule 183  compound_statement_rest -> declaration_or_statement_list '}'
rule 184  compound_statement_rest -> declaration_or_statement_list error '}'
rule 185  @1 ->		/* empty */
rule 186  compound_statement -> '{' @1 compound_statement_rest
rule 187  expression_statement -> ';'
rule 188  expression_statement -> expression ';'
rule 189  if_statement -> lxm_if '(' expression ')'
rule 190  for_statement -> lxm_for '(' expression_statement
rule 191  @2 ->		/* empty */
rule 192  statement -> lxm_identifier ':' @2 statement
rule 193  @3 ->		/* empty */
rule 194  statement -> lxm_case constant_expression ':' @3 statement
rule 195  @4 ->		/* empty */
rule 196  statement -> lxm_default ':' @4 statement
rule 197  @5 ->		/* empty */
rule 198  statement -> lxm_switch '(' expression ')' @5 statement
rule 199  statement -> lxm_goto lxm_identifier ';'
rule 200  statement -> lxm_continue ';'
rule 201  statement -> lxm_break ';'
rule 202  statement -> expression_statement
rule 203  statement -> compound_statement
rule 204  statement -> if_statement statement
rule 205  @6 ->		/* empty */
rule 206  statement -> if_statement statement lxm_else @6 statement
rule 207  @7 ->		/* empty */
rule 208  @8 ->		/* empty */
rule 209  statement -> lxm_while '(' expression ')' @7 @8 statement
rule 210  @9 ->		/* empty */
rule 211  statement -> lxm_do @9 statement lxm_while '(' expression ')' ';'
rule 212  @10 ->		/* empty */
rule 213  statement -> for_statement expression_statement @10 ')' statement
rule 214  @11 ->		/* empty */
rule 215  @12 ->		/* empty */
rule 216  statement -> for_statement expression_statement @11 expression ')' @12 statement
rule 217  statement -> lxm_return ';'
rule 218  statement -> lxm_return expression ';'
rule 219  translation_unit -> external_declaration
rule 220  translation_unit -> translation_unit external_declaration
rule 221  external_declaration -> function_definition
rule 222  external_declaration -> declaration
rule 223  @13 ->		/* empty */
rule 224  function_definition -> declaration_specifiers declarator @13 compound_statement
rule 225  @14 ->		/* empty */
rule 226  function_definition -> declarator @14 compound_statement

Terminals, with rules where they appear

$ (-1)
'!' (33) 25
'%' (37) 31
'&' (38) 20 47
'(' (40) 4 11 12 19 27 134 138 139 140 159 166 167 168 169 170 171
    189 190 198 209 211
')' (41) 4 11 12 19 27 134 138 139 140 159 166 167 168 169 170 171
    189 198 209 211 213 216
'*' (42) 21 29 141 142 143 144
'+' (43) 22 33
',' (44) 14 71 116 121 128 148 150 174 176
'-' (45) 23 34
'.' (46) 9
'/' (47) 30
':' (58) 57 118 119 192 194 196
';' (59) 73 74 75 113 114 179 187 188 199 200 201 211 217 218
'<' (60) 39
'=' (61) 59 123 130
'>' (62) 40
'?' (63) 57
'[' (91) 8 135 136 137 160 161 162 163 164 165
']' (93) 8 135 136 137 160 161 162 163 164 165
'^' (94) 49
'{' (123) 99 100 101 102 124 125 173 174 186
'|' (124) 51
'}' (125) 99 100 101 102 124 125 173 174 182 183 184
'~' (126) 24
error (256) 75 114 136 139 162 165 168 171 179 184
lxm_identifier (257) 1 9 10 99 100 103 104 125 126 129 130 133 192
    199
lxm_typedef_name (258) 98
lxm_constant (259) 2
lxm_string_literal (260) 3
lxm_arrow (261) 10
lxm_inc (262) 6 16
lxm_dec (263) 7 17
lxm_shl (264) 36
lxm_shr (265) 37
lxm_le (266) 41
lxm_ge (267) 42
lxm_eq (268) 44
lxm_ne (269) 45
lxm_bool_and (270) 53
lxm_bool_or (271) 55
lxm_ellipsis (272) 148
lxm_mul_assign (273) 62
lxm_div_assign (274) 63
lxm_mod_assign (275) 64
lxm_add_assign (276) 60
lxm_sub_assign (277) 61
lxm_shl_assign (278) 65
lxm_shr_assign (279) 66
lxm_and_assign (280) 67
lxm_xor_assign (281) 68
lxm_or_assign (282) 69
lxm_auto (283) 85
lxm_break (284) 201
lxm_case (285) 194
lxm_char (286) 88
lxm_const (287) 107
lxm_continue (288) 200
lxm_default (289) 196
lxm_do (290) 211
lxm_double (291) 93
lxm_else (292) 206
lxm_enum (293) 124 125 126
lxm_extern (294) 83
lxm_float (295) 92
lxm_for (296) 190
lxm_goto (297) 199
lxm_if (298) 189
lxm_int (299) 90
lxm_long (300) 91
lxm_register (301) 86
lxm_return (302) 217 218
lxm_short (303) 89
lxm_signed (304) 94
lxm_sizeof (305) 18 19
lxm_static (306) 84
lxm_struct (307) 99 101 103
lxm_switch (308) 198
lxm_typedef (309) 82
lxm_union (310) 100 102 104
lxm_unsigned (311) 95
lxm_void (312) 87
lxm_volatile (313) 108
lxm_while (314) 209 211

Nonterminals, with rules where they appear

primary_expression (85)
    on left: 1 2 3 4, on right: 5
postfix_expression (86)
    on left: 5 6 7 8 9 10 11 12, on right: 6 7 8 9 10 11 12 15
argument_expression_list (87)
    on left: 13 14, on right: 12 14
unary_expression (88)
    on left: 15 16 17 18 19 20 21 22 23 24 25, on right: 16 17 18 26
    59 60 61 62 63 64 65 66 67 68 69
cast_expression (89)
    on left: 26 27, on right: 20 21 22 23 24 25 27 28 29 30 31
multiplicative_expression (90)
    on left: 28 29 30 31, on right: 29 30 31 32 33 34
additive_expression (91)
    on left: 32 33 34, on right: 33 34 35 36 37
shift_expression (92)
    on left: 35 36 37, on right: 36 37 38 39 40 41 42
relational_expression (93)
    on left: 38 39 40 41 42, on right: 39 40 41 42 43 44 45
equality_expression (94)
    on left: 43 44 45, on right: 44 45 46 47
and_expression (95)
    on left: 46 47, on right: 47 48 49
exclusive_or_expression (96)
    on left: 48 49, on right: 49 50 51
inclusive_or_expression (97)
    on left: 50 51, on right: 51 52 53
logical_and_expression (98)
    on left: 52 53, on right: 53 54 55
logical_or_expression (99)
    on left: 54 55, on right: 55 56 57
conditional_expression (100)
    on left: 56 57, on right: 57 58 72
assignment_expression (101)
    on left: 58 59 60 61 62 63 64 65 66 67 68 69, on right: 13 14 59
    60 61 62 63 64 65 66 67 68 69 70 71 172
expression (102)
    on left: 70 71, on right: 4 8 57 71 188 189 198 209 211 216 218
constant_expression (103)
    on left: 72, on right: 118 119 130 135 161 164 194
declaration (104)
    on left: 73 74 75, on right: 177 222
declaration_specifiers (105)
    on left: 76 77 78 79 80 81, on right: 73 74 75 77 79 81 151 152
    153 224
storage_class_specifier (106)
    on left: 82 83 84 85 86, on right: 76 77
type_specifier (107)
    on left: 87 88 89 90 91 92 93 94 95 96 97 98, on right: 78 79 109
    110
struct_or_union_specifier (108)
    on left: 99 100 101 102 103 104, on right: 96
struct_declaration_list (109)
    on left: 105 106, on right: 99 100 101 102 106
type_qualifier (110)
    on left: 107 108, on right: 80 81 111 112 145 146
specifier_qualifier_list (111)
    on left: 109 110 111 112, on right: 110 112 113 154 155
struct_declaration (112)
    on left: 113 114, on right: 105 106
struct_declarator_list (113)
    on left: 115 116, on right: 113 116
struct_declarator (114)
    on left: 117 118 119, on right: 115 116
init_declarator_list (115)
    on left: 120 121, on right: 74 121
init_declarator (116)
    on left: 122 123, on right: 120 121
enum_specifier (117)
    on left: 124 125 126, on right: 97
enumerator_list (118)
    on left: 127 128, on right: 124 125 128
enumerator (119)
    on left: 129 130, on right: 127 128
declarator (120)
    on left: 131 132, on right: 117 119 122 123 134 151 224 226
direct_declarator (121)
    on left: 133 134 135 136 137 138 139 140, on right: 131 132 135
    136 137 138 139 140
pointer (122)
    on left: 141 142 143 144, on right: 131 143 144 156 158
type_qualifier_list (123)
    on left: 145 146, on right: 142 144 146
parameter_type_list (124)
    on left: 147 148, on right: 138 167 170
parameter_list (125)
    on left: 149 150, on right: 147 148 150
parameter_declaration (126)
    on left: 151 152 153, on right: 149 150
type_name (127)
    on left: 154 155, on right: 19 27
abstract_declarator (128)
    on left: 156 157 158, on right: 152 155 159
direct_abstract_declarator (129)
    on left: 159 160 161 162 163 164 165 166 167 168 169 170 171,
    on right: 157 158 163 164 165 169 170 171
initializer (130)
    on left: 172 173 174, on right: 123 175 176
initializer_list (131)
    on left: 175 176, on right: 173 174 176
declaration_or_statement (132)
    on left: 177 178 179, on right: 180 181
declaration_or_statement_list (133)
    on left: 180 181, on right: 181 183 184
compound_statement_rest (134)
    on left: 182 183 184, on right: 186
compound_statement (135)
    on left: 186, on right: 203 224 226
@1 (136)
    on left: 185, on right: 186
expression_statement (137)
    on left: 187 188, on right: 190 202 213 216
if_statement (138)
    on left: 189, on right: 204 206
for_statement (139)
    on left: 190, on right: 213 216
statement (140)
    on left: 192 194 196 198 199 200 201 202 203 204 206 209 211 213
    216 217 218, on right: 178 192 194 196 198 204 206 209 211 213
    216
@2 (141)
    on left: 191, on right: 192
@3 (142)
    on left: 193, on right: 194
@4 (143)
    on left: 195, on right: 196
@5 (144)
    on left: 197, on right: 198
@6 (145)
    on left: 205, on right: 206
@7 (146)
    on left: 207, on right: 209
@8 (147)
    on left: 208, on right: 209
@9 (148)
    on left: 210, on right: 211
@10 (149)
    on left: 212, on right: 213
@11 (150)
    on left: 214, on right: 216
@12 (151)
    on left: 215, on right: 216
translation_unit (152)
    on left: 219 220, on right: 220
external_declaration (153)
    on left: 221 222, on right: 219 220
function_definition (154)
    on left: 224 226, on right: 221
@13 (155)
    on left: 223, on right: 224
@14 (156)
    on left: 225, on right: 226


state 0

    lxm_identifier	shift, and go to state 1
    lxm_typedef_name	shift, and go to state 2
    lxm_auto	shift, and go to state 3
    lxm_char	shift, and go to state 4
    lxm_const	shift, and go to state 5
    lxm_double	shift, and go to state 6
    lxm_enum	shift, and go to state 7
    lxm_extern	shift, and go to state 8
    lxm_float	shift, and go to state 9
    lxm_int	shift, and go to state 10
    lxm_long	shift, and go to state 11
    lxm_register	shift, and go to state 12
    lxm_short	shift, and go to state 13
    lxm_signed	shift, and go to state 14
    lxm_static	shift, and go to state 15
    lxm_struct	shift, and go to state 16
    lxm_typedef	shift, and go to state 17
    lxm_union	shift, and go to state 18
    lxm_unsigned	shift, and go to state 19
    lxm_void	shift, and go to state 20
    lxm_volatile	shift, and go to state 21
    '(' 	shift, and go to state 22
    '*' 	shift, and go to state 23

    declaration	go to state 24
    declaration_specifiers	go to state 25
    storage_class_specifier	go to state 26
    type_specifier	go to state 27
    struct_or_union_specifier	go to state 28
    type_qualifier	go to state 29
    enum_specifier	go to state 30
    declarator	go to state 31
    direct_declarator	go to state 32
    pointer	go to state 33
    translation_unit	go to state 34
    external_declaration	go to state 35
    function_definition	go to state 36



state 1

    direct_declarator  ->  lxm_identifier .   (rule 133)

    $default	reduce using rule 133 (direct_declarator)



state 2

    type_specifier  ->  lxm_typedef_name .   (rule 98)

    $default	reduce using rule 98 (type_specifier)



state 3

    storage_class_specifier  ->  lxm_auto .   (rule 85)

    $default	reduce using rule 85 (storage_class_specifier)



state 4

    type_specifier  ->  lxm_char .   (rule 88)

    $default	reduce using rule 88 (type_specifier)



state 5

    type_qualifier  ->  lxm_const .   (rule 107)

    $default	reduce using rule 107 (type_qualifier)



state 6

    type_specifier  ->  lxm_double .   (rule 93)

    $default	reduce using rule 93 (type_specifier)



state 7

    enum_specifier  ->  lxm_enum . '{' enumerator_list '}'   (rule 124)
    enum_specifier  ->  lxm_enum . lxm_identifier '{' enumerator_list '}'   (rule 125)
    enum_specifier  ->  lxm_enum . lxm_identifier   (rule 126)

    lxm_identifier	shift, and go to state 37
    '{' 	shift, and go to state 38



state 8

    storage_class_specifier  ->  lxm_extern .   (rule 83)

    $default	reduce using rule 83 (storage_class_specifier)



state 9

    type_specifier  ->  lxm_float .   (rule 92)

    $default	reduce using rule 92 (type_specifier)



state 10

    type_specifier  ->  lxm_int .   (rule 90)

    $default	reduce using rule 90 (type_specifier)



state 11

    type_specifier  ->  lxm_long .   (rule 91)

    $default	reduce using rule 91 (type_specifier)



state 12

    storage_class_specifier  ->  lxm_register .   (rule 86)

    $default	reduce using rule 86 (storage_class_specifier)



state 13

    type_specifier  ->  lxm_short .   (rule 89)

    $default	reduce using rule 89 (type_specifier)



state 14

    type_specifier  ->  lxm_signed .   (rule 94)

    $default	reduce using rule 94 (type_specifier)



state 15

    storage_class_specifier  ->  lxm_static .   (rule 84)

    $default	reduce using rule 84 (storage_class_specifier)



state 16

    struct_or_union_specifier  ->  lxm_struct . lxm_identifier '{' struct_declaration_list '}'   (rule 99)
    struct_or_union_specifier  ->  lxm_struct . '{' struct_declaration_list '}'   (rule 101)
    struct_or_union_specifier  ->  lxm_struct . lxm_identifier   (rule 103)

    lxm_identifier	shift, and go to state 39
    '{' 	shift, and go to state 40



state 17

    storage_class_specifier  ->  lxm_typedef .   (rule 82)

    $default	reduce using rule 82 (storage_class_specifier)



state 18

    struct_or_union_specifier  ->  lxm_union . lxm_identifier '{' struct_declaration_list '}'   (rule 100)
    struct_or_union_specifier  ->  lxm_union . '{' struct_declaration_list '}'   (rule 102)
    struct_or_union_specifier  ->  lxm_union . lxm_identifier   (rule 104)

    lxm_identifier	shift, and go to state 41
    '{' 	shift, and go to state 42



state 19

    type_specifier  ->  lxm_unsigned .   (rule 95)

    $default	reduce using rule 95 (type_specifier)



state 20

    type_specifier  ->  lxm_void .   (rule 87)

    $default	reduce using rule 87 (type_specifier)



state 21

    type_qualifier  ->  lxm_volatile .   (rule 108)

    $default	reduce using rule 108 (type_qualifier)



state 22

    direct_declarator  ->  '(' . declarator ')'   (rule 134)

    lxm_identifier	shift, and go to state 1
    '(' 	shift, and go to state 22
    '*' 	shift, and go to state 23

    declarator	go to state 43
    direct_declarator	go to state 32
    pointer	go to state 33



state 23

    pointer  ->  '*' .   (rule 141)
    pointer  ->  '*' . type_qualifier_list   (rule 142)
    pointer  ->  '*' . pointer   (rule 143)
    pointer  ->  '*' . type_qualifier_list pointer   (rule 144)

    lxm_const	shift, and go to state 5
    lxm_volatile	shift, and go to state 21
    '*' 	shift, and go to state 23

    $default	reduce using rule 141 (pointer)

    type_qualifier	go to state 44
    pointer	go to state 45
    type_qualifier_list	go to state 46



state 24

    external_declaration  ->  declaration .   (rule 222)

    $default	reduce using rule 222 (external_declaration)



state 25

    declaration  ->  declaration_specifiers . ';'   (rule 73)
    declaration  ->  declaration_specifiers . init_declarator_list ';'   (rule 74)
    declaration  ->  declaration_specifiers . error ';'   (rule 75)
    declaration_specifiers  ->  declaration_specifiers . storage_class_specifier   (rule 77)
    declaration_specifiers  ->  declaration_specifiers . type_specifier   (rule 79)
    declaration_specifiers  ->  declaration_specifiers . type_qualifier   (rule 81)
    function_definition  ->  declaration_specifiers . declarator @13 compound_statement   (rule 224)

    error	shift, and go to state 47
    lxm_identifier	shift, and go to state 1
    lxm_typedef_name	shift, and go to state 2
    lxm_auto	shift, and go to state 3
    lxm_char	shift, and go to state 4
    lxm_const	shift, and go to state 5
    lxm_double	shift, and go to state 6
    lxm_enum	shift, and go to state 7
    lxm_extern	shift, and go to state 8
    lxm_float	shift, and go to state 9
    lxm_int	shift, and go to state 10
    lxm_long	shift, and go to state 11
    lxm_register	shift, and go to state 12
    lxm_short	shift, and go to state 13
    lxm_signed	shift, and go to state 14
    lxm_static	shift, and go to state 15
    lxm_struct	shift, and go to state 16
    lxm_typedef	shift, and go to state 17
    lxm_union	shift, and go to state 18
    lxm_unsigned	shift, and go to state 19
    lxm_void	shift, and go to state 20
    lxm_volatile	shift, and go to state 21
    '(' 	shift, and go to state 22
    '*' 	shift, and go to state 23
    ';' 	shift, and go to state 48

    storage_class_specifier	go to state 49
    type_specifier	go to state 50
    struct_or_union_specifier	go to state 28
    type_qualifier	go to state 51
    init_declarator_list	go to state 52
    init_declarator	go to state 53
    enum_specifier	go to state 30
    declarator	go to state 54
    direct_declarator	go to state 32
    pointer	go to state 33



state 26

    declaration_specifiers  ->  storage_class_specifier .   (rule 76)

    $default	reduce using rule 76 (declaration_specifiers)



state 27

    declaration_specifiers  ->  type_specifier .   (rule 78)

    $default	reduce using rule 78 (declaration_specifiers)



state 28

    type_specifier  ->  struct_or_union_specifier .   (rule 96)

    $default	reduce using rule 96 (type_specifier)



state 29

    declaration_specifiers  ->  type_qualifier .   (rule 80)

    $default	reduce using rule 80 (declaration_specifiers)



state 30

    type_specifier  ->  enum_specifier .   (rule 97)

    $default	reduce using rule 97 (type_specifier)



state 31

    function_definition  ->  declarator . @14 compound_statement   (rule 226)

    $default	reduce using rule 225 (@14)

    @14 	go to state 55



state 32

    declarator  ->  direct_declarator .   (rule 132)
    direct_declarator  ->  direct_declarator . '[' constant_expression ']'   (rule 135)
    direct_declarator  ->  direct_declarator . '[' error ']'   (rule 136)
    direct_declarator  ->  direct_declarator . '[' ']'   (rule 137)
    direct_declarator  ->  direct_declarator . '(' parameter_type_list ')'   (rule 138)
    direct_declarator  ->  direct_declarator . '(' error ')'   (rule 139)
    direct_declarator  ->  direct_declarator . '(' ')'   (rule 140)

    '(' 	shift, and go to state 56
    '[' 	shift, and go to state 57

    $default	reduce using rule 132 (declarator)



state 33

    declarator  ->  pointer . direct_declarator   (rule 131)

    lxm_identifier	shift, and go to state 1
    '(' 	shift, and go to state 22

    direct_declarator	go to state 58



state 34

    translation_unit  ->  translation_unit . external_declaration   (rule 220)

    $   	go to state 388
    lxm_identifier	shift, and go to state 1
    lxm_typedef_name	shift, and go to state 2
    lxm_auto	shift, and go to state 3
    lxm_char	shift, and go to state 4
    lxm_const	shift, and go to state 5
    lxm_double	shift, and go to state 6
    lxm_enum	shift, and go to state 7
    lxm_extern	shift, and go to state 8
    lxm_float	shift, and go to state 9
    lxm_int	shift, and go to state 10
    lxm_long	shift, and go to state 11
    lxm_register	shift, and go to state 12
    lxm_short	shift, and go to state 13
    lxm_signed	shift, and go to state 14
    lxm_static	shift, and go to state 15
    lxm_struct	shift, and go to state 16
    lxm_typedef	shift, and go to state 17
    lxm_union	shift, and go to state 18
    lxm_unsigned	shift, and go to state 19
    lxm_void	shift, and go to state 20
    lxm_volatile	shift, and go to state 21
    '(' 	shift, and go to state 22
    '*' 	shift, and go to state 23

    declaration	go to state 24
    declaration_specifiers	go to state 25
    storage_class_specifier	go to state 26
    type_specifier	go to state 27
    struct_or_union_specifier	go to state 28
    type_qualifier	go to state 29
    enum_specifier	go to state 30
    declarator	go to state 31
    direct_declarator	go to state 32
    pointer	go to state 33
    external_declaration	go to state 59
    function_definition	go to state 36



state 35

    translation_unit  ->  external_declaration .   (rule 219)

    $default	reduce using rule 219 (translation_unit)



state 36

    external_declaration  ->  function_definition .   (rule 221)

    $default	reduce using rule 221 (external_declaration)



state 37

    enum_specifier  ->  lxm_enum lxm_identifier . '{' enumerator_list '}'   (rule 125)
    enum_specifier  ->  lxm_enum lxm_identifier .   (rule 126)

    '{' 	shift, and go to state 60

    $default	reduce using rule 126 (enum_specifier)



state 38

    enum_specifier  ->  lxm_enum '{' . enumerator_list '}'   (rule 124)

    lxm_identifier	shift, and go to state 61

    enumerator_list	go to state 62
    enumerator	go to state 63



state 39

    struct_or_union_specifier  ->  lxm_struct lxm_identifier . '{' struct_declaration_list '}'   (rule 99)
    struct_or_union_specifier  ->  lxm_struct lxm_identifier .   (rule 103)

    '{' 	shift, and go to state 64

    $default	reduce using rule 103 (struct_or_union_specifier)



state 40

    struct_or_union_specifier  ->  lxm_struct '{' . struct_declaration_list '}'   (rule 101)

    error	shift, and go to state 65
    lxm_typedef_name	shift, and go to state 2
    lxm_char	shift, and go to state 4
    lxm_const	shift, and go to state 5
    lxm_double	shift, and go to state 6
    lxm_enum	shift, and go to state 7
    lxm_float	shift, and go to state 9
    lxm_int	shift, and go to state 10
    lxm_long	shift, and go to state 11
    lxm_short	shift, and go to state 13
    lxm_signed	shift, and go to state 14
    lxm_struct	shift, and go to state 16
    lxm_union	shift, and go to state 18
    lxm_unsigned	shift, and go to state 19
    lxm_void	shift, and go to state 20
    lxm_volatile	shift, and go to state 21

    type_specifier	go to state 66
    struct_or_union_specifier	go to state 28
    struct_declaration_list	go to state 67
    type_qualifier	go to state 68
    specifier_qualifier_list	go to state 69
    struct_declaration	go to state 70
    enum_specifier	go to state 30



state 41

    struct_or_union_specifier  ->  lxm_union lxm_identifier . '{' struct_declaration_list '}'   (rule 100)
    struct_or_union_specifier  ->  lxm_union lxm_identifier .   (rule 104)

    '{' 	shift, and go to state 71

    $default	reduce using rule 104 (struct_or_union_specifier)



state 42

    struct_or_union_specifier  ->  lxm_union '{' . struct_declaration_list '}'   (rule 102)

    error	shift, and go to state 65
    lxm_typedef_name	shift, and go to state 2
    lxm_char	shift, and go to state 4
    lxm_const	shift, and go to state 5
    lxm_double	shift, and go to state 6
    lxm_enum	shift, and go to state 7
    lxm_float	shift, and go to state 9
    lxm_int	shift, and go to state 10
    lxm_long	shift, and go to state 11
    lxm_short	shift, and go to state 13
    lxm_signed	shift, and go to state 14
    lxm_struct	shift, and go to state 16
    lxm_union	shift, and go to state 18
    lxm_unsigned	shift, and go to state 19
    lxm_void	shift, and go to state 20
    lxm_volatile	shift, and go to state 21

    type_specifier	go to state 66
    struct_or_union_specifier	go to state 28
    struct_declaration_list	go to state 72
    type_qualifier	go to state 68
    specifier_qualifier_list	go to state 69
    struct_declaration	go to state 70
    enum_specifier	go to state 30



state 43

    direct_declarator  ->  '(' declarator . ')'   (rule 134)

    ')' 	shift, and go to state 73



state 44

    type_qualifier_list  ->  type_qualifier .   (rule 145)

    $default	reduce using rule 145 (type_qualifier_list)



state 45

    pointer  ->  '*' pointer .   (rule 143)

    $default	reduce using rule 143 (pointer)



state 46

    pointer  ->  '*' type_qualifier_list .   (rule 142)
    pointer  ->  '*' type_qualifier_list . pointer   (rule 144)
    type_qualifier_list  ->  type_qualifier_list . type_qualifier   (rule 146)

    lxm_const	shift, and go to state 5
    lxm_volatile	shift, and go to state 21
    '*' 	shift, and go to state 23

    $default	reduce using rule 142 (pointer)

    type_qualifier	go to state 74
    pointer	go to state 75



state 47

    declaration  ->  declaration_specifiers error . ';'   (rule 75)

    ';' 	shift, and go to state 76



state 48

    declaration  ->  declaration_specifiers ';' .   (rule 73)

    $default	reduce using rule 73 (declaration)



state 49

    declaration_specifiers  ->  declaration_specifiers storage_class_specifier .   (rule 77)

    $default	reduce using rule 77 (declaration_specifiers)



state 50

    declaration_specifiers  ->  declaration_specifiers type_specifier .   (rule 79)

    $default	reduce using rule 79 (declaration_specifiers)



state 51

    declaration_specifiers  ->  declaration_specifiers type_qualifier .   (rule 81)

    $default	reduce using rule 81 (declaration_specifiers)



state 52

    declaration  ->  declaration_specifiers init_declarator_list . ';'   (rule 74)
    init_declarator_list  ->  init_declarator_list . ',' init_declarator   (rule 121)

    ',' 	shift, and go to state 77
    ';' 	shift, and go to state 78



state 53

    init_declarator_list  ->  init_declarator .   (rule 120)

    $default	reduce using rule 120 (init_declarator_list)



state 54

    init_declarator  ->  declarator .   (rule 122)
    init_declarator  ->  declarator . '=' initializer   (rule 123)
    function_definition  ->  declaration_specifiers declarator . @13 compound_statement   (rule 224)

    '=' 	shift, and go to state 79

    '{' 	reduce using rule 223 (@13)
    $default	reduce using rule 122 (init_declarator)

    @13 	go to state 80



state 55

    function_definition  ->  declarator @14 . compound_statement   (rule 226)

    '{' 	shift, and go to state 81

    compound_statement	go to state 82



state 56

    direct_declarator  ->  direct_declarator '(' . parameter_type_list ')'   (rule 138)
    direct_declarator  ->  direct_declarator '(' . error ')'   (rule 139)
    direct_declarator  ->  direct_declarator '(' . ')'   (rule 140)

    error	shift, and go to state 83
    lxm_typedef_name	shift, and go to state 2
    lxm_auto	shift, and go to state 3
    lxm_char	shift, and go to state 4
    lxm_const	shift, and go to state 5
    lxm_double	shift, and go to state 6
    lxm_enum	shift, and go to state 7
    lxm_extern	shift, and go to state 8
    lxm_float	shift, and go to state 9
    lxm_int	shift, and go to state 10
    lxm_long	shift, and go to state 11
    lxm_register	shift, and go to state 12
    lxm_short	shift, and go to state 13
    lxm_signed	shift, and go to state 14
    lxm_static	shift, and go to state 15
    lxm_struct	shift, and go to state 16
    lxm_typedef	shift, and go to state 17
    lxm_union	shift, and go to state 18
    lxm_unsigned	shift, and go to state 19
    lxm_void	shift, and go to state 20
    lxm_volatile	shift, and go to state 21
    ')' 	shift, and go to state 84

    declaration_specifiers	go to state 85
    storage_class_specifier	go to state 26
    type_specifier	go to state 27
    struct_or_union_specifier	go to state 28
    type_qualifier	go to state 29
    enum_specifier	go to state 30
    parameter_type_list	go to state 86
    parameter_list	go to state 87
    parameter_declaration	go to state 88



state 57

    direct_declarator  ->  direct_declarator '[' . constant_expression ']'   (rule 135)
    direct_declarator  ->  direct_declarator '[' . error ']'   (rule 136)
    direct_declarator  ->  direct_declarator '[' . ']'   (rule 137)

    error	shift, and go to state 89
    lxm_identifier	shift, and go to state 90
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_sizeof	shift, and go to state 95
    '(' 	shift, and go to state 96
    ']' 	shift, and go to state 97
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 106
    cast_expression	go to state 107
    multiplicative_expression	go to state 108
    additive_expression	go to state 109
    shift_expression	go to state 110
    relational_expression	go to state 111
    equality_expression	go to state 112
    and_expression	go to state 113
    exclusive_or_expression	go to state 114
    inclusive_or_expression	go to state 115
    logical_and_expression	go to state 116
    logical_or_expression	go to state 117
    conditional_expression	go to state 118
    constant_expression	go to state 119



state 58

    declarator  ->  pointer direct_declarator .   (rule 131)
    direct_declarator  ->  direct_declarator . '[' constant_expression ']'   (rule 135)
    direct_declarator  ->  direct_declarator . '[' error ']'   (rule 136)
    direct_declarator  ->  direct_declarator . '[' ']'   (rule 137)
    direct_declarator  ->  direct_declarator . '(' parameter_type_list ')'   (rule 138)
    direct_declarator  ->  direct_declarator . '(' error ')'   (rule 139)
    direct_declarator  ->  direct_declarator . '(' ')'   (rule 140)

    '(' 	shift, and go to state 56
    '[' 	shift, and go to state 57

    $default	reduce using rule 131 (declarator)



state 59

    translation_unit  ->  translation_unit external_declaration .   (rule 220)

    $default	reduce using rule 220 (translation_unit)



state 60

    enum_specifier  ->  lxm_enum lxm_identifier '{' . enumerator_list '}'   (rule 125)

    lxm_identifier	shift, and go to state 61

    enumerator_list	go to state 120
    enumerator	go to state 63



state 61

    enumerator  ->  lxm_identifier .   (rule 129)
    enumerator  ->  lxm_identifier . '=' constant_expression   (rule 130)

    '=' 	shift, and go to state 121

    $default	reduce using rule 129 (enumerator)



state 62

    enum_specifier  ->  lxm_enum '{' enumerator_list . '}'   (rule 124)
    enumerator_list  ->  enumerator_list . ',' enumerator   (rule 128)

    ',' 	shift, and go to state 122
    '}' 	shift, and go to state 123



state 63

    enumerator_list  ->  enumerator .   (rule 127)

    $default	reduce using rule 127 (enumerator_list)



state 64

    struct_or_union_specifier  ->  lxm_struct lxm_identifier '{' . struct_declaration_list '}'   (rule 99)

    error	shift, and go to state 65
    lxm_typedef_name	shift, and go to state 2
    lxm_char	shift, and go to state 4
    lxm_const	shift, and go to state 5
    lxm_double	shift, and go to state 6
    lxm_enum	shift, and go to state 7
    lxm_float	shift, and go to state 9
    lxm_int	shift, and go to state 10
    lxm_long	shift, and go to state 11
    lxm_short	shift, and go to state 13
    lxm_signed	shift, and go to state 14
    lxm_struct	shift, and go to state 16
    lxm_union	shift, and go to state 18
    lxm_unsigned	shift, and go to state 19
    lxm_void	shift, and go to state 20
    lxm_volatile	shift, and go to state 21

    type_specifier	go to state 66
    struct_or_union_specifier	go to state 28
    struct_declaration_list	go to state 124
    type_qualifier	go to state 68
    specifier_qualifier_list	go to state 69
    struct_declaration	go to state 70
    enum_specifier	go to state 30



state 65

    struct_declaration  ->  error . ';'   (rule 114)

    ';' 	shift, and go to state 125



state 66

    specifier_qualifier_list  ->  type_specifier .   (rule 109)

    $default	reduce using rule 109 (specifier_qualifier_list)



state 67

    struct_or_union_specifier  ->  lxm_struct '{' struct_declaration_list . '}'   (rule 101)
    struct_declaration_list  ->  struct_declaration_list . struct_declaration   (rule 106)

    error	shift, and go to state 65
    lxm_typedef_name	shift, and go to state 2
    lxm_char	shift, and go to state 4
    lxm_const	shift, and go to state 5
    lxm_double	shift, and go to state 6
    lxm_enum	shift, and go to state 7
    lxm_float	shift, and go to state 9
    lxm_int	shift, and go to state 10
    lxm_long	shift, and go to state 11
    lxm_short	shift, and go to state 13
    lxm_signed	shift, and go to state 14
    lxm_struct	shift, and go to state 16
    lxm_union	shift, and go to state 18
    lxm_unsigned	shift, and go to state 19
    lxm_void	shift, and go to state 20
    lxm_volatile	shift, and go to state 21
    '}' 	shift, and go to state 126

    type_specifier	go to state 66
    struct_or_union_specifier	go to state 28
    type_qualifier	go to state 68
    specifier_qualifier_list	go to state 69
    struct_declaration	go to state 127
    enum_specifier	go to state 30



state 68

    specifier_qualifier_list  ->  type_qualifier .   (rule 111)

    $default	reduce using rule 111 (specifier_qualifier_list)



state 69

    specifier_qualifier_list  ->  specifier_qualifier_list . type_specifier   (rule 110)
    specifier_qualifier_list  ->  specifier_qualifier_list . type_qualifier   (rule 112)
    struct_declaration  ->  specifier_qualifier_list . struct_declarator_list ';'   (rule 113)

    lxm_identifier	shift, and go to state 1
    lxm_typedef_name	shift, and go to state 2
    lxm_char	shift, and go to state 4
    lxm_const	shift, and go to state 5
    lxm_double	shift, and go to state 6
    lxm_enum	shift, and go to state 7
    lxm_float	shift, and go to state 9
    lxm_int	shift, and go to state 10
    lxm_long	shift, and go to state 11
    lxm_short	shift, and go to state 13
    lxm_signed	shift, and go to state 14
    lxm_struct	shift, and go to state 16
    lxm_union	shift, and go to state 18
    lxm_unsigned	shift, and go to state 19
    lxm_void	shift, and go to state 20
    lxm_volatile	shift, and go to state 21
    '(' 	shift, and go to state 22
    '*' 	shift, and go to state 23
    ':' 	shift, and go to state 128

    type_specifier	go to state 129
    struct_or_union_specifier	go to state 28
    type_qualifier	go to state 130
    struct_declarator_list	go to state 131
    struct_declarator	go to state 132
    enum_specifier	go to state 30
    declarator	go to state 133
    direct_declarator	go to state 32
    pointer	go to state 33



state 70

    struct_declaration_list  ->  struct_declaration .   (rule 105)

    $default	reduce using rule 105 (struct_declaration_list)



state 71

    struct_or_union_specifier  ->  lxm_union lxm_identifier '{' . struct_declaration_list '}'   (rule 100)

    error	shift, and go to state 65
    lxm_typedef_name	shift, and go to state 2
    lxm_char	shift, and go to state 4
    lxm_const	shift, and go to state 5
    lxm_double	shift, and go to state 6
    lxm_enum	shift, and go to state 7
    lxm_float	shift, and go to state 9
    lxm_int	shift, and go to state 10
    lxm_long	shift, and go to state 11
    lxm_short	shift, and go to state 13
    lxm_signed	shift, and go to state 14
    lxm_struct	shift, and go to state 16
    lxm_union	shift, and go to state 18
    lxm_unsigned	shift, and go to state 19
    lxm_void	shift, and go to state 20
    lxm_volatile	shift, and go to state 21

    type_specifier	go to state 66
    struct_or_union_specifier	go to state 28
    struct_declaration_list	go to state 134
    type_qualifier	go to state 68
    specifier_qualifier_list	go to state 69
    struct_declaration	go to state 70
    enum_specifier	go to state 30



state 72

    struct_or_union_specifier  ->  lxm_union '{' struct_declaration_list . '}'   (rule 102)
    struct_declaration_list  ->  struct_declaration_list . struct_declaration   (rule 106)

    error	shift, and go to state 65
    lxm_typedef_name	shift, and go to state 2
    lxm_char	shift, and go to state 4
    lxm_const	shift, and go to state 5
    lxm_double	shift, and go to state 6
    lxm_enum	shift, and go to state 7
    lxm_float	shift, and go to state 9
    lxm_int	shift, and go to state 10
    lxm_long	shift, and go to state 11
    lxm_short	shift, and go to state 13
    lxm_signed	shift, and go to state 14
    lxm_struct	shift, and go to state 16
    lxm_union	shift, and go to state 18
    lxm_unsigned	shift, and go to state 19
    lxm_void	shift, and go to state 20
    lxm_volatile	shift, and go to state 21
    '}' 	shift, and go to state 135

    type_specifier	go to state 66
    struct_or_union_specifier	go to state 28
    type_qualifier	go to state 68
    specifier_qualifier_list	go to state 69
    struct_declaration	go to state 127
    enum_specifier	go to state 30



state 73

    direct_declarator  ->  '(' declarator ')' .   (rule 134)

    $default	reduce using rule 134 (direct_declarator)



state 74

    type_qualifier_list  ->  type_qualifier_list type_qualifier .   (rule 146)

    $default	reduce using rule 146 (type_qualifier_list)



state 75

    pointer  ->  '*' type_qualifier_list pointer .   (rule 144)

    $default	reduce using rule 144 (pointer)



state 76

    declaration  ->  declaration_specifiers error ';' .   (rule 75)

    $default	reduce using rule 75 (declaration)



state 77

    init_declarator_list  ->  init_declarator_list ',' . init_declarator   (rule 121)

    lxm_identifier	shift, and go to state 1
    '(' 	shift, and go to state 22
    '*' 	shift, and go to state 23

    init_declarator	go to state 136
    declarator	go to state 137
    direct_declarator	go to state 32
    pointer	go to state 33



state 78

    declaration  ->  declaration_specifiers init_declarator_list ';' .   (rule 74)

    $default	reduce using rule 74 (declaration)



state 79

    init_declarator  ->  declarator '=' . initializer   (rule 123)

    lxm_identifier	shift, and go to state 90
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_sizeof	shift, and go to state 95
    '(' 	shift, and go to state 96
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    '{' 	shift, and go to state 138

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 139
    cast_expression	go to state 107
    multiplicative_expression	go to state 108
    additive_expression	go to state 109
    shift_expression	go to state 110
    relational_expression	go to state 111
    equality_expression	go to state 112
    and_expression	go to state 113
    exclusive_or_expression	go to state 114
    inclusive_or_expression	go to state 115
    logical_and_expression	go to state 116
    logical_or_expression	go to state 117
    conditional_expression	go to state 140
    assignment_expression	go to state 141
    initializer	go to state 142



state 80

    function_definition  ->  declaration_specifiers declarator @13 . compound_statement   (rule 224)

    '{' 	shift, and go to state 81

    compound_statement	go to state 143



state 81

    compound_statement  ->  '{' . @1 compound_statement_rest   (rule 186)

    $default	reduce using rule 185 (@1)

    @1  	go to state 144



state 82

    function_definition  ->  declarator @14 compound_statement .   (rule 226)

    $default	reduce using rule 226 (function_definition)



state 83

    direct_declarator  ->  direct_declarator '(' error . ')'   (rule 139)

    ')' 	shift, and go to state 145



state 84

    direct_declarator  ->  direct_declarator '(' ')' .   (rule 140)

    $default	reduce using rule 140 (direct_declarator)



state 85

    declaration_specifiers  ->  declaration_specifiers . storage_class_specifier   (rule 77)
    declaration_specifiers  ->  declaration_specifiers . type_specifier   (rule 79)
    declaration_specifiers  ->  declaration_specifiers . type_qualifier   (rule 81)
    parameter_declaration  ->  declaration_specifiers . declarator   (rule 151)
    parameter_declaration  ->  declaration_specifiers . abstract_declarator   (rule 152)
    parameter_declaration  ->  declaration_specifiers .   (rule 153)

    lxm_identifier	shift, and go to state 1
    lxm_typedef_name	shift, and go to state 2
    lxm_auto	shift, and go to state 3
    lxm_char	shift, and go to state 4
    lxm_const	shift, and go to state 5
    lxm_double	shift, and go to state 6
    lxm_enum	shift, and go to state 7
    lxm_extern	shift, and go to state 8
    lxm_float	shift, and go to state 9
    lxm_int	shift, and go to state 10
    lxm_long	shift, and go to state 11
    lxm_register	shift, and go to state 12
    lxm_short	shift, and go to state 13
    lxm_signed	shift, and go to state 14
    lxm_static	shift, and go to state 15
    lxm_struct	shift, and go to state 16
    lxm_typedef	shift, and go to state 17
    lxm_union	shift, and go to state 18
    lxm_unsigned	shift, and go to state 19
    lxm_void	shift, and go to state 20
    lxm_volatile	shift, and go to state 21
    '(' 	shift, and go to state 146
    '[' 	shift, and go to state 147
    '*' 	shift, and go to state 23

    $default	reduce using rule 153 (parameter_declaration)

    storage_class_specifier	go to state 49
    type_specifier	go to state 50
    struct_or_union_specifier	go to state 28
    type_qualifier	go to state 51
    enum_specifier	go to state 30
    declarator	go to state 148
    direct_declarator	go to state 32
    pointer	go to state 149
    abstract_declarator	go to state 150
    direct_abstract_declarator	go to state 151



state 86

    direct_declarator  ->  direct_declarator '(' parameter_type_list . ')'   (rule 138)

    ')' 	shift, and go to state 152



state 87

    parameter_type_list  ->  parameter_list .   (rule 147)
    parameter_type_list  ->  parameter_list . ',' lxm_ellipsis   (rule 148)
    parameter_list  ->  parameter_list . ',' parameter_declaration   (rule 150)

    ',' 	shift, and go to state 153

    $default	reduce using rule 147 (parameter_type_list)



state 88

    parameter_list  ->  parameter_declaration .   (rule 149)

    $default	reduce using rule 149 (parameter_list)



state 89

    direct_declarator  ->  direct_declarator '[' error . ']'   (rule 136)

    ']' 	shift, and go to state 154



state 90

    primary_expression  ->  lxm_identifier .   (rule 1)

    $default	reduce using rule 1 (primary_expression)



state 91

    primary_expression  ->  lxm_constant .   (rule 2)

    $default	reduce using rule 2 (primary_expression)



state 92

    primary_expression  ->  lxm_string_literal .   (rule 3)

    $default	reduce using rule 3 (primary_expression)



state 93

    unary_expression  ->  lxm_inc . unary_expression   (rule 16)

    lxm_identifier	shift, and go to state 90
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_sizeof	shift, and go to state 95
    '(' 	shift, and go to state 155
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 156



state 94

    unary_expression  ->  lxm_dec . unary_expression   (rule 17)

    lxm_identifier	shift, and go to state 90
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_sizeof	shift, and go to state 95
    '(' 	shift, and go to state 155
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 157



state 95

    unary_expression  ->  lxm_sizeof . unary_expression   (rule 18)
    unary_expression  ->  lxm_sizeof . '(' type_name ')'   (rule 19)

    lxm_identifier	shift, and go to state 90
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_sizeof	shift, and go to state 95
    '(' 	shift, and go to state 158
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 159



state 96

    primary_expression  ->  '(' . expression ')'   (rule 4)
    cast_expression  ->  '(' . type_name ')' cast_expression   (rule 27)

    lxm_identifier	shift, and go to state 90
    lxm_typedef_name	shift, and go to state 2
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_char	shift, and go to state 4
    lxm_const	shift, and go to state 5
    lxm_double	shift, and go to state 6
    lxm_enum	shift, and go to state 7
    lxm_float	shift, and go to state 9
    lxm_int	shift, and go to state 10
    lxm_long	shift, and go to state 11
    lxm_short	shift, and go to state 13
    lxm_signed	shift, and go to state 14
    lxm_sizeof	shift, and go to state 95
    lxm_struct	shift, and go to state 16
    lxm_union	shift, and go to state 18
    lxm_unsigned	shift, and go to state 19
    lxm_void	shift, and go to state 20
    lxm_volatile	shift, and go to state 21
    '(' 	shift, and go to state 96
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 139
    cast_expression	go to state 107
    multiplicative_expression	go to state 108
    additive_expression	go to state 109
    shift_expression	go to state 110
    relational_expression	go to state 111
    equality_expression	go to state 112
    and_expression	go to state 113
    exclusive_or_expression	go to state 114
    inclusive_or_expression	go to state 115
    logical_and_expression	go to state 116
    logical_or_expression	go to state 117
    conditional_expression	go to state 140
    assignment_expression	go to state 160
    expression	go to state 161
    type_specifier	go to state 66
    struct_or_union_specifier	go to state 28
    type_qualifier	go to state 68
    specifier_qualifier_list	go to state 162
    enum_specifier	go to state 30
    type_name	go to state 163



state 97

    direct_declarator  ->  direct_declarator '[' ']' .   (rule 137)

    $default	reduce using rule 137 (direct_declarator)



state 98

    unary_expression  ->  '&' . cast_expression   (rule 20)

    lxm_identifier	shift, and go to state 90
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_sizeof	shift, and go to state 95
    '(' 	shift, and go to state 96
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 106
    cast_expression	go to state 164



state 99

    unary_expression  ->  '*' . cast_expression   (rule 21)

    lxm_identifier	shift, and go to state 90
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_sizeof	shift, and go to state 95
    '(' 	shift, and go to state 96
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 106
    cast_expression	go to state 165



state 100

    unary_expression  ->  '+' . cast_expression   (rule 22)

    lxm_identifier	shift, and go to state 90
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_sizeof	shift, and go to state 95
    '(' 	shift, and go to state 96
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 106
    cast_expression	go to state 166



state 101

    unary_expression  ->  '-' . cast_expression   (rule 23)

    lxm_identifier	shift, and go to state 90
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_sizeof	shift, and go to state 95
    '(' 	shift, and go to state 96
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 106
    cast_expression	go to state 167



state 102

    unary_expression  ->  '~' . cast_expression   (rule 24)

    lxm_identifier	shift, and go to state 90
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_sizeof	shift, and go to state 95
    '(' 	shift, and go to state 96
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 106
    cast_expression	go to state 168



state 103

    unary_expression  ->  '!' . cast_expression   (rule 25)

    lxm_identifier	shift, and go to state 90
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_sizeof	shift, and go to state 95
    '(' 	shift, and go to state 96
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 106
    cast_expression	go to state 169



state 104

    postfix_expression  ->  primary_expression .   (rule 5)

    $default	reduce using rule 5 (postfix_expression)



state 105

    postfix_expression  ->  postfix_expression . lxm_inc   (rule 6)
    postfix_expression  ->  postfix_expression . lxm_dec   (rule 7)
    postfix_expression  ->  postfix_expression . '[' expression ']'   (rule 8)
    postfix_expression  ->  postfix_expression . '.' lxm_identifier   (rule 9)
    postfix_expression  ->  postfix_expression . lxm_arrow lxm_identifier   (rule 10)
    postfix_expression  ->  postfix_expression . '(' ')'   (rule 11)
    postfix_expression  ->  postfix_expression . '(' argument_expression_list ')'   (rule 12)
    unary_expression  ->  postfix_expression .   (rule 15)

    lxm_arrow	shift, and go to state 170
    lxm_inc	shift, and go to state 171
    lxm_dec	shift, and go to state 172
    '(' 	shift, and go to state 173
    '[' 	shift, and go to state 174
    '.' 	shift, and go to state 175

    $default	reduce using rule 15 (unary_expression)



state 106

    cast_expression  ->  unary_expression .   (rule 26)

    $default	reduce using rule 26 (cast_expression)



state 107

    multiplicative_expression  ->  cast_expression .   (rule 28)

    $default	reduce using rule 28 (multiplicative_expression)



state 108

    multiplicative_expression  ->  multiplicative_expression . '*' cast_expression   (rule 29)
    multiplicative_expression  ->  multiplicative_expression . '/' cast_expression   (rule 30)
    multiplicative_expression  ->  multiplicative_expression . '%' cast_expression   (rule 31)
    additive_expression  ->  multiplicative_expression .   (rule 32)

    '*' 	shift, and go to state 176
    '/' 	shift, and go to state 177
    '%' 	shift, and go to state 178

    $default	reduce using rule 32 (additive_expression)



state 109

    additive_expression  ->  additive_expression . '+' multiplicative_expression   (rule 33)
    additive_expression  ->  additive_expression . '-' multiplicative_expression   (rule 34)
    shift_expression  ->  additive_expression .   (rule 35)

    '+' 	shift, and go to state 179
    '-' 	shift, and go to state 180

    $default	reduce using rule 35 (shift_expression)



state 110

    shift_expression  ->  shift_expression . lxm_shl additive_expression   (rule 36)
    shift_expression  ->  shift_expression . lxm_shr additive_expression   (rule 37)
    relational_expression  ->  shift_expression .   (rule 38)

    lxm_shl	shift, and go to state 181
    lxm_shr	shift, and go to state 182

    $default	reduce using rule 38 (relational_expression)



state 111

    relational_expression  ->  relational_expression . '<' shift_expression   (rule 39)
    relational_expression  ->  relational_expression . '>' shift_expression   (rule 40)
    relational_expression  ->  relational_expression . lxm_le shift_expression   (rule 41)
    relational_expression  ->  relational_expression . lxm_ge shift_expression   (rule 42)
    equality_expression  ->  relational_expression .   (rule 43)

    lxm_le	shift, and go to state 183
    lxm_ge	shift, and go to state 184
    '<' 	shift, and go to state 185
    '>' 	shift, and go to state 186

    $default	reduce using rule 43 (equality_expression)



state 112

    equality_expression  ->  equality_expression . lxm_eq relational_expression   (rule 44)
    equality_expression  ->  equality_expression . lxm_ne relational_expression   (rule 45)
    and_expression  ->  equality_expression .   (rule 46)

    lxm_eq	shift, and go to state 187
    lxm_ne	shift, and go to state 188

    $default	reduce using rule 46 (and_expression)



state 113

    and_expression  ->  and_expression . '&' equality_expression   (rule 47)
    exclusive_or_expression  ->  and_expression .   (rule 48)

    '&' 	shift, and go to state 189

    $default	reduce using rule 48 (exclusive_or_expression)



state 114

    exclusive_or_expression  ->  exclusive_or_expression . '^' and_expression   (rule 49)
    inclusive_or_expression  ->  exclusive_or_expression .   (rule 50)

    '^' 	shift, and go to state 190

    $default	reduce using rule 50 (inclusive_or_expression)



state 115

    inclusive_or_expression  ->  inclusive_or_expression . '|' exclusive_or_expression   (rule 51)
    logical_and_expression  ->  inclusive_or_expression .   (rule 52)

    '|' 	shift, and go to state 191

    $default	reduce using rule 52 (logical_and_expression)



state 116

    logical_and_expression  ->  logical_and_expression . lxm_bool_and inclusive_or_expression   (rule 53)
    logical_or_expression  ->  logical_and_expression .   (rule 54)

    lxm_bool_and	shift, and go to state 192

    $default	reduce using rule 54 (logical_or_expression)



state 117

    logical_or_expression  ->  logical_or_expression . lxm_bool_or logical_and_expression   (rule 55)
    conditional_expression  ->  logical_or_expression .   (rule 56)
    conditional_expression  ->  logical_or_expression . '?' expression ':' conditional_expression   (rule 57)

    lxm_bool_or	shift, and go to state 193
    '?' 	shift, and go to state 194

    $default	reduce using rule 56 (conditional_expression)



state 118

    constant_expression  ->  conditional_expression .   (rule 72)

    $default	reduce using rule 72 (constant_expression)



state 119

    direct_declarator  ->  direct_declarator '[' constant_expression . ']'   (rule 135)

    ']' 	shift, and go to state 195



state 120

    enum_specifier  ->  lxm_enum lxm_identifier '{' enumerator_list . '}'   (rule 125)
    enumerator_list  ->  enumerator_list . ',' enumerator   (rule 128)

    ',' 	shift, and go to state 122
    '}' 	shift, and go to state 196



state 121

    enumerator  ->  lxm_identifier '=' . constant_expression   (rule 130)

    lxm_identifier	shift, and go to state 90
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_sizeof	shift, and go to state 95
    '(' 	shift, and go to state 96
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 106
    cast_expression	go to state 107
    multiplicative_expression	go to state 108
    additive_expression	go to state 109
    shift_expression	go to state 110
    relational_expression	go to state 111
    equality_expression	go to state 112
    and_expression	go to state 113
    exclusive_or_expression	go to state 114
    inclusive_or_expression	go to state 115
    logical_and_expression	go to state 116
    logical_or_expression	go to state 117
    conditional_expression	go to state 118
    constant_expression	go to state 197



state 122

    enumerator_list  ->  enumerator_list ',' . enumerator   (rule 128)

    lxm_identifier	shift, and go to state 61

    enumerator	go to state 198



state 123

    enum_specifier  ->  lxm_enum '{' enumerator_list '}' .   (rule 124)

    $default	reduce using rule 124 (enum_specifier)



state 124

    struct_or_union_specifier  ->  lxm_struct lxm_identifier '{' struct_declaration_list . '}'   (rule 99)
    struct_declaration_list  ->  struct_declaration_list . struct_declaration   (rule 106)

    error	shift, and go to state 65
    lxm_typedef_name	shift, and go to state 2
    lxm_char	shift, and go to state 4
    lxm_const	shift, and go to state 5
    lxm_double	shift, and go to state 6
    lxm_enum	shift, and go to state 7
    lxm_float	shift, and go to state 9
    lxm_int	shift, and go to state 10
    lxm_long	shift, and go to state 11
    lxm_short	shift, and go to state 13
    lxm_signed	shift, and go to state 14
    lxm_struct	shift, and go to state 16
    lxm_union	shift, and go to state 18
    lxm_unsigned	shift, and go to state 19
    lxm_void	shift, and go to state 20
    lxm_volatile	shift, and go to state 21
    '}' 	shift, and go to state 199

    type_specifier	go to state 66
    struct_or_union_specifier	go to state 28
    type_qualifier	go to state 68
    specifier_qualifier_list	go to state 69
    struct_declaration	go to state 127
    enum_specifier	go to state 30



state 125

    struct_declaration  ->  error ';' .   (rule 114)

    $default	reduce using rule 114 (struct_declaration)



state 126

    struct_or_union_specifier  ->  lxm_struct '{' struct_declaration_list '}' .   (rule 101)

    $default	reduce using rule 101 (struct_or_union_specifier)



state 127

    struct_declaration_list  ->  struct_declaration_list struct_declaration .   (rule 106)

    $default	reduce using rule 106 (struct_declaration_list)



state 128

    struct_declarator  ->  ':' . constant_expression   (rule 118)

    lxm_identifier	shift, and go to state 90
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_sizeof	shift, and go to state 95
    '(' 	shift, and go to state 96
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 106
    cast_expression	go to state 107
    multiplicative_expression	go to state 108
    additive_expression	go to state 109
    shift_expression	go to state 110
    relational_expression	go to state 111
    equality_expression	go to state 112
    and_expression	go to state 113
    exclusive_or_expression	go to state 114
    inclusive_or_expression	go to state 115
    logical_and_expression	go to state 116
    logical_or_expression	go to state 117
    conditional_expression	go to state 118
    constant_expression	go to state 200



state 129

    specifier_qualifier_list  ->  specifier_qualifier_list type_specifier .   (rule 110)

    $default	reduce using rule 110 (specifier_qualifier_list)



state 130

    specifier_qualifier_list  ->  specifier_qualifier_list type_qualifier .   (rule 112)

    $default	reduce using rule 112 (specifier_qualifier_list)



state 131

    struct_declaration  ->  specifier_qualifier_list struct_declarator_list . ';'   (rule 113)
    struct_declarator_list  ->  struct_declarator_list . ',' struct_declarator   (rule 116)

    ',' 	shift, and go to state 201
    ';' 	shift, and go to state 202



state 132

    struct_declarator_list  ->  struct_declarator .   (rule 115)

    $default	reduce using rule 115 (struct_declarator_list)



state 133

    struct_declarator  ->  declarator .   (rule 117)
    struct_declarator  ->  declarator . ':' constant_expression   (rule 119)

    ':' 	shift, and go to state 203

    $default	reduce using rule 117 (struct_declarator)



state 134

    struct_or_union_specifier  ->  lxm_union lxm_identifier '{' struct_declaration_list . '}'   (rule 100)
    struct_declaration_list  ->  struct_declaration_list . struct_declaration   (rule 106)

    error	shift, and go to state 65
    lxm_typedef_name	shift, and go to state 2
    lxm_char	shift, and go to state 4
    lxm_const	shift, and go to state 5
    lxm_double	shift, and go to state 6
    lxm_enum	shift, and go to state 7
    lxm_float	shift, and go to state 9
    lxm_int	shift, and go to state 10
    lxm_long	shift, and go to state 11
    lxm_short	shift, and go to state 13
    lxm_signed	shift, and go to state 14
    lxm_struct	shift, and go to state 16
    lxm_union	shift, and go to state 18
    lxm_unsigned	shift, and go to state 19
    lxm_void	shift, and go to state 20
    lxm_volatile	shift, and go to state 21
    '}' 	shift, and go to state 204

    type_specifier	go to state 66
    struct_or_union_specifier	go to state 28
    type_qualifier	go to state 68
    specifier_qualifier_list	go to state 69
    struct_declaration	go to state 127
    enum_specifier	go to state 30



state 135

    struct_or_union_specifier  ->  lxm_union '{' struct_declaration_list '}' .   (rule 102)

    $default	reduce using rule 102 (struct_or_union_specifier)



state 136

    init_declarator_list  ->  init_declarator_list ',' init_declarator .   (rule 121)

    $default	reduce using rule 121 (init_declarator_list)



state 137

    init_declarator  ->  declarator .   (rule 122)
    init_declarator  ->  declarator . '=' initializer   (rule 123)

    '=' 	shift, and go to state 79

    $default	reduce using rule 122 (init_declarator)



state 138

    initializer  ->  '{' . initializer_list '}'   (rule 173)
    initializer  ->  '{' . initializer_list ',' '}'   (rule 174)

    lxm_identifier	shift, and go to state 90
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_sizeof	shift, and go to state 95
    '(' 	shift, and go to state 96
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    '{' 	shift, and go to state 138

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 139
    cast_expression	go to state 107
    multiplicative_expression	go to state 108
    additive_expression	go to state 109
    shift_expression	go to state 110
    relational_expression	go to state 111
    equality_expression	go to state 112
    and_expression	go to state 113
    exclusive_or_expression	go to state 114
    inclusive_or_expression	go to state 115
    logical_and_expression	go to state 116
    logical_or_expression	go to state 117
    conditional_expression	go to state 140
    assignment_expression	go to state 141
    initializer	go to state 205
    initializer_list	go to state 206



state 139

    cast_expression  ->  unary_expression .   (rule 26)
    assignment_expression  ->  unary_expression . '=' assignment_expression   (rule 59)
    assignment_expression  ->  unary_expression . lxm_add_assign assignment_expression   (rule 60)
    assignment_expression  ->  unary_expression . lxm_sub_assign assignment_expression   (rule 61)
    assignment_expression  ->  unary_expression . lxm_mul_assign assignment_expression   (rule 62)
    assignment_expression  ->  unary_expression . lxm_div_assign assignment_expression   (rule 63)
    assignment_expression  ->  unary_expression . lxm_mod_assign assignment_expression   (rule 64)
    assignment_expression  ->  unary_expression . lxm_shl_assign assignment_expression   (rule 65)
    assignment_expression  ->  unary_expression . lxm_shr_assign assignment_expression   (rule 66)
    assignment_expression  ->  unary_expression . lxm_and_assign assignment_expression   (rule 67)
    assignment_expression  ->  unary_expression . lxm_xor_assign assignment_expression   (rule 68)
    assignment_expression  ->  unary_expression . lxm_or_assign assignment_expression   (rule 69)

    lxm_mul_assign	shift, and go to state 207
    lxm_div_assign	shift, and go to state 208
    lxm_mod_assign	shift, and go to state 209
    lxm_add_assign	shift, and go to state 210
    lxm_sub_assign	shift, and go to state 211
    lxm_shl_assign	shift, and go to state 212
    lxm_shr_assign	shift, and go to state 213
    lxm_and_assign	shift, and go to state 214
    lxm_xor_assign	shift, and go to state 215
    lxm_or_assign	shift, and go to state 216
    '=' 	shift, and go to state 217

    $default	reduce using rule 26 (cast_expression)



state 140

    assignment_expression  ->  conditional_expression .   (rule 58)

    $default	reduce using rule 58 (assignment_expression)



state 141

    initializer  ->  assignment_expression .   (rule 172)

    $default	reduce using rule 172 (initializer)



state 142

    init_declarator  ->  declarator '=' initializer .   (rule 123)

    $default	reduce using rule 123 (init_declarator)



state 143

    function_definition  ->  declaration_specifiers declarator @13 compound_statement .   (rule 224)

    $default	reduce using rule 224 (function_definition)



state 144

    compound_statement  ->  '{' @1 . compound_statement_rest   (rule 186)

    error	shift, and go to state 218
    lxm_identifier	shift, and go to state 219
    lxm_typedef_name	shift, and go to state 2
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_auto	shift, and go to state 3
    lxm_break	shift, and go to state 220
    lxm_case	shift, and go to state 221
    lxm_char	shift, and go to state 4
    lxm_const	shift, and go to state 5
    lxm_continue	shift, and go to state 222
    lxm_default	shift, and go to state 223
    lxm_do	shift, and go to state 224
    lxm_double	shift, and go to state 6
    lxm_enum	shift, and go to state 7
    lxm_extern	shift, and go to state 8
    lxm_float	shift, and go to state 9
    lxm_for	shift, and go to state 225
    lxm_goto	shift, and go to state 226
    lxm_if	shift, and go to state 227
    lxm_int	shift, and go to state 10
    lxm_long	shift, and go to state 11
    lxm_register	shift, and go to state 12
    lxm_return	shift, and go to state 228
    lxm_short	shift, and go to state 13
    lxm_signed	shift, and go to state 14
    lxm_sizeof	shift, and go to state 95
    lxm_static	shift, and go to state 15
    lxm_struct	shift, and go to state 16
    lxm_switch	shift, and go to state 229
    lxm_typedef	shift, and go to state 17
    lxm_union	shift, and go to state 18
    lxm_unsigned	shift, and go to state 19
    lxm_void	shift, and go to state 20
    lxm_volatile	shift, and go to state 21
    lxm_while	shift, and go to state 230
    '(' 	shift, and go to state 96
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    ';' 	shift, and go to state 231
    '{' 	shift, and go to state 81
    '}' 	shift, and go to state 232

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 139
    cast_expression	go to state 107
    multiplicative_expression	go to state 108
    additive_expression	go to state 109
    shift_expression	go to state 110
    relational_expression	go to state 111
    equality_expression	go to state 112
    and_expression	go to state 113
    exclusive_or_expression	go to state 114
    inclusive_or_expression	go to state 115
    logical_and_expression	go to state 116
    logical_or_expression	go to state 117
    conditional_expression	go to state 140
    assignment_expression	go to state 160
    expression	go to state 233
    declaration	go to state 234
    declaration_specifiers	go to state 235
    storage_class_specifier	go to state 26
    type_specifier	go to state 27
    struct_or_union_specifier	go to state 28
    type_qualifier	go to state 29
    enum_specifier	go to state 30
    declaration_or_statement	go to state 236
    declaration_or_statement_list	go to state 237
    compound_statement_rest	go to state 238
    compound_statement	go to state 239
    expression_statement	go to state 240
    if_statement	go to state 241
    for_statement	go to state 242
    statement	go to state 243



state 145

    direct_declarator  ->  direct_declarator '(' error ')' .   (rule 139)

    $default	reduce using rule 139 (direct_declarator)



state 146

    direct_declarator  ->  '(' . declarator ')'   (rule 134)
    direct_abstract_declarator  ->  '(' . abstract_declarator ')'   (rule 159)
    direct_abstract_declarator  ->  '(' . ')'   (rule 166)
    direct_abstract_declarator  ->  '(' . parameter_type_list ')'   (rule 167)
    direct_abstract_declarator  ->  '(' . error ')'   (rule 168)

    error	shift, and go to state 244
    lxm_identifier	shift, and go to state 1
    lxm_typedef_name	shift, and go to state 2
    lxm_auto	shift, and go to state 3
    lxm_char	shift, and go to state 4
    lxm_const	shift, and go to state 5
    lxm_double	shift, and go to state 6
    lxm_enum	shift, and go to state 7
    lxm_extern	shift, and go to state 8
    lxm_float	shift, and go to state 9
    lxm_int	shift, and go to state 10
    lxm_long	shift, and go to state 11
    lxm_register	shift, and go to state 12
    lxm_short	shift, and go to state 13
    lxm_signed	shift, and go to state 14
    lxm_static	shift, and go to state 15
    lxm_struct	shift, and go to state 16
    lxm_typedef	shift, and go to state 17
    lxm_union	shift, and go to state 18
    lxm_unsigned	shift, and go to state 19
    lxm_void	shift, and go to state 20
    lxm_volatile	shift, and go to state 21
    '(' 	shift, and go to state 146
    ')' 	shift, and go to state 245
    '[' 	shift, and go to state 147
    '*' 	shift, and go to state 23

    declaration_specifiers	go to state 85
    storage_class_specifier	go to state 26
    type_specifier	go to state 27
    struct_or_union_specifier	go to state 28
    type_qualifier	go to state 29
    enum_specifier	go to state 30
    declarator	go to state 43
    direct_declarator	go to state 32
    pointer	go to state 149
    parameter_type_list	go to state 246
    parameter_list	go to state 87
    parameter_declaration	go to state 88
    abstract_declarator	go to state 247
    direct_abstract_declarator	go to state 151



state 147

    direct_abstract_declarator  ->  '[' . ']'   (rule 160)
    direct_abstract_declarator  ->  '[' . constant_expression ']'   (rule 161)
    direct_abstract_declarator  ->  '[' . error ']'   (rule 162)

    error	shift, and go to state 248
    lxm_identifier	shift, and go to state 90
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_sizeof	shift, and go to state 95
    '(' 	shift, and go to state 96
    ']' 	shift, and go to state 249
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 106
    cast_expression	go to state 107
    multiplicative_expression	go to state 108
    additive_expression	go to state 109
    shift_expression	go to state 110
    relational_expression	go to state 111
    equality_expression	go to state 112
    and_expression	go to state 113
    exclusive_or_expression	go to state 114
    inclusive_or_expression	go to state 115
    logical_and_expression	go to state 116
    logical_or_expression	go to state 117
    conditional_expression	go to state 118
    constant_expression	go to state 250



state 148

    parameter_declaration  ->  declaration_specifiers declarator .   (rule 151)

    $default	reduce using rule 151 (parameter_declaration)



state 149

    declarator  ->  pointer . direct_declarator   (rule 131)
    abstract_declarator  ->  pointer .   (rule 156)
    abstract_declarator  ->  pointer . direct_abstract_declarator   (rule 158)

    lxm_identifier	shift, and go to state 1
    '(' 	shift, and go to state 146
    '[' 	shift, and go to state 147

    $default	reduce using rule 156 (abstract_declarator)

    direct_declarator	go to state 58
    direct_abstract_declarator	go to state 251



state 150

    parameter_declaration  ->  declaration_specifiers abstract_declarator .   (rule 152)

    $default	reduce using rule 152 (parameter_declaration)



state 151

    abstract_declarator  ->  direct_abstract_declarator .   (rule 157)
    direct_abstract_declarator  ->  direct_abstract_declarator . '[' ']'   (rule 163)
    direct_abstract_declarator  ->  direct_abstract_declarator . '[' constant_expression ']'   (rule 164)
    direct_abstract_declarator  ->  direct_abstract_declarator . '[' error ']'   (rule 165)
    direct_abstract_declarator  ->  direct_abstract_declarator . '(' ')'   (rule 169)
    direct_abstract_declarator  ->  direct_abstract_declarator . '(' parameter_type_list ')'   (rule 170)
    direct_abstract_declarator  ->  direct_abstract_declarator . '(' error ')'   (rule 171)

    '(' 	shift, and go to state 252
    '[' 	shift, and go to state 253

    $default	reduce using rule 157 (abstract_declarator)



state 152

    direct_declarator  ->  direct_declarator '(' parameter_type_list ')' .   (rule 138)

    $default	reduce using rule 138 (direct_declarator)



state 153

    parameter_type_list  ->  parameter_list ',' . lxm_ellipsis   (rule 148)
    parameter_list  ->  parameter_list ',' . parameter_declaration   (rule 150)

    lxm_typedef_name	shift, and go to state 2
    lxm_ellipsis	shift, and go to state 254
    lxm_auto	shift, and go to state 3
    lxm_char	shift, and go to state 4
    lxm_const	shift, and go to state 5
    lxm_double	shift, and go to state 6
    lxm_enum	shift, and go to state 7
    lxm_extern	shift, and go to state 8
    lxm_float	shift, and go to state 9
    lxm_int	shift, and go to state 10
    lxm_long	shift, and go to state 11
    lxm_register	shift, and go to state 12
    lxm_short	shift, and go to state 13
    lxm_signed	shift, and go to state 14
    lxm_static	shift, and go to state 15
    lxm_struct	shift, and go to state 16
    lxm_typedef	shift, and go to state 17
    lxm_union	shift, and go to state 18
    lxm_unsigned	shift, and go to state 19
    lxm_void	shift, and go to state 20
    lxm_volatile	shift, and go to state 21

    declaration_specifiers	go to state 85
    storage_class_specifier	go to state 26
    type_specifier	go to state 27
    struct_or_union_specifier	go to state 28
    type_qualifier	go to state 29
    enum_specifier	go to state 30
    parameter_declaration	go to state 255



state 154

    direct_declarator  ->  direct_declarator '[' error ']' .   (rule 136)

    $default	reduce using rule 136 (direct_declarator)



state 155

    primary_expression  ->  '(' . expression ')'   (rule 4)

    lxm_identifier	shift, and go to state 90
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_sizeof	shift, and go to state 95
    '(' 	shift, and go to state 96
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 139
    cast_expression	go to state 107
    multiplicative_expression	go to state 108
    additive_expression	go to state 109
    shift_expression	go to state 110
    relational_expression	go to state 111
    equality_expression	go to state 112
    and_expression	go to state 113
    exclusive_or_expression	go to state 114
    inclusive_or_expression	go to state 115
    logical_and_expression	go to state 116
    logical_or_expression	go to state 117
    conditional_expression	go to state 140
    assignment_expression	go to state 160
    expression	go to state 161



state 156

    unary_expression  ->  lxm_inc unary_expression .   (rule 16)

    $default	reduce using rule 16 (unary_expression)



state 157

    unary_expression  ->  lxm_dec unary_expression .   (rule 17)

    $default	reduce using rule 17 (unary_expression)



state 158

    primary_expression  ->  '(' . expression ')'   (rule 4)
    unary_expression  ->  lxm_sizeof '(' . type_name ')'   (rule 19)

    lxm_identifier	shift, and go to state 90
    lxm_typedef_name	shift, and go to state 2
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_char	shift, and go to state 4
    lxm_const	shift, and go to state 5
    lxm_double	shift, and go to state 6
    lxm_enum	shift, and go to state 7
    lxm_float	shift, and go to state 9
    lxm_int	shift, and go to state 10
    lxm_long	shift, and go to state 11
    lxm_short	shift, and go to state 13
    lxm_signed	shift, and go to state 14
    lxm_sizeof	shift, and go to state 95
    lxm_struct	shift, and go to state 16
    lxm_union	shift, and go to state 18
    lxm_unsigned	shift, and go to state 19
    lxm_void	shift, and go to state 20
    lxm_volatile	shift, and go to state 21
    '(' 	shift, and go to state 96
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 139
    cast_expression	go to state 107
    multiplicative_expression	go to state 108
    additive_expression	go to state 109
    shift_expression	go to state 110
    relational_expression	go to state 111
    equality_expression	go to state 112
    and_expression	go to state 113
    exclusive_or_expression	go to state 114
    inclusive_or_expression	go to state 115
    logical_and_expression	go to state 116
    logical_or_expression	go to state 117
    conditional_expression	go to state 140
    assignment_expression	go to state 160
    expression	go to state 161
    type_specifier	go to state 66
    struct_or_union_specifier	go to state 28
    type_qualifier	go to state 68
    specifier_qualifier_list	go to state 162
    enum_specifier	go to state 30
    type_name	go to state 256



state 159

    unary_expression  ->  lxm_sizeof unary_expression .   (rule 18)

    $default	reduce using rule 18 (unary_expression)



state 160

    expression  ->  assignment_expression .   (rule 70)

    $default	reduce using rule 70 (expression)



state 161

    primary_expression  ->  '(' expression . ')'   (rule 4)
    expression  ->  expression . ',' assignment_expression   (rule 71)

    ')' 	shift, and go to state 257
    ',' 	shift, and go to state 258



state 162

    specifier_qualifier_list  ->  specifier_qualifier_list . type_specifier   (rule 110)
    specifier_qualifier_list  ->  specifier_qualifier_list . type_qualifier   (rule 112)
    type_name  ->  specifier_qualifier_list .   (rule 154)
    type_name  ->  specifier_qualifier_list . abstract_declarator   (rule 155)

    lxm_typedef_name	shift, and go to state 2
    lxm_char	shift, and go to state 4
    lxm_const	shift, and go to state 5
    lxm_double	shift, and go to state 6
    lxm_enum	shift, and go to state 7
    lxm_float	shift, and go to state 9
    lxm_int	shift, and go to state 10
    lxm_long	shift, and go to state 11
    lxm_short	shift, and go to state 13
    lxm_signed	shift, and go to state 14
    lxm_struct	shift, and go to state 16
    lxm_union	shift, and go to state 18
    lxm_unsigned	shift, and go to state 19
    lxm_void	shift, and go to state 20
    lxm_volatile	shift, and go to state 21
    '(' 	shift, and go to state 259
    '[' 	shift, and go to state 147
    '*' 	shift, and go to state 23

    $default	reduce using rule 154 (type_name)

    type_specifier	go to state 129
    struct_or_union_specifier	go to state 28
    type_qualifier	go to state 130
    enum_specifier	go to state 30
    pointer	go to state 260
    abstract_declarator	go to state 261
    direct_abstract_declarator	go to state 151



state 163

    cast_expression  ->  '(' type_name . ')' cast_expression   (rule 27)

    ')' 	shift, and go to state 262



state 164

    unary_expression  ->  '&' cast_expression .   (rule 20)

    $default	reduce using rule 20 (unary_expression)



state 165

    unary_expression  ->  '*' cast_expression .   (rule 21)

    $default	reduce using rule 21 (unary_expression)



state 166

    unary_expression  ->  '+' cast_expression .   (rule 22)

    $default	reduce using rule 22 (unary_expression)



state 167

    unary_expression  ->  '-' cast_expression .   (rule 23)

    $default	reduce using rule 23 (unary_expression)



state 168

    unary_expression  ->  '~' cast_expression .   (rule 24)

    $default	reduce using rule 24 (unary_expression)



state 169

    unary_expression  ->  '!' cast_expression .   (rule 25)

    $default	reduce using rule 25 (unary_expression)



state 170

    postfix_expression  ->  postfix_expression lxm_arrow . lxm_identifier   (rule 10)

    lxm_identifier	shift, and go to state 263



state 171

    postfix_expression  ->  postfix_expression lxm_inc .   (rule 6)

    $default	reduce using rule 6 (postfix_expression)



state 172

    postfix_expression  ->  postfix_expression lxm_dec .   (rule 7)

    $default	reduce using rule 7 (postfix_expression)



state 173

    postfix_expression  ->  postfix_expression '(' . ')'   (rule 11)
    postfix_expression  ->  postfix_expression '(' . argument_expression_list ')'   (rule 12)

    lxm_identifier	shift, and go to state 90
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_sizeof	shift, and go to state 95
    '(' 	shift, and go to state 96
    ')' 	shift, and go to state 264
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 104
    postfix_expression	go to state 105
    argument_expression_list	go to state 265
    unary_expression	go to state 139
    cast_expression	go to state 107
    multiplicative_expression	go to state 108
    additive_expression	go to state 109
    shift_expression	go to state 110
    relational_expression	go to state 111
    equality_expression	go to state 112
    and_expression	go to state 113
    exclusive_or_expression	go to state 114
    inclusive_or_expression	go to state 115
    logical_and_expression	go to state 116
    logical_or_expression	go to state 117
    conditional_expression	go to state 140
    assignment_expression	go to state 266



state 174

    postfix_expression  ->  postfix_expression '[' . expression ']'   (rule 8)

    lxm_identifier	shift, and go to state 90
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_sizeof	shift, and go to state 95
    '(' 	shift, and go to state 96
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 139
    cast_expression	go to state 107
    multiplicative_expression	go to state 108
    additive_expression	go to state 109
    shift_expression	go to state 110
    relational_expression	go to state 111
    equality_expression	go to state 112
    and_expression	go to state 113
    exclusive_or_expression	go to state 114
    inclusive_or_expression	go to state 115
    logical_and_expression	go to state 116
    logical_or_expression	go to state 117
    conditional_expression	go to state 140
    assignment_expression	go to state 160
    expression	go to state 267



state 175

    postfix_expression  ->  postfix_expression '.' . lxm_identifier   (rule 9)

    lxm_identifier	shift, and go to state 268



state 176

    multiplicative_expression  ->  multiplicative_expression '*' . cast_expression   (rule 29)

    lxm_identifier	shift, and go to state 90
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_sizeof	shift, and go to state 95
    '(' 	shift, and go to state 96
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 106
    cast_expression	go to state 269



state 177

    multiplicative_expression  ->  multiplicative_expression '/' . cast_expression   (rule 30)

    lxm_identifier	shift, and go to state 90
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_sizeof	shift, and go to state 95
    '(' 	shift, and go to state 96
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 106
    cast_expression	go to state 270



state 178

    multiplicative_expression  ->  multiplicative_expression '%' . cast_expression   (rule 31)

    lxm_identifier	shift, and go to state 90
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_sizeof	shift, and go to state 95
    '(' 	shift, and go to state 96
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 106
    cast_expression	go to state 271



state 179

    additive_expression  ->  additive_expression '+' . multiplicative_expression   (rule 33)

    lxm_identifier	shift, and go to state 90
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_sizeof	shift, and go to state 95
    '(' 	shift, and go to state 96
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 106
    cast_expression	go to state 107
    multiplicative_expression	go to state 272



state 180

    additive_expression  ->  additive_expression '-' . multiplicative_expression   (rule 34)

    lxm_identifier	shift, and go to state 90
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_sizeof	shift, and go to state 95
    '(' 	shift, and go to state 96
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 106
    cast_expression	go to state 107
    multiplicative_expression	go to state 273



state 181

    shift_expression  ->  shift_expression lxm_shl . additive_expression   (rule 36)

    lxm_identifier	shift, and go to state 90
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_sizeof	shift, and go to state 95
    '(' 	shift, and go to state 96
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 106
    cast_expression	go to state 107
    multiplicative_expression	go to state 108
    additive_expression	go to state 274



state 182

    shift_expression  ->  shift_expression lxm_shr . additive_expression   (rule 37)

    lxm_identifier	shift, and go to state 90
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_sizeof	shift, and go to state 95
    '(' 	shift, and go to state 96
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 106
    cast_expression	go to state 107
    multiplicative_expression	go to state 108
    additive_expression	go to state 275



state 183

    relational_expression  ->  relational_expression lxm_le . shift_expression   (rule 41)

    lxm_identifier	shift, and go to state 90
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_sizeof	shift, and go to state 95
    '(' 	shift, and go to state 96
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 106
    cast_expression	go to state 107
    multiplicative_expression	go to state 108
    additive_expression	go to state 109
    shift_expression	go to state 276



state 184

    relational_expression  ->  relational_expression lxm_ge . shift_expression   (rule 42)

    lxm_identifier	shift, and go to state 90
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_sizeof	shift, and go to state 95
    '(' 	shift, and go to state 96
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 106
    cast_expression	go to state 107
    multiplicative_expression	go to state 108
    additive_expression	go to state 109
    shift_expression	go to state 277



state 185

    relational_expression  ->  relational_expression '<' . shift_expression   (rule 39)

    lxm_identifier	shift, and go to state 90
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_sizeof	shift, and go to state 95
    '(' 	shift, and go to state 96
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 106
    cast_expression	go to state 107
    multiplicative_expression	go to state 108
    additive_expression	go to state 109
    shift_expression	go to state 278



state 186

    relational_expression  ->  relational_expression '>' . shift_expression   (rule 40)

    lxm_identifier	shift, and go to state 90
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_sizeof	shift, and go to state 95
    '(' 	shift, and go to state 96
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 106
    cast_expression	go to state 107
    multiplicative_expression	go to state 108
    additive_expression	go to state 109
    shift_expression	go to state 279



state 187

    equality_expression  ->  equality_expression lxm_eq . relational_expression   (rule 44)

    lxm_identifier	shift, and go to state 90
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_sizeof	shift, and go to state 95
    '(' 	shift, and go to state 96
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 106
    cast_expression	go to state 107
    multiplicative_expression	go to state 108
    additive_expression	go to state 109
    shift_expression	go to state 110
    relational_expression	go to state 280



state 188

    equality_expression  ->  equality_expression lxm_ne . relational_expression   (rule 45)

    lxm_identifier	shift, and go to state 90
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_sizeof	shift, and go to state 95
    '(' 	shift, and go to state 96
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 106
    cast_expression	go to state 107
    multiplicative_expression	go to state 108
    additive_expression	go to state 109
    shift_expression	go to state 110
    relational_expression	go to state 281



state 189

    and_expression  ->  and_expression '&' . equality_expression   (rule 47)

    lxm_identifier	shift, and go to state 90
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_sizeof	shift, and go to state 95
    '(' 	shift, and go to state 96
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 106
    cast_expression	go to state 107
    multiplicative_expression	go to state 108
    additive_expression	go to state 109
    shift_expression	go to state 110
    relational_expression	go to state 111
    equality_expression	go to state 282



state 190

    exclusive_or_expression  ->  exclusive_or_expression '^' . and_expression   (rule 49)

    lxm_identifier	shift, and go to state 90
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_sizeof	shift, and go to state 95
    '(' 	shift, and go to state 96
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 106
    cast_expression	go to state 107
    multiplicative_expression	go to state 108
    additive_expression	go to state 109
    shift_expression	go to state 110
    relational_expression	go to state 111
    equality_expression	go to state 112
    and_expression	go to state 283



state 191

    inclusive_or_expression  ->  inclusive_or_expression '|' . exclusive_or_expression   (rule 51)

    lxm_identifier	shift, and go to state 90
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_sizeof	shift, and go to state 95
    '(' 	shift, and go to state 96
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 106
    cast_expression	go to state 107
    multiplicative_expression	go to state 108
    additive_expression	go to state 109
    shift_expression	go to state 110
    relational_expression	go to state 111
    equality_expression	go to state 112
    and_expression	go to state 113
    exclusive_or_expression	go to state 284



state 192

    logical_and_expression  ->  logical_and_expression lxm_bool_and . inclusive_or_expression   (rule 53)

    lxm_identifier	shift, and go to state 90
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_sizeof	shift, and go to state 95
    '(' 	shift, and go to state 96
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 106
    cast_expression	go to state 107
    multiplicative_expression	go to state 108
    additive_expression	go to state 109
    shift_expression	go to state 110
    relational_expression	go to state 111
    equality_expression	go to state 112
    and_expression	go to state 113
    exclusive_or_expression	go to state 114
    inclusive_or_expression	go to state 285



state 193

    logical_or_expression  ->  logical_or_expression lxm_bool_or . logical_and_expression   (rule 55)

    lxm_identifier	shift, and go to state 90
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_sizeof	shift, and go to state 95
    '(' 	shift, and go to state 96
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 106
    cast_expression	go to state 107
    multiplicative_expression	go to state 108
    additive_expression	go to state 109
    shift_expression	go to state 110
    relational_expression	go to state 111
    equality_expression	go to state 112
    and_expression	go to state 113
    exclusive_or_expression	go to state 114
    inclusive_or_expression	go to state 115
    logical_and_expression	go to state 286



state 194

    conditional_expression  ->  logical_or_expression '?' . expression ':' conditional_expression   (rule 57)

    lxm_identifier	shift, and go to state 90
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_sizeof	shift, and go to state 95
    '(' 	shift, and go to state 96
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 139
    cast_expression	go to state 107
    multiplicative_expression	go to state 108
    additive_expression	go to state 109
    shift_expression	go to state 110
    relational_expression	go to state 111
    equality_expression	go to state 112
    and_expression	go to state 113
    exclusive_or_expression	go to state 114
    inclusive_or_expression	go to state 115
    logical_and_expression	go to state 116
    logical_or_expression	go to state 117
    conditional_expression	go to state 140
    assignment_expression	go to state 160
    expression	go to state 287



state 195

    direct_declarator  ->  direct_declarator '[' constant_expression ']' .   (rule 135)

    $default	reduce using rule 135 (direct_declarator)



state 196

    enum_specifier  ->  lxm_enum lxm_identifier '{' enumerator_list '}' .   (rule 125)

    $default	reduce using rule 125 (enum_specifier)



state 197

    enumerator  ->  lxm_identifier '=' constant_expression .   (rule 130)

    $default	reduce using rule 130 (enumerator)



state 198

    enumerator_list  ->  enumerator_list ',' enumerator .   (rule 128)

    $default	reduce using rule 128 (enumerator_list)



state 199

    struct_or_union_specifier  ->  lxm_struct lxm_identifier '{' struct_declaration_list '}' .   (rule 99)

    $default	reduce using rule 99 (struct_or_union_specifier)



state 200

    struct_declarator  ->  ':' constant_expression .   (rule 118)

    $default	reduce using rule 118 (struct_declarator)



state 201

    struct_declarator_list  ->  struct_declarator_list ',' . struct_declarator   (rule 116)

    lxm_identifier	shift, and go to state 1
    '(' 	shift, and go to state 22
    '*' 	shift, and go to state 23
    ':' 	shift, and go to state 128

    struct_declarator	go to state 288
    declarator	go to state 133
    direct_declarator	go to state 32
    pointer	go to state 33



state 202

    struct_declaration  ->  specifier_qualifier_list struct_declarator_list ';' .   (rule 113)

    $default	reduce using rule 113 (struct_declaration)



state 203

    struct_declarator  ->  declarator ':' . constant_expression   (rule 119)

    lxm_identifier	shift, and go to state 90
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_sizeof	shift, and go to state 95
    '(' 	shift, and go to state 96
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 106
    cast_expression	go to state 107
    multiplicative_expression	go to state 108
    additive_expression	go to state 109
    shift_expression	go to state 110
    relational_expression	go to state 111
    equality_expression	go to state 112
    and_expression	go to state 113
    exclusive_or_expression	go to state 114
    inclusive_or_expression	go to state 115
    logical_and_expression	go to state 116
    logical_or_expression	go to state 117
    conditional_expression	go to state 118
    constant_expression	go to state 289



state 204

    struct_or_union_specifier  ->  lxm_union lxm_identifier '{' struct_declaration_list '}' .   (rule 100)

    $default	reduce using rule 100 (struct_or_union_specifier)



state 205

    initializer_list  ->  initializer .   (rule 175)

    $default	reduce using rule 175 (initializer_list)



state 206

    initializer  ->  '{' initializer_list . '}'   (rule 173)
    initializer  ->  '{' initializer_list . ',' '}'   (rule 174)
    initializer_list  ->  initializer_list . ',' initializer   (rule 176)

    ',' 	shift, and go to state 290
    '}' 	shift, and go to state 291



state 207

    assignment_expression  ->  unary_expression lxm_mul_assign . assignment_expression   (rule 62)

    lxm_identifier	shift, and go to state 90
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_sizeof	shift, and go to state 95
    '(' 	shift, and go to state 96
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 139
    cast_expression	go to state 107
    multiplicative_expression	go to state 108
    additive_expression	go to state 109
    shift_expression	go to state 110
    relational_expression	go to state 111
    equality_expression	go to state 112
    and_expression	go to state 113
    exclusive_or_expression	go to state 114
    inclusive_or_expression	go to state 115
    logical_and_expression	go to state 116
    logical_or_expression	go to state 117
    conditional_expression	go to state 140
    assignment_expression	go to state 292



state 208

    assignment_expression  ->  unary_expression lxm_div_assign . assignment_expression   (rule 63)

    lxm_identifier	shift, and go to state 90
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_sizeof	shift, and go to state 95
    '(' 	shift, and go to state 96
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 139
    cast_expression	go to state 107
    multiplicative_expression	go to state 108
    additive_expression	go to state 109
    shift_expression	go to state 110
    relational_expression	go to state 111
    equality_expression	go to state 112
    and_expression	go to state 113
    exclusive_or_expression	go to state 114
    inclusive_or_expression	go to state 115
    logical_and_expression	go to state 116
    logical_or_expression	go to state 117
    conditional_expression	go to state 140
    assignment_expression	go to state 293



state 209

    assignment_expression  ->  unary_expression lxm_mod_assign . assignment_expression   (rule 64)

    lxm_identifier	shift, and go to state 90
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_sizeof	shift, and go to state 95
    '(' 	shift, and go to state 96
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 139
    cast_expression	go to state 107
    multiplicative_expression	go to state 108
    additive_expression	go to state 109
    shift_expression	go to state 110
    relational_expression	go to state 111
    equality_expression	go to state 112
    and_expression	go to state 113
    exclusive_or_expression	go to state 114
    inclusive_or_expression	go to state 115
    logical_and_expression	go to state 116
    logical_or_expression	go to state 117
    conditional_expression	go to state 140
    assignment_expression	go to state 294



state 210

    assignment_expression  ->  unary_expression lxm_add_assign . assignment_expression   (rule 60)

    lxm_identifier	shift, and go to state 90
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_sizeof	shift, and go to state 95
    '(' 	shift, and go to state 96
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 139
    cast_expression	go to state 107
    multiplicative_expression	go to state 108
    additive_expression	go to state 109
    shift_expression	go to state 110
    relational_expression	go to state 111
    equality_expression	go to state 112
    and_expression	go to state 113
    exclusive_or_expression	go to state 114
    inclusive_or_expression	go to state 115
    logical_and_expression	go to state 116
    logical_or_expression	go to state 117
    conditional_expression	go to state 140
    assignment_expression	go to state 295



state 211

    assignment_expression  ->  unary_expression lxm_sub_assign . assignment_expression   (rule 61)

    lxm_identifier	shift, and go to state 90
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_sizeof	shift, and go to state 95
    '(' 	shift, and go to state 96
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 139
    cast_expression	go to state 107
    multiplicative_expression	go to state 108
    additive_expression	go to state 109
    shift_expression	go to state 110
    relational_expression	go to state 111
    equality_expression	go to state 112
    and_expression	go to state 113
    exclusive_or_expression	go to state 114
    inclusive_or_expression	go to state 115
    logical_and_expression	go to state 116
    logical_or_expression	go to state 117
    conditional_expression	go to state 140
    assignment_expression	go to state 296



state 212

    assignment_expression  ->  unary_expression lxm_shl_assign . assignment_expression   (rule 65)

    lxm_identifier	shift, and go to state 90
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_sizeof	shift, and go to state 95
    '(' 	shift, and go to state 96
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 139
    cast_expression	go to state 107
    multiplicative_expression	go to state 108
    additive_expression	go to state 109
    shift_expression	go to state 110
    relational_expression	go to state 111
    equality_expression	go to state 112
    and_expression	go to state 113
    exclusive_or_expression	go to state 114
    inclusive_or_expression	go to state 115
    logical_and_expression	go to state 116
    logical_or_expression	go to state 117
    conditional_expression	go to state 140
    assignment_expression	go to state 297



state 213

    assignment_expression  ->  unary_expression lxm_shr_assign . assignment_expression   (rule 66)

    lxm_identifier	shift, and go to state 90
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_sizeof	shift, and go to state 95
    '(' 	shift, and go to state 96
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 139
    cast_expression	go to state 107
    multiplicative_expression	go to state 108
    additive_expression	go to state 109
    shift_expression	go to state 110
    relational_expression	go to state 111
    equality_expression	go to state 112
    and_expression	go to state 113
    exclusive_or_expression	go to state 114
    inclusive_or_expression	go to state 115
    logical_and_expression	go to state 116
    logical_or_expression	go to state 117
    conditional_expression	go to state 140
    assignment_expression	go to state 298



state 214

    assignment_expression  ->  unary_expression lxm_and_assign . assignment_expression   (rule 67)

    lxm_identifier	shift, and go to state 90
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_sizeof	shift, and go to state 95
    '(' 	shift, and go to state 96
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 139
    cast_expression	go to state 107
    multiplicative_expression	go to state 108
    additive_expression	go to state 109
    shift_expression	go to state 110
    relational_expression	go to state 111
    equality_expression	go to state 112
    and_expression	go to state 113
    exclusive_or_expression	go to state 114
    inclusive_or_expression	go to state 115
    logical_and_expression	go to state 116
    logical_or_expression	go to state 117
    conditional_expression	go to state 140
    assignment_expression	go to state 299



state 215

    assignment_expression  ->  unary_expression lxm_xor_assign . assignment_expression   (rule 68)

    lxm_identifier	shift, and go to state 90
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_sizeof	shift, and go to state 95
    '(' 	shift, and go to state 96
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 139
    cast_expression	go to state 107
    multiplicative_expression	go to state 108
    additive_expression	go to state 109
    shift_expression	go to state 110
    relational_expression	go to state 111
    equality_expression	go to state 112
    and_expression	go to state 113
    exclusive_or_expression	go to state 114
    inclusive_or_expression	go to state 115
    logical_and_expression	go to state 116
    logical_or_expression	go to state 117
    conditional_expression	go to state 140
    assignment_expression	go to state 300



state 216

    assignment_expression  ->  unary_expression lxm_or_assign . assignment_expression   (rule 69)

    lxm_identifier	shift, and go to state 90
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_sizeof	shift, and go to state 95
    '(' 	shift, and go to state 96
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 139
    cast_expression	go to state 107
    multiplicative_expression	go to state 108
    additive_expression	go to state 109
    shift_expression	go to state 110
    relational_expression	go to state 111
    equality_expression	go to state 112
    and_expression	go to state 113
    exclusive_or_expression	go to state 114
    inclusive_or_expression	go to state 115
    logical_and_expression	go to state 116
    logical_or_expression	go to state 117
    conditional_expression	go to state 140
    assignment_expression	go to state 301



state 217

    assignment_expression  ->  unary_expression '=' . assignment_expression   (rule 59)

    lxm_identifier	shift, and go to state 90
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_sizeof	shift, and go to state 95
    '(' 	shift, and go to state 96
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 139
    cast_expression	go to state 107
    multiplicative_expression	go to state 108
    additive_expression	go to state 109
    shift_expression	go to state 110
    relational_expression	go to state 111
    equality_expression	go to state 112
    and_expression	go to state 113
    exclusive_or_expression	go to state 114
    inclusive_or_expression	go to state 115
    logical_and_expression	go to state 116
    logical_or_expression	go to state 117
    conditional_expression	go to state 140
    assignment_expression	go to state 302



state 218

    declaration_or_statement  ->  error . ';'   (rule 179)

    ';' 	shift, and go to state 303



state 219

    primary_expression  ->  lxm_identifier .   (rule 1)
    statement  ->  lxm_identifier . ':' @2 statement   (rule 192)

    ':' 	shift, and go to state 304

    $default	reduce using rule 1 (primary_expression)



state 220

    statement  ->  lxm_break . ';'   (rule 201)

    ';' 	shift, and go to state 305



state 221

    statement  ->  lxm_case . constant_expression ':' @3 statement   (rule 194)

    lxm_identifier	shift, and go to state 90
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_sizeof	shift, and go to state 95
    '(' 	shift, and go to state 96
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 106
    cast_expression	go to state 107
    multiplicative_expression	go to state 108
    additive_expression	go to state 109
    shift_expression	go to state 110
    relational_expression	go to state 111
    equality_expression	go to state 112
    and_expression	go to state 113
    exclusive_or_expression	go to state 114
    inclusive_or_expression	go to state 115
    logical_and_expression	go to state 116
    logical_or_expression	go to state 117
    conditional_expression	go to state 118
    constant_expression	go to state 306



state 222

    statement  ->  lxm_continue . ';'   (rule 200)

    ';' 	shift, and go to state 307



state 223

    statement  ->  lxm_default . ':' @4 statement   (rule 196)

    ':' 	shift, and go to state 308



state 224

    statement  ->  lxm_do . @9 statement lxm_while '(' expression ')' ';'   (rule 211)

    $default	reduce using rule 210 (@9)

    @9  	go to state 309



state 225

    for_statement  ->  lxm_for . '(' expression_statement   (rule 190)

    '(' 	shift, and go to state 310



state 226

    statement  ->  lxm_goto . lxm_identifier ';'   (rule 199)

    lxm_identifier	shift, and go to state 311



state 227

    if_statement  ->  lxm_if . '(' expression ')'   (rule 189)

    '(' 	shift, and go to state 312



state 228

    statement  ->  lxm_return . ';'   (rule 217)
    statement  ->  lxm_return . expression ';'   (rule 218)

    lxm_identifier	shift, and go to state 90
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_sizeof	shift, and go to state 95
    '(' 	shift, and go to state 96
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    ';' 	shift, and go to state 313

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 139
    cast_expression	go to state 107
    multiplicative_expression	go to state 108
    additive_expression	go to state 109
    shift_expression	go to state 110
    relational_expression	go to state 111
    equality_expression	go to state 112
    and_expression	go to state 113
    exclusive_or_expression	go to state 114
    inclusive_or_expression	go to state 115
    logical_and_expression	go to state 116
    logical_or_expression	go to state 117
    conditional_expression	go to state 140
    assignment_expression	go to state 160
    expression	go to state 314



state 229

    statement  ->  lxm_switch . '(' expression ')' @5 statement   (rule 198)

    '(' 	shift, and go to state 315



state 230

    statement  ->  lxm_while . '(' expression ')' @7 @8 statement   (rule 209)

    '(' 	shift, and go to state 316



state 231

    expression_statement  ->  ';' .   (rule 187)

    $default	reduce using rule 187 (expression_statement)



state 232

    compound_statement_rest  ->  '}' .   (rule 182)

    $default	reduce using rule 182 (compound_statement_rest)



state 233

    expression  ->  expression . ',' assignment_expression   (rule 71)
    expression_statement  ->  expression . ';'   (rule 188)

    ',' 	shift, and go to state 258
    ';' 	shift, and go to state 317



state 234

    declaration_or_statement  ->  declaration .   (rule 177)

    $default	reduce using rule 177 (declaration_or_statement)



state 235

    declaration  ->  declaration_specifiers . ';'   (rule 73)
    declaration  ->  declaration_specifiers . init_declarator_list ';'   (rule 74)
    declaration  ->  declaration_specifiers . error ';'   (rule 75)
    declaration_specifiers  ->  declaration_specifiers . storage_class_specifier   (rule 77)
    declaration_specifiers  ->  declaration_specifiers . type_specifier   (rule 79)
    declaration_specifiers  ->  declaration_specifiers . type_qualifier   (rule 81)

    error	shift, and go to state 47
    lxm_identifier	shift, and go to state 1
    lxm_typedef_name	shift, and go to state 2
    lxm_auto	shift, and go to state 3
    lxm_char	shift, and go to state 4
    lxm_const	shift, and go to state 5
    lxm_double	shift, and go to state 6
    lxm_enum	shift, and go to state 7
    lxm_extern	shift, and go to state 8
    lxm_float	shift, and go to state 9
    lxm_int	shift, and go to state 10
    lxm_long	shift, and go to state 11
    lxm_register	shift, and go to state 12
    lxm_short	shift, and go to state 13
    lxm_signed	shift, and go to state 14
    lxm_static	shift, and go to state 15
    lxm_struct	shift, and go to state 16
    lxm_typedef	shift, and go to state 17
    lxm_union	shift, and go to state 18
    lxm_unsigned	shift, and go to state 19
    lxm_void	shift, and go to state 20
    lxm_volatile	shift, and go to state 21
    '(' 	shift, and go to state 22
    '*' 	shift, and go to state 23
    ';' 	shift, and go to state 48

    storage_class_specifier	go to state 49
    type_specifier	go to state 50
    struct_or_union_specifier	go to state 28
    type_qualifier	go to state 51
    init_declarator_list	go to state 52
    init_declarator	go to state 53
    enum_specifier	go to state 30
    declarator	go to state 137
    direct_declarator	go to state 32
    pointer	go to state 33



state 236

    declaration_or_statement_list  ->  declaration_or_statement .   (rule 180)

    $default	reduce using rule 180 (declaration_or_statement_list)



state 237

    declaration_or_statement_list  ->  declaration_or_statement_list . declaration_or_statement   (rule 181)
    compound_statement_rest  ->  declaration_or_statement_list . '}'   (rule 183)
    compound_statement_rest  ->  declaration_or_statement_list . error '}'   (rule 184)

    error	shift, and go to state 318
    lxm_identifier	shift, and go to state 219
    lxm_typedef_name	shift, and go to state 2
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_auto	shift, and go to state 3
    lxm_break	shift, and go to state 220
    lxm_case	shift, and go to state 221
    lxm_char	shift, and go to state 4
    lxm_const	shift, and go to state 5
    lxm_continue	shift, and go to state 222
    lxm_default	shift, and go to state 223
    lxm_do	shift, and go to state 224
    lxm_double	shift, and go to state 6
    lxm_enum	shift, and go to state 7
    lxm_extern	shift, and go to state 8
    lxm_float	shift, and go to state 9
    lxm_for	shift, and go to state 225
    lxm_goto	shift, and go to state 226
    lxm_if	shift, and go to state 227
    lxm_int	shift, and go to state 10
    lxm_long	shift, and go to state 11
    lxm_register	shift, and go to state 12
    lxm_return	shift, and go to state 228
    lxm_short	shift, and go to state 13
    lxm_signed	shift, and go to state 14
    lxm_sizeof	shift, and go to state 95
    lxm_static	shift, and go to state 15
    lxm_struct	shift, and go to state 16
    lxm_switch	shift, and go to state 229
    lxm_typedef	shift, and go to state 17
    lxm_union	shift, and go to state 18
    lxm_unsigned	shift, and go to state 19
    lxm_void	shift, and go to state 20
    lxm_volatile	shift, and go to state 21
    lxm_while	shift, and go to state 230
    '(' 	shift, and go to state 96
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    ';' 	shift, and go to state 231
    '{' 	shift, and go to state 81
    '}' 	shift, and go to state 319

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 139
    cast_expression	go to state 107
    multiplicative_expression	go to state 108
    additive_expression	go to state 109
    shift_expression	go to state 110
    relational_expression	go to state 111
    equality_expression	go to state 112
    and_expression	go to state 113
    exclusive_or_expression	go to state 114
    inclusive_or_expression	go to state 115
    logical_and_expression	go to state 116
    logical_or_expression	go to state 117
    conditional_expression	go to state 140
    assignment_expression	go to state 160
    expression	go to state 233
    declaration	go to state 234
    declaration_specifiers	go to state 235
    storage_class_specifier	go to state 26
    type_specifier	go to state 27
    struct_or_union_specifier	go to state 28
    type_qualifier	go to state 29
    enum_specifier	go to state 30
    declaration_or_statement	go to state 320
    compound_statement	go to state 239
    expression_statement	go to state 240
    if_statement	go to state 241
    for_statement	go to state 242
    statement	go to state 243



state 238

    compound_statement  ->  '{' @1 compound_statement_rest .   (rule 186)

    $default	reduce using rule 186 (compound_statement)



state 239

    statement  ->  compound_statement .   (rule 203)

    $default	reduce using rule 203 (statement)



state 240

    statement  ->  expression_statement .   (rule 202)

    $default	reduce using rule 202 (statement)



state 241

    statement  ->  if_statement . statement   (rule 204)
    statement  ->  if_statement . statement lxm_else @6 statement   (rule 206)

    lxm_identifier	shift, and go to state 219
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_break	shift, and go to state 220
    lxm_case	shift, and go to state 221
    lxm_continue	shift, and go to state 222
    lxm_default	shift, and go to state 223
    lxm_do	shift, and go to state 224
    lxm_for	shift, and go to state 225
    lxm_goto	shift, and go to state 226
    lxm_if	shift, and go to state 227
    lxm_return	shift, and go to state 228
    lxm_sizeof	shift, and go to state 95
    lxm_switch	shift, and go to state 229
    lxm_while	shift, and go to state 230
    '(' 	shift, and go to state 96
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    ';' 	shift, and go to state 231
    '{' 	shift, and go to state 81

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 139
    cast_expression	go to state 107
    multiplicative_expression	go to state 108
    additive_expression	go to state 109
    shift_expression	go to state 110
    relational_expression	go to state 111
    equality_expression	go to state 112
    and_expression	go to state 113
    exclusive_or_expression	go to state 114
    inclusive_or_expression	go to state 115
    logical_and_expression	go to state 116
    logical_or_expression	go to state 117
    conditional_expression	go to state 140
    assignment_expression	go to state 160
    expression	go to state 233
    compound_statement	go to state 239
    expression_statement	go to state 240
    if_statement	go to state 241
    for_statement	go to state 242
    statement	go to state 321



state 242

    statement  ->  for_statement . expression_statement @10 ')' statement   (rule 213)
    statement  ->  for_statement . expression_statement @11 expression ')' @12 statement   (rule 216)

    lxm_identifier	shift, and go to state 90
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_sizeof	shift, and go to state 95
    '(' 	shift, and go to state 96
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    ';' 	shift, and go to state 231

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 139
    cast_expression	go to state 107
    multiplicative_expression	go to state 108
    additive_expression	go to state 109
    shift_expression	go to state 110
    relational_expression	go to state 111
    equality_expression	go to state 112
    and_expression	go to state 113
    exclusive_or_expression	go to state 114
    inclusive_or_expression	go to state 115
    logical_and_expression	go to state 116
    logical_or_expression	go to state 117
    conditional_expression	go to state 140
    assignment_expression	go to state 160
    expression	go to state 233
    expression_statement	go to state 322



state 243

    declaration_or_statement  ->  statement .   (rule 178)

    $default	reduce using rule 178 (declaration_or_statement)



state 244

    direct_abstract_declarator  ->  '(' error . ')'   (rule 168)

    ')' 	shift, and go to state 323



state 245

    direct_abstract_declarator  ->  '(' ')' .   (rule 166)

    $default	reduce using rule 166 (direct_abstract_declarator)



state 246

    direct_abstract_declarator  ->  '(' parameter_type_list . ')'   (rule 167)

    ')' 	shift, and go to state 324



state 247

    direct_abstract_declarator  ->  '(' abstract_declarator . ')'   (rule 159)

    ')' 	shift, and go to state 325



state 248

    direct_abstract_declarator  ->  '[' error . ']'   (rule 162)

    ']' 	shift, and go to state 326



state 249

    direct_abstract_declarator  ->  '[' ']' .   (rule 160)

    $default	reduce using rule 160 (direct_abstract_declarator)



state 250

    direct_abstract_declarator  ->  '[' constant_expression . ']'   (rule 161)

    ']' 	shift, and go to state 327



state 251

    abstract_declarator  ->  pointer direct_abstract_declarator .   (rule 158)
    direct_abstract_declarator  ->  direct_abstract_declarator . '[' ']'   (rule 163)
    direct_abstract_declarator  ->  direct_abstract_declarator . '[' constant_expression ']'   (rule 164)
    direct_abstract_declarator  ->  direct_abstract_declarator . '[' error ']'   (rule 165)
    direct_abstract_declarator  ->  direct_abstract_declarator . '(' ')'   (rule 169)
    direct_abstract_declarator  ->  direct_abstract_declarator . '(' parameter_type_list ')'   (rule 170)
    direct_abstract_declarator  ->  direct_abstract_declarator . '(' error ')'   (rule 171)

    '(' 	shift, and go to state 252
    '[' 	shift, and go to state 253

    $default	reduce using rule 158 (abstract_declarator)



state 252

    direct_abstract_declarator  ->  direct_abstract_declarator '(' . ')'   (rule 169)
    direct_abstract_declarator  ->  direct_abstract_declarator '(' . parameter_type_list ')'   (rule 170)
    direct_abstract_declarator  ->  direct_abstract_declarator '(' . error ')'   (rule 171)

    error	shift, and go to state 328
    lxm_typedef_name	shift, and go to state 2
    lxm_auto	shift, and go to state 3
    lxm_char	shift, and go to state 4
    lxm_const	shift, and go to state 5
    lxm_double	shift, and go to state 6
    lxm_enum	shift, and go to state 7
    lxm_extern	shift, and go to state 8
    lxm_float	shift, and go to state 9
    lxm_int	shift, and go to state 10
    lxm_long	shift, and go to state 11
    lxm_register	shift, and go to state 12
    lxm_short	shift, and go to state 13
    lxm_signed	shift, and go to state 14
    lxm_static	shift, and go to state 15
    lxm_struct	shift, and go to state 16
    lxm_typedef	shift, and go to state 17
    lxm_union	shift, and go to state 18
    lxm_unsigned	shift, and go to state 19
    lxm_void	shift, and go to state 20
    lxm_volatile	shift, and go to state 21
    ')' 	shift, and go to state 329

    declaration_specifiers	go to state 85
    storage_class_specifier	go to state 26
    type_specifier	go to state 27
    struct_or_union_specifier	go to state 28
    type_qualifier	go to state 29
    enum_specifier	go to state 30
    parameter_type_list	go to state 330
    parameter_list	go to state 87
    parameter_declaration	go to state 88



state 253

    direct_abstract_declarator  ->  direct_abstract_declarator '[' . ']'   (rule 163)
    direct_abstract_declarator  ->  direct_abstract_declarator '[' . constant_expression ']'   (rule 164)
    direct_abstract_declarator  ->  direct_abstract_declarator '[' . error ']'   (rule 165)

    error	shift, and go to state 331
    lxm_identifier	shift, and go to state 90
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_sizeof	shift, and go to state 95
    '(' 	shift, and go to state 96
    ']' 	shift, and go to state 332
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 106
    cast_expression	go to state 107
    multiplicative_expression	go to state 108
    additive_expression	go to state 109
    shift_expression	go to state 110
    relational_expression	go to state 111
    equality_expression	go to state 112
    and_expression	go to state 113
    exclusive_or_expression	go to state 114
    inclusive_or_expression	go to state 115
    logical_and_expression	go to state 116
    logical_or_expression	go to state 117
    conditional_expression	go to state 118
    constant_expression	go to state 333



state 254

    parameter_type_list  ->  parameter_list ',' lxm_ellipsis .   (rule 148)

    $default	reduce using rule 148 (parameter_type_list)



state 255

    parameter_list  ->  parameter_list ',' parameter_declaration .   (rule 150)

    $default	reduce using rule 150 (parameter_list)



state 256

    unary_expression  ->  lxm_sizeof '(' type_name . ')'   (rule 19)

    ')' 	shift, and go to state 334



state 257

    primary_expression  ->  '(' expression ')' .   (rule 4)

    $default	reduce using rule 4 (primary_expression)



state 258

    expression  ->  expression ',' . assignment_expression   (rule 71)

    lxm_identifier	shift, and go to state 90
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_sizeof	shift, and go to state 95
    '(' 	shift, and go to state 96
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 139
    cast_expression	go to state 107
    multiplicative_expression	go to state 108
    additive_expression	go to state 109
    shift_expression	go to state 110
    relational_expression	go to state 111
    equality_expression	go to state 112
    and_expression	go to state 113
    exclusive_or_expression	go to state 114
    inclusive_or_expression	go to state 115
    logical_and_expression	go to state 116
    logical_or_expression	go to state 117
    conditional_expression	go to state 140
    assignment_expression	go to state 335



state 259

    direct_abstract_declarator  ->  '(' . abstract_declarator ')'   (rule 159)
    direct_abstract_declarator  ->  '(' . ')'   (rule 166)
    direct_abstract_declarator  ->  '(' . parameter_type_list ')'   (rule 167)
    direct_abstract_declarator  ->  '(' . error ')'   (rule 168)

    error	shift, and go to state 244
    lxm_typedef_name	shift, and go to state 2
    lxm_auto	shift, and go to state 3
    lxm_char	shift, and go to state 4
    lxm_const	shift, and go to state 5
    lxm_double	shift, and go to state 6
    lxm_enum	shift, and go to state 7
    lxm_extern	shift, and go to state 8
    lxm_float	shift, and go to state 9
    lxm_int	shift, and go to state 10
    lxm_long	shift, and go to state 11
    lxm_register	shift, and go to state 12
    lxm_short	shift, and go to state 13
    lxm_signed	shift, and go to state 14
    lxm_static	shift, and go to state 15
    lxm_struct	shift, and go to state 16
    lxm_typedef	shift, and go to state 17
    lxm_union	shift, and go to state 18
    lxm_unsigned	shift, and go to state 19
    lxm_void	shift, and go to state 20
    lxm_volatile	shift, and go to state 21
    '(' 	shift, and go to state 259
    ')' 	shift, and go to state 245
    '[' 	shift, and go to state 147
    '*' 	shift, and go to state 23

    declaration_specifiers	go to state 85
    storage_class_specifier	go to state 26
    type_specifier	go to state 27
    struct_or_union_specifier	go to state 28
    type_qualifier	go to state 29
    enum_specifier	go to state 30
    pointer	go to state 260
    parameter_type_list	go to state 246
    parameter_list	go to state 87
    parameter_declaration	go to state 88
    abstract_declarator	go to state 247
    direct_abstract_declarator	go to state 151



state 260

    abstract_declarator  ->  pointer .   (rule 156)
    abstract_declarator  ->  pointer . direct_abstract_declarator   (rule 158)

    '(' 	shift, and go to state 259
    '[' 	shift, and go to state 147

    $default	reduce using rule 156 (abstract_declarator)

    direct_abstract_declarator	go to state 251



state 261

    type_name  ->  specifier_qualifier_list abstract_declarator .   (rule 155)

    $default	reduce using rule 155 (type_name)



state 262

    cast_expression  ->  '(' type_name ')' . cast_expression   (rule 27)

    lxm_identifier	shift, and go to state 90
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_sizeof	shift, and go to state 95
    '(' 	shift, and go to state 96
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 106
    cast_expression	go to state 336



state 263

    postfix_expression  ->  postfix_expression lxm_arrow lxm_identifier .   (rule 10)

    $default	reduce using rule 10 (postfix_expression)



state 264

    postfix_expression  ->  postfix_expression '(' ')' .   (rule 11)

    $default	reduce using rule 11 (postfix_expression)



state 265

    postfix_expression  ->  postfix_expression '(' argument_expression_list . ')'   (rule 12)
    argument_expression_list  ->  argument_expression_list . ',' assignment_expression   (rule 14)

    ')' 	shift, and go to state 337
    ',' 	shift, and go to state 338



state 266

    argument_expression_list  ->  assignment_expression .   (rule 13)

    $default	reduce using rule 13 (argument_expression_list)



state 267

    postfix_expression  ->  postfix_expression '[' expression . ']'   (rule 8)
    expression  ->  expression . ',' assignment_expression   (rule 71)

    ']' 	shift, and go to state 339
    ',' 	shift, and go to state 258



state 268

    postfix_expression  ->  postfix_expression '.' lxm_identifier .   (rule 9)

    $default	reduce using rule 9 (postfix_expression)



state 269

    multiplicative_expression  ->  multiplicative_expression '*' cast_expression .   (rule 29)

    $default	reduce using rule 29 (multiplicative_expression)



state 270

    multiplicative_expression  ->  multiplicative_expression '/' cast_expression .   (rule 30)

    $default	reduce using rule 30 (multiplicative_expression)



state 271

    multiplicative_expression  ->  multiplicative_expression '%' cast_expression .   (rule 31)

    $default	reduce using rule 31 (multiplicative_expression)



state 272

    multiplicative_expression  ->  multiplicative_expression . '*' cast_expression   (rule 29)
    multiplicative_expression  ->  multiplicative_expression . '/' cast_expression   (rule 30)
    multiplicative_expression  ->  multiplicative_expression . '%' cast_expression   (rule 31)
    additive_expression  ->  additive_expression '+' multiplicative_expression .   (rule 33)

    '*' 	shift, and go to state 176
    '/' 	shift, and go to state 177
    '%' 	shift, and go to state 178

    $default	reduce using rule 33 (additive_expression)



state 273

    multiplicative_expression  ->  multiplicative_expression . '*' cast_expression   (rule 29)
    multiplicative_expression  ->  multiplicative_expression . '/' cast_expression   (rule 30)
    multiplicative_expression  ->  multiplicative_expression . '%' cast_expression   (rule 31)
    additive_expression  ->  additive_expression '-' multiplicative_expression .   (rule 34)

    '*' 	shift, and go to state 176
    '/' 	shift, and go to state 177
    '%' 	shift, and go to state 178

    $default	reduce using rule 34 (additive_expression)



state 274

    additive_expression  ->  additive_expression . '+' multiplicative_expression   (rule 33)
    additive_expression  ->  additive_expression . '-' multiplicative_expression   (rule 34)
    shift_expression  ->  shift_expression lxm_shl additive_expression .   (rule 36)

    '+' 	shift, and go to state 179
    '-' 	shift, and go to state 180

    $default	reduce using rule 36 (shift_expression)



state 275

    additive_expression  ->  additive_expression . '+' multiplicative_expression   (rule 33)
    additive_expression  ->  additive_expression . '-' multiplicative_expression   (rule 34)
    shift_expression  ->  shift_expression lxm_shr additive_expression .   (rule 37)

    '+' 	shift, and go to state 179
    '-' 	shift, and go to state 180

    $default	reduce using rule 37 (shift_expression)



state 276

    shift_expression  ->  shift_expression . lxm_shl additive_expression   (rule 36)
    shift_expression  ->  shift_expression . lxm_shr additive_expression   (rule 37)
    relational_expression  ->  relational_expression lxm_le shift_expression .   (rule 41)

    lxm_shl	shift, and go to state 181
    lxm_shr	shift, and go to state 182

    $default	reduce using rule 41 (relational_expression)



state 277

    shift_expression  ->  shift_expression . lxm_shl additive_expression   (rule 36)
    shift_expression  ->  shift_expression . lxm_shr additive_expression   (rule 37)
    relational_expression  ->  relational_expression lxm_ge shift_expression .   (rule 42)

    lxm_shl	shift, and go to state 181
    lxm_shr	shift, and go to state 182

    $default	reduce using rule 42 (relational_expression)



state 278

    shift_expression  ->  shift_expression . lxm_shl additive_expression   (rule 36)
    shift_expression  ->  shift_expression . lxm_shr additive_expression   (rule 37)
    relational_expression  ->  relational_expression '<' shift_expression .   (rule 39)

    lxm_shl	shift, and go to state 181
    lxm_shr	shift, and go to state 182

    $default	reduce using rule 39 (relational_expression)



state 279

    shift_expression  ->  shift_expression . lxm_shl additive_expression   (rule 36)
    shift_expression  ->  shift_expression . lxm_shr additive_expression   (rule 37)
    relational_expression  ->  relational_expression '>' shift_expression .   (rule 40)

    lxm_shl	shift, and go to state 181
    lxm_shr	shift, and go to state 182

    $default	reduce using rule 40 (relational_expression)



state 280

    relational_expression  ->  relational_expression . '<' shift_expression   (rule 39)
    relational_expression  ->  relational_expression . '>' shift_expression   (rule 40)
    relational_expression  ->  relational_expression . lxm_le shift_expression   (rule 41)
    relational_expression  ->  relational_expression . lxm_ge shift_expression   (rule 42)
    equality_expression  ->  equality_expression lxm_eq relational_expression .   (rule 44)

    lxm_le	shift, and go to state 183
    lxm_ge	shift, and go to state 184
    '<' 	shift, and go to state 185
    '>' 	shift, and go to state 186

    $default	reduce using rule 44 (equality_expression)



state 281

    relational_expression  ->  relational_expression . '<' shift_expression   (rule 39)
    relational_expression  ->  relational_expression . '>' shift_expression   (rule 40)
    relational_expression  ->  relational_expression . lxm_le shift_expression   (rule 41)
    relational_expression  ->  relational_expression . lxm_ge shift_expression   (rule 42)
    equality_expression  ->  equality_expression lxm_ne relational_expression .   (rule 45)

    lxm_le	shift, and go to state 183
    lxm_ge	shift, and go to state 184
    '<' 	shift, and go to state 185
    '>' 	shift, and go to state 186

    $default	reduce using rule 45 (equality_expression)



state 282

    equality_expression  ->  equality_expression . lxm_eq relational_expression   (rule 44)
    equality_expression  ->  equality_expression . lxm_ne relational_expression   (rule 45)
    and_expression  ->  and_expression '&' equality_expression .   (rule 47)

    lxm_eq	shift, and go to state 187
    lxm_ne	shift, and go to state 188

    $default	reduce using rule 47 (and_expression)



state 283

    and_expression  ->  and_expression . '&' equality_expression   (rule 47)
    exclusive_or_expression  ->  exclusive_or_expression '^' and_expression .   (rule 49)

    '&' 	shift, and go to state 189

    $default	reduce using rule 49 (exclusive_or_expression)



state 284

    exclusive_or_expression  ->  exclusive_or_expression . '^' and_expression   (rule 49)
    inclusive_or_expression  ->  inclusive_or_expression '|' exclusive_or_expression .   (rule 51)

    '^' 	shift, and go to state 190

    $default	reduce using rule 51 (inclusive_or_expression)



state 285

    inclusive_or_expression  ->  inclusive_or_expression . '|' exclusive_or_expression   (rule 51)
    logical_and_expression  ->  logical_and_expression lxm_bool_and inclusive_or_expression .   (rule 53)

    '|' 	shift, and go to state 191

    $default	reduce using rule 53 (logical_and_expression)



state 286

    logical_and_expression  ->  logical_and_expression . lxm_bool_and inclusive_or_expression   (rule 53)
    logical_or_expression  ->  logical_or_expression lxm_bool_or logical_and_expression .   (rule 55)

    lxm_bool_and	shift, and go to state 192

    $default	reduce using rule 55 (logical_or_expression)



state 287

    conditional_expression  ->  logical_or_expression '?' expression . ':' conditional_expression   (rule 57)
    expression  ->  expression . ',' assignment_expression   (rule 71)

    ',' 	shift, and go to state 258
    ':' 	shift, and go to state 340



state 288

    struct_declarator_list  ->  struct_declarator_list ',' struct_declarator .   (rule 116)

    $default	reduce using rule 116 (struct_declarator_list)



state 289

    struct_declarator  ->  declarator ':' constant_expression .   (rule 119)

    $default	reduce using rule 119 (struct_declarator)



state 290

    initializer  ->  '{' initializer_list ',' . '}'   (rule 174)
    initializer_list  ->  initializer_list ',' . initializer   (rule 176)

    lxm_identifier	shift, and go to state 90
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_sizeof	shift, and go to state 95
    '(' 	shift, and go to state 96
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    '{' 	shift, and go to state 138
    '}' 	shift, and go to state 341

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 139
    cast_expression	go to state 107
    multiplicative_expression	go to state 108
    additive_expression	go to state 109
    shift_expression	go to state 110
    relational_expression	go to state 111
    equality_expression	go to state 112
    and_expression	go to state 113
    exclusive_or_expression	go to state 114
    inclusive_or_expression	go to state 115
    logical_and_expression	go to state 116
    logical_or_expression	go to state 117
    conditional_expression	go to state 140
    assignment_expression	go to state 141
    initializer	go to state 342



state 291

    initializer  ->  '{' initializer_list '}' .   (rule 173)

    $default	reduce using rule 173 (initializer)



state 292

    assignment_expression  ->  unary_expression lxm_mul_assign assignment_expression .   (rule 62)

    $default	reduce using rule 62 (assignment_expression)



state 293

    assignment_expression  ->  unary_expression lxm_div_assign assignment_expression .   (rule 63)

    $default	reduce using rule 63 (assignment_expression)



state 294

    assignment_expression  ->  unary_expression lxm_mod_assign assignment_expression .   (rule 64)

    $default	reduce using rule 64 (assignment_expression)



state 295

    assignment_expression  ->  unary_expression lxm_add_assign assignment_expression .   (rule 60)

    $default	reduce using rule 60 (assignment_expression)



state 296

    assignment_expression  ->  unary_expression lxm_sub_assign assignment_expression .   (rule 61)

    $default	reduce using rule 61 (assignment_expression)



state 297

    assignment_expression  ->  unary_expression lxm_shl_assign assignment_expression .   (rule 65)

    $default	reduce using rule 65 (assignment_expression)



state 298

    assignment_expression  ->  unary_expression lxm_shr_assign assignment_expression .   (rule 66)

    $default	reduce using rule 66 (assignment_expression)



state 299

    assignment_expression  ->  unary_expression lxm_and_assign assignment_expression .   (rule 67)

    $default	reduce using rule 67 (assignment_expression)



state 300

    assignment_expression  ->  unary_expression lxm_xor_assign assignment_expression .   (rule 68)

    $default	reduce using rule 68 (assignment_expression)



state 301

    assignment_expression  ->  unary_expression lxm_or_assign assignment_expression .   (rule 69)

    $default	reduce using rule 69 (assignment_expression)



state 302

    assignment_expression  ->  unary_expression '=' assignment_expression .   (rule 59)

    $default	reduce using rule 59 (assignment_expression)



state 303

    declaration_or_statement  ->  error ';' .   (rule 179)

    $default	reduce using rule 179 (declaration_or_statement)



state 304

    statement  ->  lxm_identifier ':' . @2 statement   (rule 192)

    $default	reduce using rule 191 (@2)

    @2  	go to state 343



state 305

    statement  ->  lxm_break ';' .   (rule 201)

    $default	reduce using rule 201 (statement)



state 306

    statement  ->  lxm_case constant_expression . ':' @3 statement   (rule 194)

    ':' 	shift, and go to state 344



state 307

    statement  ->  lxm_continue ';' .   (rule 200)

    $default	reduce using rule 200 (statement)



state 308

    statement  ->  lxm_default ':' . @4 statement   (rule 196)

    $default	reduce using rule 195 (@4)

    @4  	go to state 345



state 309

    statement  ->  lxm_do @9 . statement lxm_while '(' expression ')' ';'   (rule 211)

    lxm_identifier	shift, and go to state 219
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_break	shift, and go to state 220
    lxm_case	shift, and go to state 221
    lxm_continue	shift, and go to state 222
    lxm_default	shift, and go to state 223
    lxm_do	shift, and go to state 224
    lxm_for	shift, and go to state 225
    lxm_goto	shift, and go to state 226
    lxm_if	shift, and go to state 227
    lxm_return	shift, and go to state 228
    lxm_sizeof	shift, and go to state 95
    lxm_switch	shift, and go to state 229
    lxm_while	shift, and go to state 230
    '(' 	shift, and go to state 96
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    ';' 	shift, and go to state 231
    '{' 	shift, and go to state 81

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 139
    cast_expression	go to state 107
    multiplicative_expression	go to state 108
    additive_expression	go to state 109
    shift_expression	go to state 110
    relational_expression	go to state 111
    equality_expression	go to state 112
    and_expression	go to state 113
    exclusive_or_expression	go to state 114
    inclusive_or_expression	go to state 115
    logical_and_expression	go to state 116
    logical_or_expression	go to state 117
    conditional_expression	go to state 140
    assignment_expression	go to state 160
    expression	go to state 233
    compound_statement	go to state 239
    expression_statement	go to state 240
    if_statement	go to state 241
    for_statement	go to state 242
    statement	go to state 346



state 310

    for_statement  ->  lxm_for '(' . expression_statement   (rule 190)

    lxm_identifier	shift, and go to state 90
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_sizeof	shift, and go to state 95
    '(' 	shift, and go to state 96
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    ';' 	shift, and go to state 231

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 139
    cast_expression	go to state 107
    multiplicative_expression	go to state 108
    additive_expression	go to state 109
    shift_expression	go to state 110
    relational_expression	go to state 111
    equality_expression	go to state 112
    and_expression	go to state 113
    exclusive_or_expression	go to state 114
    inclusive_or_expression	go to state 115
    logical_and_expression	go to state 116
    logical_or_expression	go to state 117
    conditional_expression	go to state 140
    assignment_expression	go to state 160
    expression	go to state 233
    expression_statement	go to state 347



state 311

    statement  ->  lxm_goto lxm_identifier . ';'   (rule 199)

    ';' 	shift, and go to state 348



state 312

    if_statement  ->  lxm_if '(' . expression ')'   (rule 189)

    lxm_identifier	shift, and go to state 90
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_sizeof	shift, and go to state 95
    '(' 	shift, and go to state 96
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 139
    cast_expression	go to state 107
    multiplicative_expression	go to state 108
    additive_expression	go to state 109
    shift_expression	go to state 110
    relational_expression	go to state 111
    equality_expression	go to state 112
    and_expression	go to state 113
    exclusive_or_expression	go to state 114
    inclusive_or_expression	go to state 115
    logical_and_expression	go to state 116
    logical_or_expression	go to state 117
    conditional_expression	go to state 140
    assignment_expression	go to state 160
    expression	go to state 349



state 313

    statement  ->  lxm_return ';' .   (rule 217)

    $default	reduce using rule 217 (statement)



state 314

    expression  ->  expression . ',' assignment_expression   (rule 71)
    statement  ->  lxm_return expression . ';'   (rule 218)

    ',' 	shift, and go to state 258
    ';' 	shift, and go to state 350



state 315

    statement  ->  lxm_switch '(' . expression ')' @5 statement   (rule 198)

    lxm_identifier	shift, and go to state 90
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_sizeof	shift, and go to state 95
    '(' 	shift, and go to state 96
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 139
    cast_expression	go to state 107
    multiplicative_expression	go to state 108
    additive_expression	go to state 109
    shift_expression	go to state 110
    relational_expression	go to state 111
    equality_expression	go to state 112
    and_expression	go to state 113
    exclusive_or_expression	go to state 114
    inclusive_or_expression	go to state 115
    logical_and_expression	go to state 116
    logical_or_expression	go to state 117
    conditional_expression	go to state 140
    assignment_expression	go to state 160
    expression	go to state 351



state 316

    statement  ->  lxm_while '(' . expression ')' @7 @8 statement   (rule 209)

    lxm_identifier	shift, and go to state 90
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_sizeof	shift, and go to state 95
    '(' 	shift, and go to state 96
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 139
    cast_expression	go to state 107
    multiplicative_expression	go to state 108
    additive_expression	go to state 109
    shift_expression	go to state 110
    relational_expression	go to state 111
    equality_expression	go to state 112
    and_expression	go to state 113
    exclusive_or_expression	go to state 114
    inclusive_or_expression	go to state 115
    logical_and_expression	go to state 116
    logical_or_expression	go to state 117
    conditional_expression	go to state 140
    assignment_expression	go to state 160
    expression	go to state 352



state 317

    expression_statement  ->  expression ';' .   (rule 188)

    $default	reduce using rule 188 (expression_statement)



state 318

    declaration_or_statement  ->  error . ';'   (rule 179)
    compound_statement_rest  ->  declaration_or_statement_list error . '}'   (rule 184)

    ';' 	shift, and go to state 303
    '}' 	shift, and go to state 353



state 319

    compound_statement_rest  ->  declaration_or_statement_list '}' .   (rule 183)

    $default	reduce using rule 183 (compound_statement_rest)



state 320

    declaration_or_statement_list  ->  declaration_or_statement_list declaration_or_statement .   (rule 181)

    $default	reduce using rule 181 (declaration_or_statement_list)



state 321

    statement  ->  if_statement statement .   (rule 204)
    statement  ->  if_statement statement . lxm_else @6 statement   (rule 206)

    lxm_else	shift, and go to state 354

    lxm_else	[reduce using rule 204 (statement)]
    $default	reduce using rule 204 (statement)



state 322

    statement  ->  for_statement expression_statement . @10 ')' statement   (rule 213)
    statement  ->  for_statement expression_statement . @11 expression ')' @12 statement   (rule 216)

    ')' 	reduce using rule 212 (@10)
    $default	reduce using rule 214 (@11)

    @10 	go to state 355
    @11 	go to state 356



state 323

    direct_abstract_declarator  ->  '(' error ')' .   (rule 168)

    $default	reduce using rule 168 (direct_abstract_declarator)



state 324

    direct_abstract_declarator  ->  '(' parameter_type_list ')' .   (rule 167)

    $default	reduce using rule 167 (direct_abstract_declarator)



state 325

    direct_abstract_declarator  ->  '(' abstract_declarator ')' .   (rule 159)

    $default	reduce using rule 159 (direct_abstract_declarator)



state 326

    direct_abstract_declarator  ->  '[' error ']' .   (rule 162)

    $default	reduce using rule 162 (direct_abstract_declarator)



state 327

    direct_abstract_declarator  ->  '[' constant_expression ']' .   (rule 161)

    $default	reduce using rule 161 (direct_abstract_declarator)



state 328

    direct_abstract_declarator  ->  direct_abstract_declarator '(' error . ')'   (rule 171)

    ')' 	shift, and go to state 357



state 329

    direct_abstract_declarator  ->  direct_abstract_declarator '(' ')' .   (rule 169)

    $default	reduce using rule 169 (direct_abstract_declarator)



state 330

    direct_abstract_declarator  ->  direct_abstract_declarator '(' parameter_type_list . ')'   (rule 170)

    ')' 	shift, and go to state 358



state 331

    direct_abstract_declarator  ->  direct_abstract_declarator '[' error . ']'   (rule 165)

    ']' 	shift, and go to state 359



state 332

    direct_abstract_declarator  ->  direct_abstract_declarator '[' ']' .   (rule 163)

    $default	reduce using rule 163 (direct_abstract_declarator)



state 333

    direct_abstract_declarator  ->  direct_abstract_declarator '[' constant_expression . ']'   (rule 164)

    ']' 	shift, and go to state 360



state 334

    unary_expression  ->  lxm_sizeof '(' type_name ')' .   (rule 19)

    $default	reduce using rule 19 (unary_expression)



state 335

    expression  ->  expression ',' assignment_expression .   (rule 71)

    $default	reduce using rule 71 (expression)



state 336

    cast_expression  ->  '(' type_name ')' cast_expression .   (rule 27)

    $default	reduce using rule 27 (cast_expression)



state 337

    postfix_expression  ->  postfix_expression '(' argument_expression_list ')' .   (rule 12)

    $default	reduce using rule 12 (postfix_expression)



state 338

    argument_expression_list  ->  argument_expression_list ',' . assignment_expression   (rule 14)

    lxm_identifier	shift, and go to state 90
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_sizeof	shift, and go to state 95
    '(' 	shift, and go to state 96
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 139
    cast_expression	go to state 107
    multiplicative_expression	go to state 108
    additive_expression	go to state 109
    shift_expression	go to state 110
    relational_expression	go to state 111
    equality_expression	go to state 112
    and_expression	go to state 113
    exclusive_or_expression	go to state 114
    inclusive_or_expression	go to state 115
    logical_and_expression	go to state 116
    logical_or_expression	go to state 117
    conditional_expression	go to state 140
    assignment_expression	go to state 361



state 339

    postfix_expression  ->  postfix_expression '[' expression ']' .   (rule 8)

    $default	reduce using rule 8 (postfix_expression)



state 340

    conditional_expression  ->  logical_or_expression '?' expression ':' . conditional_expression   (rule 57)

    lxm_identifier	shift, and go to state 90
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_sizeof	shift, and go to state 95
    '(' 	shift, and go to state 96
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 106
    cast_expression	go to state 107
    multiplicative_expression	go to state 108
    additive_expression	go to state 109
    shift_expression	go to state 110
    relational_expression	go to state 111
    equality_expression	go to state 112
    and_expression	go to state 113
    exclusive_or_expression	go to state 114
    inclusive_or_expression	go to state 115
    logical_and_expression	go to state 116
    logical_or_expression	go to state 117
    conditional_expression	go to state 362



state 341

    initializer  ->  '{' initializer_list ',' '}' .   (rule 174)

    $default	reduce using rule 174 (initializer)



state 342

    initializer_list  ->  initializer_list ',' initializer .   (rule 176)

    $default	reduce using rule 176 (initializer_list)



state 343

    statement  ->  lxm_identifier ':' @2 . statement   (rule 192)

    lxm_identifier	shift, and go to state 219
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_break	shift, and go to state 220
    lxm_case	shift, and go to state 221
    lxm_continue	shift, and go to state 222
    lxm_default	shift, and go to state 223
    lxm_do	shift, and go to state 224
    lxm_for	shift, and go to state 225
    lxm_goto	shift, and go to state 226
    lxm_if	shift, and go to state 227
    lxm_return	shift, and go to state 228
    lxm_sizeof	shift, and go to state 95
    lxm_switch	shift, and go to state 229
    lxm_while	shift, and go to state 230
    '(' 	shift, and go to state 96
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    ';' 	shift, and go to state 231
    '{' 	shift, and go to state 81

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 139
    cast_expression	go to state 107
    multiplicative_expression	go to state 108
    additive_expression	go to state 109
    shift_expression	go to state 110
    relational_expression	go to state 111
    equality_expression	go to state 112
    and_expression	go to state 113
    exclusive_or_expression	go to state 114
    inclusive_or_expression	go to state 115
    logical_and_expression	go to state 116
    logical_or_expression	go to state 117
    conditional_expression	go to state 140
    assignment_expression	go to state 160
    expression	go to state 233
    compound_statement	go to state 239
    expression_statement	go to state 240
    if_statement	go to state 241
    for_statement	go to state 242
    statement	go to state 363



state 344

    statement  ->  lxm_case constant_expression ':' . @3 statement   (rule 194)

    $default	reduce using rule 193 (@3)

    @3  	go to state 364



state 345

    statement  ->  lxm_default ':' @4 . statement   (rule 196)

    lxm_identifier	shift, and go to state 219
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_break	shift, and go to state 220
    lxm_case	shift, and go to state 221
    lxm_continue	shift, and go to state 222
    lxm_default	shift, and go to state 223
    lxm_do	shift, and go to state 224
    lxm_for	shift, and go to state 225
    lxm_goto	shift, and go to state 226
    lxm_if	shift, and go to state 227
    lxm_return	shift, and go to state 228
    lxm_sizeof	shift, and go to state 95
    lxm_switch	shift, and go to state 229
    lxm_while	shift, and go to state 230
    '(' 	shift, and go to state 96
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    ';' 	shift, and go to state 231
    '{' 	shift, and go to state 81

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 139
    cast_expression	go to state 107
    multiplicative_expression	go to state 108
    additive_expression	go to state 109
    shift_expression	go to state 110
    relational_expression	go to state 111
    equality_expression	go to state 112
    and_expression	go to state 113
    exclusive_or_expression	go to state 114
    inclusive_or_expression	go to state 115
    logical_and_expression	go to state 116
    logical_or_expression	go to state 117
    conditional_expression	go to state 140
    assignment_expression	go to state 160
    expression	go to state 233
    compound_statement	go to state 239
    expression_statement	go to state 240
    if_statement	go to state 241
    for_statement	go to state 242
    statement	go to state 365



state 346

    statement  ->  lxm_do @9 statement . lxm_while '(' expression ')' ';'   (rule 211)

    lxm_while	shift, and go to state 366



state 347

    for_statement  ->  lxm_for '(' expression_statement .   (rule 190)

    $default	reduce using rule 190 (for_statement)



state 348

    statement  ->  lxm_goto lxm_identifier ';' .   (rule 199)

    $default	reduce using rule 199 (statement)



state 349

    expression  ->  expression . ',' assignment_expression   (rule 71)
    if_statement  ->  lxm_if '(' expression . ')'   (rule 189)

    ')' 	shift, and go to state 367
    ',' 	shift, and go to state 258



state 350

    statement  ->  lxm_return expression ';' .   (rule 218)

    $default	reduce using rule 218 (statement)



state 351

    expression  ->  expression . ',' assignment_expression   (rule 71)
    statement  ->  lxm_switch '(' expression . ')' @5 statement   (rule 198)

    ')' 	shift, and go to state 368
    ',' 	shift, and go to state 258



state 352

    expression  ->  expression . ',' assignment_expression   (rule 71)
    statement  ->  lxm_while '(' expression . ')' @7 @8 statement   (rule 209)

    ')' 	shift, and go to state 369
    ',' 	shift, and go to state 258



state 353

    compound_statement_rest  ->  declaration_or_statement_list error '}' .   (rule 184)

    $default	reduce using rule 184 (compound_statement_rest)



state 354

    statement  ->  if_statement statement lxm_else . @6 statement   (rule 206)

    $default	reduce using rule 205 (@6)

    @6  	go to state 370



state 355

    statement  ->  for_statement expression_statement @10 . ')' statement   (rule 213)

    ')' 	shift, and go to state 371



state 356

    statement  ->  for_statement expression_statement @11 . expression ')' @12 statement   (rule 216)

    lxm_identifier	shift, and go to state 90
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_sizeof	shift, and go to state 95
    '(' 	shift, and go to state 96
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 139
    cast_expression	go to state 107
    multiplicative_expression	go to state 108
    additive_expression	go to state 109
    shift_expression	go to state 110
    relational_expression	go to state 111
    equality_expression	go to state 112
    and_expression	go to state 113
    exclusive_or_expression	go to state 114
    inclusive_or_expression	go to state 115
    logical_and_expression	go to state 116
    logical_or_expression	go to state 117
    conditional_expression	go to state 140
    assignment_expression	go to state 160
    expression	go to state 372



state 357

    direct_abstract_declarator  ->  direct_abstract_declarator '(' error ')' .   (rule 171)

    $default	reduce using rule 171 (direct_abstract_declarator)



state 358

    direct_abstract_declarator  ->  direct_abstract_declarator '(' parameter_type_list ')' .   (rule 170)

    $default	reduce using rule 170 (direct_abstract_declarator)



state 359

    direct_abstract_declarator  ->  direct_abstract_declarator '[' error ']' .   (rule 165)

    $default	reduce using rule 165 (direct_abstract_declarator)



state 360

    direct_abstract_declarator  ->  direct_abstract_declarator '[' constant_expression ']' .   (rule 164)

    $default	reduce using rule 164 (direct_abstract_declarator)



state 361

    argument_expression_list  ->  argument_expression_list ',' assignment_expression .   (rule 14)

    $default	reduce using rule 14 (argument_expression_list)



state 362

    conditional_expression  ->  logical_or_expression '?' expression ':' conditional_expression .   (rule 57)

    $default	reduce using rule 57 (conditional_expression)



state 363

    statement  ->  lxm_identifier ':' @2 statement .   (rule 192)

    $default	reduce using rule 192 (statement)



state 364

    statement  ->  lxm_case constant_expression ':' @3 . statement   (rule 194)

    lxm_identifier	shift, and go to state 219
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_break	shift, and go to state 220
    lxm_case	shift, and go to state 221
    lxm_continue	shift, and go to state 222
    lxm_default	shift, and go to state 223
    lxm_do	shift, and go to state 224
    lxm_for	shift, and go to state 225
    lxm_goto	shift, and go to state 226
    lxm_if	shift, and go to state 227
    lxm_return	shift, and go to state 228
    lxm_sizeof	shift, and go to state 95
    lxm_switch	shift, and go to state 229
    lxm_while	shift, and go to state 230
    '(' 	shift, and go to state 96
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    ';' 	shift, and go to state 231
    '{' 	shift, and go to state 81

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 139
    cast_expression	go to state 107
    multiplicative_expression	go to state 108
    additive_expression	go to state 109
    shift_expression	go to state 110
    relational_expression	go to state 111
    equality_expression	go to state 112
    and_expression	go to state 113
    exclusive_or_expression	go to state 114
    inclusive_or_expression	go to state 115
    logical_and_expression	go to state 116
    logical_or_expression	go to state 117
    conditional_expression	go to state 140
    assignment_expression	go to state 160
    expression	go to state 233
    compound_statement	go to state 239
    expression_statement	go to state 240
    if_statement	go to state 241
    for_statement	go to state 242
    statement	go to state 373



state 365

    statement  ->  lxm_default ':' @4 statement .   (rule 196)

    $default	reduce using rule 196 (statement)



state 366

    statement  ->  lxm_do @9 statement lxm_while . '(' expression ')' ';'   (rule 211)

    '(' 	shift, and go to state 374



state 367

    if_statement  ->  lxm_if '(' expression ')' .   (rule 189)

    $default	reduce using rule 189 (if_statement)



state 368

    statement  ->  lxm_switch '(' expression ')' . @5 statement   (rule 198)

    $default	reduce using rule 197 (@5)

    @5  	go to state 375



state 369

    statement  ->  lxm_while '(' expression ')' . @7 @8 statement   (rule 209)

    $default	reduce using rule 207 (@7)

    @7  	go to state 376



state 370

    statement  ->  if_statement statement lxm_else @6 . statement   (rule 206)

    lxm_identifier	shift, and go to state 219
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_break	shift, and go to state 220
    lxm_case	shift, and go to state 221
    lxm_continue	shift, and go to state 222
    lxm_default	shift, and go to state 223
    lxm_do	shift, and go to state 224
    lxm_for	shift, and go to state 225
    lxm_goto	shift, and go to state 226
    lxm_if	shift, and go to state 227
    lxm_return	shift, and go to state 228
    lxm_sizeof	shift, and go to state 95
    lxm_switch	shift, and go to state 229
    lxm_while	shift, and go to state 230
    '(' 	shift, and go to state 96
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    ';' 	shift, and go to state 231
    '{' 	shift, and go to state 81

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 139
    cast_expression	go to state 107
    multiplicative_expression	go to state 108
    additive_expression	go to state 109
    shift_expression	go to state 110
    relational_expression	go to state 111
    equality_expression	go to state 112
    and_expression	go to state 113
    exclusive_or_expression	go to state 114
    inclusive_or_expression	go to state 115
    logical_and_expression	go to state 116
    logical_or_expression	go to state 117
    conditional_expression	go to state 140
    assignment_expression	go to state 160
    expression	go to state 233
    compound_statement	go to state 239
    expression_statement	go to state 240
    if_statement	go to state 241
    for_statement	go to state 242
    statement	go to state 377



state 371

    statement  ->  for_statement expression_statement @10 ')' . statement   (rule 213)

    lxm_identifier	shift, and go to state 219
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_break	shift, and go to state 220
    lxm_case	shift, and go to state 221
    lxm_continue	shift, and go to state 222
    lxm_default	shift, and go to state 223
    lxm_do	shift, and go to state 224
    lxm_for	shift, and go to state 225
    lxm_goto	shift, and go to state 226
    lxm_if	shift, and go to state 227
    lxm_return	shift, and go to state 228
    lxm_sizeof	shift, and go to state 95
    lxm_switch	shift, and go to state 229
    lxm_while	shift, and go to state 230
    '(' 	shift, and go to state 96
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    ';' 	shift, and go to state 231
    '{' 	shift, and go to state 81

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 139
    cast_expression	go to state 107
    multiplicative_expression	go to state 108
    additive_expression	go to state 109
    shift_expression	go to state 110
    relational_expression	go to state 111
    equality_expression	go to state 112
    and_expression	go to state 113
    exclusive_or_expression	go to state 114
    inclusive_or_expression	go to state 115
    logical_and_expression	go to state 116
    logical_or_expression	go to state 117
    conditional_expression	go to state 140
    assignment_expression	go to state 160
    expression	go to state 233
    compound_statement	go to state 239
    expression_statement	go to state 240
    if_statement	go to state 241
    for_statement	go to state 242
    statement	go to state 378



state 372

    expression  ->  expression . ',' assignment_expression   (rule 71)
    statement  ->  for_statement expression_statement @11 expression . ')' @12 statement   (rule 216)

    ')' 	shift, and go to state 379
    ',' 	shift, and go to state 258



state 373

    statement  ->  lxm_case constant_expression ':' @3 statement .   (rule 194)

    $default	reduce using rule 194 (statement)



state 374

    statement  ->  lxm_do @9 statement lxm_while '(' . expression ')' ';'   (rule 211)

    lxm_identifier	shift, and go to state 90
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_sizeof	shift, and go to state 95
    '(' 	shift, and go to state 96
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 139
    cast_expression	go to state 107
    multiplicative_expression	go to state 108
    additive_expression	go to state 109
    shift_expression	go to state 110
    relational_expression	go to state 111
    equality_expression	go to state 112
    and_expression	go to state 113
    exclusive_or_expression	go to state 114
    inclusive_or_expression	go to state 115
    logical_and_expression	go to state 116
    logical_or_expression	go to state 117
    conditional_expression	go to state 140
    assignment_expression	go to state 160
    expression	go to state 380



state 375

    statement  ->  lxm_switch '(' expression ')' @5 . statement   (rule 198)

    lxm_identifier	shift, and go to state 219
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_break	shift, and go to state 220
    lxm_case	shift, and go to state 221
    lxm_continue	shift, and go to state 222
    lxm_default	shift, and go to state 223
    lxm_do	shift, and go to state 224
    lxm_for	shift, and go to state 225
    lxm_goto	shift, and go to state 226
    lxm_if	shift, and go to state 227
    lxm_return	shift, and go to state 228
    lxm_sizeof	shift, and go to state 95
    lxm_switch	shift, and go to state 229
    lxm_while	shift, and go to state 230
    '(' 	shift, and go to state 96
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    ';' 	shift, and go to state 231
    '{' 	shift, and go to state 81

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 139
    cast_expression	go to state 107
    multiplicative_expression	go to state 108
    additive_expression	go to state 109
    shift_expression	go to state 110
    relational_expression	go to state 111
    equality_expression	go to state 112
    and_expression	go to state 113
    exclusive_or_expression	go to state 114
    inclusive_or_expression	go to state 115
    logical_and_expression	go to state 116
    logical_or_expression	go to state 117
    conditional_expression	go to state 140
    assignment_expression	go to state 160
    expression	go to state 233
    compound_statement	go to state 239
    expression_statement	go to state 240
    if_statement	go to state 241
    for_statement	go to state 242
    statement	go to state 381



state 376

    statement  ->  lxm_while '(' expression ')' @7 . @8 statement   (rule 209)

    $default	reduce using rule 208 (@8)

    @8  	go to state 382



state 377

    statement  ->  if_statement statement lxm_else @6 statement .   (rule 206)

    $default	reduce using rule 206 (statement)



state 378

    statement  ->  for_statement expression_statement @10 ')' statement .   (rule 213)

    $default	reduce using rule 213 (statement)



state 379

    statement  ->  for_statement expression_statement @11 expression ')' . @12 statement   (rule 216)

    $default	reduce using rule 215 (@12)

    @12 	go to state 383



state 380

    expression  ->  expression . ',' assignment_expression   (rule 71)
    statement  ->  lxm_do @9 statement lxm_while '(' expression . ')' ';'   (rule 211)

    ')' 	shift, and go to state 384
    ',' 	shift, and go to state 258



state 381

    statement  ->  lxm_switch '(' expression ')' @5 statement .   (rule 198)

    $default	reduce using rule 198 (statement)



state 382

    statement  ->  lxm_while '(' expression ')' @7 @8 . statement   (rule 209)

    lxm_identifier	shift, and go to state 219
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_break	shift, and go to state 220
    lxm_case	shift, and go to state 221
    lxm_continue	shift, and go to state 222
    lxm_default	shift, and go to state 223
    lxm_do	shift, and go to state 224
    lxm_for	shift, and go to state 225
    lxm_goto	shift, and go to state 226
    lxm_if	shift, and go to state 227
    lxm_return	shift, and go to state 228
    lxm_sizeof	shift, and go to state 95
    lxm_switch	shift, and go to state 229
    lxm_while	shift, and go to state 230
    '(' 	shift, and go to state 96
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    ';' 	shift, and go to state 231
    '{' 	shift, and go to state 81

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 139
    cast_expression	go to state 107
    multiplicative_expression	go to state 108
    additive_expression	go to state 109
    shift_expression	go to state 110
    relational_expression	go to state 111
    equality_expression	go to state 112
    and_expression	go to state 113
    exclusive_or_expression	go to state 114
    inclusive_or_expression	go to state 115
    logical_and_expression	go to state 116
    logical_or_expression	go to state 117
    conditional_expression	go to state 140
    assignment_expression	go to state 160
    expression	go to state 233
    compound_statement	go to state 239
    expression_statement	go to state 240
    if_statement	go to state 241
    for_statement	go to state 242
    statement	go to state 385



state 383

    statement  ->  for_statement expression_statement @11 expression ')' @12 . statement   (rule 216)

    lxm_identifier	shift, and go to state 219
    lxm_constant	shift, and go to state 91
    lxm_string_literal	shift, and go to state 92
    lxm_inc	shift, and go to state 93
    lxm_dec	shift, and go to state 94
    lxm_break	shift, and go to state 220
    lxm_case	shift, and go to state 221
    lxm_continue	shift, and go to state 222
    lxm_default	shift, and go to state 223
    lxm_do	shift, and go to state 224
    lxm_for	shift, and go to state 225
    lxm_goto	shift, and go to state 226
    lxm_if	shift, and go to state 227
    lxm_return	shift, and go to state 228
    lxm_sizeof	shift, and go to state 95
    lxm_switch	shift, and go to state 229
    lxm_while	shift, and go to state 230
    '(' 	shift, and go to state 96
    '&' 	shift, and go to state 98
    '*' 	shift, and go to state 99
    '+' 	shift, and go to state 100
    '-' 	shift, and go to state 101
    '~' 	shift, and go to state 102
    '!' 	shift, and go to state 103
    ';' 	shift, and go to state 231
    '{' 	shift, and go to state 81

    primary_expression	go to state 104
    postfix_expression	go to state 105
    unary_expression	go to state 139
    cast_expression	go to state 107
    multiplicative_expression	go to state 108
    additive_expression	go to state 109
    shift_expression	go to state 110
    relational_expression	go to state 111
    equality_expression	go to state 112
    and_expression	go to state 113
    exclusive_or_expression	go to state 114
    inclusive_or_expression	go to state 115
    logical_and_expression	go to state 116
    logical_or_expression	go to state 117
    conditional_expression	go to state 140
    assignment_expression	go to state 160
    expression	go to state 233
    compound_statement	go to state 239
    expression_statement	go to state 240
    if_statement	go to state 241
    for_statement	go to state 242
    statement	go to state 386



state 384

    statement  ->  lxm_do @9 statement lxm_while '(' expression ')' . ';'   (rule 211)

    ';' 	shift, and go to state 387



state 385

    statement  ->  lxm_while '(' expression ')' @7 @8 statement .   (rule 209)

    $default	reduce using rule 209 (statement)



state 386

    statement  ->  for_statement expression_statement @11 expression ')' @12 statement .   (rule 216)

    $default	reduce using rule 216 (statement)



state 387

    statement  ->  lxm_do @9 statement lxm_while '(' expression ')' ';' .   (rule 211)

    $default	reduce using rule 211 (statement)



state 388

    $   	go to state 389



state 389

    $default	accept
