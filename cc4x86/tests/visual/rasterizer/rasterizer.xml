<?xml version="1.0" encoding="utf-8"?>
<unit>
  <general>
    <source_module>..\..\tests\visual\rasterizer\rasterizer.c</source_module>
  </general>
  <functions_list>
    <function>
      <name>vec2f_add</name>
      <parameters>
        <parameter name="dst" type="struct vec2f_decl *"/>
        <parameter name="lhs" type="struct vec2f_decl *"/>
        <parameter name="rhs" type="struct vec2f_decl *"/>
      </parameters>
      <body>
        <expression type="float" lvalue="no" complexity="4" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="2" code="dereference">
            <operand_1 type="struct vec2f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="3" code="add">
            <operand_1 type="float" lvalue="yes" complexity="2" code="dereference">
              <operand_1 type="struct vec2f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
            </operand_1>
            <operand_2 type="float" lvalue="yes" complexity="2" code="dereference">
              <operand_1 type="struct vec2f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
            </operand_2>
          </operand_2>
        </expression>
        <expression type="float" lvalue="no" complexity="5" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct vec2f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct vec2f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="4" code="add">
            <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
              <operand_1 type="struct vec2f_decl *" lvalue="no" complexity="2" code="add">
                <operand_1 type="struct vec2f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
              </operand_1>
            </operand_1>
            <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
              <operand_1 type="struct vec2f_decl *" lvalue="no" complexity="2" code="add">
                <operand_1 type="struct vec2f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
              </operand_1>
            </operand_2>
          </operand_2>
        </expression>
        <expression type="null" lvalue="no" complexity="0" code="return" retvalue="void"/>
      </body>
    </function>
    <function>
      <name>vec2f_subtract</name>
      <parameters>
        <parameter name="dst" type="struct vec2f_decl *"/>
        <parameter name="lhs" type="struct vec2f_decl *"/>
        <parameter name="rhs" type="struct vec2f_decl *"/>
      </parameters>
      <body>
        <expression type="float" lvalue="no" complexity="4" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="2" code="dereference">
            <operand_1 type="struct vec2f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="3" code="sub">
            <operand_1 type="float" lvalue="yes" complexity="2" code="dereference">
              <operand_1 type="struct vec2f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
            </operand_1>
            <operand_2 type="float" lvalue="yes" complexity="2" code="dereference">
              <operand_1 type="struct vec2f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
            </operand_2>
          </operand_2>
        </expression>
        <expression type="float" lvalue="no" complexity="5" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct vec2f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct vec2f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="4" code="sub">
            <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
              <operand_1 type="struct vec2f_decl *" lvalue="no" complexity="2" code="add">
                <operand_1 type="struct vec2f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
              </operand_1>
            </operand_1>
            <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
              <operand_1 type="struct vec2f_decl *" lvalue="no" complexity="2" code="add">
                <operand_1 type="struct vec2f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
              </operand_1>
            </operand_2>
          </operand_2>
        </expression>
        <expression type="null" lvalue="no" complexity="0" code="return" retvalue="void"/>
      </body>
    </function>
    <function>
      <name>vec2f_mul</name>
      <parameters>
        <parameter name="vec" type="struct vec2f_decl *"/>
        <parameter name="rhs" type="float"/>
      </parameters>
      <body>
        <expression type="float" lvalue="no" complexity="3" code="mul_assign">
          <operand_1 type="float" lvalue="yes" complexity="2" code="dereference">
            <operand_1 type="struct vec2f_decl *" lvalue="yes" complexity="1" code="variable" name="vec"/>
          </operand_1>
          <operand_2 type="float" lvalue="yes" complexity="1" code="variable" name="rhs"/>
        </expression>
        <expression type="float" lvalue="no" complexity="4" code="mul_assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct vec2f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct vec2f_decl *" lvalue="yes" complexity="1" code="variable" name="vec"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="yes" complexity="1" code="variable" name="rhs"/>
        </expression>
        <expression type="null" lvalue="no" complexity="0" code="return" retvalue="void"/>
      </body>
    </function>
    <function>
      <name>vec4f_assign</name>
      <parameters>
        <parameter name="dst" type="struct vec4f_decl *"/>
        <parameter name="x" type="float"/>
        <parameter name="y" type="float"/>
        <parameter name="z" type="float"/>
        <parameter name="w" type="float"/>
      </parameters>
      <body>
        <expression type="float" lvalue="no" complexity="3" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="2" code="dereference">
            <operand_1 type="struct vec4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
          </operand_1>
          <operand_2 type="float" lvalue="yes" complexity="1" code="variable" name="x"/>
        </expression>
        <expression type="float" lvalue="no" complexity="4" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct vec4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct vec4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="yes" complexity="1" code="variable" name="y"/>
        </expression>
        <expression type="float" lvalue="no" complexity="4" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct vec4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct vec4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="8"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="yes" complexity="1" code="variable" name="z"/>
        </expression>
        <expression type="float" lvalue="no" complexity="4" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct vec4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct vec4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="12"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="yes" complexity="1" code="variable" name="w"/>
        </expression>
        <expression type="null" lvalue="no" complexity="0" code="return" retvalue="void"/>
      </body>
    </function>
    <function>
      <name>vec4f_add</name>
      <parameters>
        <parameter name="dst" type="struct vec4f_decl *"/>
        <parameter name="lhs" type="struct vec4f_decl *"/>
        <parameter name="rhs" type="struct vec4f_decl *"/>
      </parameters>
      <body>
        <expression type="float" lvalue="no" complexity="4" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="2" code="dereference">
            <operand_1 type="struct vec4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="3" code="add">
            <operand_1 type="float" lvalue="yes" complexity="2" code="dereference">
              <operand_1 type="struct vec4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
            </operand_1>
            <operand_2 type="float" lvalue="yes" complexity="2" code="dereference">
              <operand_1 type="struct vec4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
            </operand_2>
          </operand_2>
        </expression>
        <expression type="float" lvalue="no" complexity="5" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct vec4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct vec4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="4" code="add">
            <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
              <operand_1 type="struct vec4f_decl *" lvalue="no" complexity="2" code="add">
                <operand_1 type="struct vec4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
              </operand_1>
            </operand_1>
            <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
              <operand_1 type="struct vec4f_decl *" lvalue="no" complexity="2" code="add">
                <operand_1 type="struct vec4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
              </operand_1>
            </operand_2>
          </operand_2>
        </expression>
        <expression type="float" lvalue="no" complexity="5" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct vec4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct vec4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="8"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="4" code="add">
            <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
              <operand_1 type="struct vec4f_decl *" lvalue="no" complexity="2" code="add">
                <operand_1 type="struct vec4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="8"/>
              </operand_1>
            </operand_1>
            <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
              <operand_1 type="struct vec4f_decl *" lvalue="no" complexity="2" code="add">
                <operand_1 type="struct vec4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="8"/>
              </operand_1>
            </operand_2>
          </operand_2>
        </expression>
        <expression type="float" lvalue="no" complexity="5" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct vec4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct vec4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="12"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="4" code="add">
            <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
              <operand_1 type="struct vec4f_decl *" lvalue="no" complexity="2" code="add">
                <operand_1 type="struct vec4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="12"/>
              </operand_1>
            </operand_1>
            <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
              <operand_1 type="struct vec4f_decl *" lvalue="no" complexity="2" code="add">
                <operand_1 type="struct vec4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="12"/>
              </operand_1>
            </operand_2>
          </operand_2>
        </expression>
        <expression type="null" lvalue="no" complexity="0" code="return" retvalue="void"/>
      </body>
    </function>
    <function>
      <name>vec4f_subtract</name>
      <parameters>
        <parameter name="dst" type="struct vec4f_decl *"/>
        <parameter name="lhs" type="struct vec4f_decl *"/>
        <parameter name="rhs" type="struct vec4f_decl *"/>
      </parameters>
      <body>
        <expression type="float" lvalue="no" complexity="4" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="2" code="dereference">
            <operand_1 type="struct vec4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="3" code="sub">
            <operand_1 type="float" lvalue="yes" complexity="2" code="dereference">
              <operand_1 type="struct vec4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
            </operand_1>
            <operand_2 type="float" lvalue="yes" complexity="2" code="dereference">
              <operand_1 type="struct vec4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
            </operand_2>
          </operand_2>
        </expression>
        <expression type="float" lvalue="no" complexity="5" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct vec4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct vec4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="4" code="sub">
            <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
              <operand_1 type="struct vec4f_decl *" lvalue="no" complexity="2" code="add">
                <operand_1 type="struct vec4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
              </operand_1>
            </operand_1>
            <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
              <operand_1 type="struct vec4f_decl *" lvalue="no" complexity="2" code="add">
                <operand_1 type="struct vec4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
              </operand_1>
            </operand_2>
          </operand_2>
        </expression>
        <expression type="float" lvalue="no" complexity="5" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct vec4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct vec4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="8"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="4" code="sub">
            <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
              <operand_1 type="struct vec4f_decl *" lvalue="no" complexity="2" code="add">
                <operand_1 type="struct vec4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="8"/>
              </operand_1>
            </operand_1>
            <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
              <operand_1 type="struct vec4f_decl *" lvalue="no" complexity="2" code="add">
                <operand_1 type="struct vec4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="8"/>
              </operand_1>
            </operand_2>
          </operand_2>
        </expression>
        <expression type="float" lvalue="no" complexity="5" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct vec4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct vec4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="12"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="4" code="sub">
            <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
              <operand_1 type="struct vec4f_decl *" lvalue="no" complexity="2" code="add">
                <operand_1 type="struct vec4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="12"/>
              </operand_1>
            </operand_1>
            <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
              <operand_1 type="struct vec4f_decl *" lvalue="no" complexity="2" code="add">
                <operand_1 type="struct vec4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="12"/>
              </operand_1>
            </operand_2>
          </operand_2>
        </expression>
        <expression type="null" lvalue="no" complexity="0" code="return" retvalue="void"/>
      </body>
    </function>
    <function>
      <name>vec4f_dot</name>
      <parameters>
        <parameter name="lhs" type="struct vec4f_decl *"/>
        <parameter name="rhs" type="struct vec4f_decl *"/>
      </parameters>
      <body>
        <expression type="null" lvalue="no" complexity="0" code="return">
          <retvalue type="float" lvalue="no" complexity="7" code="add">
            <operand_1 type="float" lvalue="no" complexity="6" code="add">
              <operand_1 type="float" lvalue="no" complexity="5" code="add">
                <operand_1 type="float" lvalue="no" complexity="3" code="mul">
                  <operand_1 type="float" lvalue="yes" complexity="2" code="dereference">
                    <operand_1 type="struct vec4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                  </operand_1>
                  <operand_2 type="float" lvalue="yes" complexity="2" code="dereference">
                    <operand_1 type="struct vec4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                  </operand_2>
                </operand_1>
                <operand_2 type="float" lvalue="no" complexity="4" code="mul">
                  <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct vec4f_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct vec4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                    </operand_1>
                  </operand_1>
                  <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct vec4f_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct vec4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                    </operand_1>
                  </operand_2>
                </operand_2>
              </operand_1>
              <operand_2 type="float" lvalue="no" complexity="4" code="mul">
                <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                  <operand_1 type="struct vec4f_decl *" lvalue="no" complexity="2" code="add">
                    <operand_1 type="struct vec4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                    <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="8"/>
                  </operand_1>
                </operand_1>
                <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                  <operand_1 type="struct vec4f_decl *" lvalue="no" complexity="2" code="add">
                    <operand_1 type="struct vec4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                    <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="8"/>
                  </operand_1>
                </operand_2>
              </operand_2>
            </operand_1>
            <operand_2 type="float" lvalue="no" complexity="4" code="mul">
              <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                <operand_1 type="struct vec4f_decl *" lvalue="no" complexity="2" code="add">
                  <operand_1 type="struct vec4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                  <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="12"/>
                </operand_1>
              </operand_1>
              <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                <operand_1 type="struct vec4f_decl *" lvalue="no" complexity="2" code="add">
                  <operand_1 type="struct vec4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                  <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="12"/>
                </operand_1>
              </operand_2>
            </operand_2>
          </retvalue>
        </expression>
      </body>
    </function>
    <function>
      <name>vec4f_mul</name>
      <parameters>
        <parameter name="vec" type="struct vec4f_decl *"/>
        <parameter name="rhs" type="float"/>
      </parameters>
      <body>
        <expression type="float" lvalue="no" complexity="3" code="mul_assign">
          <operand_1 type="float" lvalue="yes" complexity="2" code="dereference">
            <operand_1 type="struct vec4f_decl *" lvalue="yes" complexity="1" code="variable" name="vec"/>
          </operand_1>
          <operand_2 type="float" lvalue="yes" complexity="1" code="variable" name="rhs"/>
        </expression>
        <expression type="float" lvalue="no" complexity="4" code="mul_assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct vec4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct vec4f_decl *" lvalue="yes" complexity="1" code="variable" name="vec"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="yes" complexity="1" code="variable" name="rhs"/>
        </expression>
        <expression type="float" lvalue="no" complexity="4" code="mul_assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct vec4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct vec4f_decl *" lvalue="yes" complexity="1" code="variable" name="vec"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="8"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="yes" complexity="1" code="variable" name="rhs"/>
        </expression>
        <expression type="float" lvalue="no" complexity="4" code="mul_assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct vec4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct vec4f_decl *" lvalue="yes" complexity="1" code="variable" name="vec"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="12"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="yes" complexity="1" code="variable" name="rhs"/>
        </expression>
        <expression type="null" lvalue="no" complexity="0" code="return" retvalue="void"/>
      </body>
    </function>
    <function>
      <name>vec4f_is_equal</name>
      <parameters>
        <parameter name="lhs" type="struct vec4f_decl *"/>
        <parameter name="rhs" type="struct vec4f_decl *"/>
      </parameters>
      <local_variables>
        <variable name="tmp" type="struct vec4f_decl"/>
        <variable name="len_sqr" type="float"/>
      </local_variables>
      <body>
        <expression type="void" lvalue="no" complexity="19" code="function call">
          <func_address type="void (struct vec4f_decl *, struct vec4f_decl *, struct vec4f_decl *)" lvalue="yes" complexity="1" code="variable" name="vec4f_subtract"/>
          <func_argument_0 type="struct vec4f_decl *" lvalue="no" complexity="1" code="get_address">
            <operand_1 type="struct vec4f_decl" lvalue="yes" complexity="1" code="variable" name="tmp"/>
          </func_argument_0>
          <func_argument_1 type="struct vec4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
          <func_argument_2 type="struct vec4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
        </expression>
        <expression type="float" lvalue="no" complexity="19" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="1" code="variable" name="len_sqr"/>
          <operand_2 type="float" lvalue="no" complexity="18" code="function call">
            <func_address type="float (struct vec4f_decl *, struct vec4f_decl *)" lvalue="yes" complexity="1" code="variable" name="vec4f_dot"/>
            <func_argument_0 type="struct vec4f_decl *" lvalue="no" complexity="1" code="get_address">
              <operand_1 type="struct vec4f_decl" lvalue="yes" complexity="1" code="variable" name="tmp"/>
            </func_argument_0>
            <func_argument_1 type="struct vec4f_decl *" lvalue="no" complexity="1" code="get_address">
              <operand_1 type="struct vec4f_decl" lvalue="yes" complexity="1" code="variable" name="tmp"/>
            </func_argument_1>
          </operand_2>
        </expression>
        <expression type="null" lvalue="no" complexity="0" code="return">
          <retvalue type="int" lvalue="no" complexity="2" code="less_then">
            <operand_1 type="double" lvalue="yes" complexity="1" code="variable" name="len_sqr"/>
            <operand_2 type="double" lvalue="no" complexity="1" code="float literal" value="0.000100"/>
          </retvalue>
        </expression>
      </body>
    </function>
    <function>
      <name>matrix4f_make_identity</name>
      <parameters>
        <parameter name="dst" type="struct matrix4f_decl *"/>
      </parameters>
      <body>
        <expression type="float" lvalue="no" complexity="3" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="2" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="1" code="float literal" value="1.000000"/>
        </expression>
        <expression type="float" lvalue="no" complexity="4" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="1" code="float literal" value="0.000000"/>
        </expression>
        <expression type="float" lvalue="no" complexity="4" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="8"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="1" code="float literal" value="0.000000"/>
        </expression>
        <expression type="float" lvalue="no" complexity="4" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="12"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="1" code="float literal" value="0.000000"/>
        </expression>
        <expression type="float" lvalue="no" complexity="4" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="16"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="1" code="float literal" value="0.000000"/>
        </expression>
        <expression type="float" lvalue="no" complexity="4" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="20"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="1" code="float literal" value="1.000000"/>
        </expression>
        <expression type="float" lvalue="no" complexity="4" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="24"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="1" code="float literal" value="0.000000"/>
        </expression>
        <expression type="float" lvalue="no" complexity="4" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="28"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="1" code="float literal" value="0.000000"/>
        </expression>
        <expression type="float" lvalue="no" complexity="4" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="32"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="1" code="float literal" value="0.000000"/>
        </expression>
        <expression type="float" lvalue="no" complexity="4" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="36"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="1" code="float literal" value="0.000000"/>
        </expression>
        <expression type="float" lvalue="no" complexity="4" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="40"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="1" code="float literal" value="1.000000"/>
        </expression>
        <expression type="float" lvalue="no" complexity="4" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="44"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="1" code="float literal" value="0.000000"/>
        </expression>
        <expression type="float" lvalue="no" complexity="4" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="48"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="1" code="float literal" value="0.000000"/>
        </expression>
        <expression type="float" lvalue="no" complexity="4" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="52"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="1" code="float literal" value="0.000000"/>
        </expression>
        <expression type="float" lvalue="no" complexity="4" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="56"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="1" code="float literal" value="0.000000"/>
        </expression>
        <expression type="float" lvalue="no" complexity="4" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="60"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="1" code="float literal" value="1.000000"/>
        </expression>
        <expression type="null" lvalue="no" complexity="0" code="return" retvalue="void"/>
      </body>
    </function>
    <function>
      <name>matrix4f_make_perspective</name>
      <parameters>
        <parameter name="dst" type="struct matrix4f_decl *"/>
        <parameter name="znear" type="float"/>
        <parameter name="zfar" type="float"/>
        <parameter name="tan_fovy2" type="float"/>
        <parameter name="aspect" type="float"/>
      </parameters>
      <local_variables>
        <variable name="h" type="float"/>
        <variable name="w" type="float"/>
      </local_variables>
      <body>
        <expression type="float" lvalue="no" complexity="3" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="1" code="variable" name="h"/>
          <operand_2 type="float" lvalue="no" complexity="2" code="mul">
            <operand_1 type="float" lvalue="yes" complexity="1" code="variable" name="tan_fovy2"/>
            <operand_2 type="float" lvalue="yes" complexity="1" code="variable" name="znear"/>
          </operand_2>
        </expression>
        <expression type="float" lvalue="no" complexity="3" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="1" code="variable" name="w"/>
          <operand_2 type="float" lvalue="no" complexity="2" code="mul">
            <operand_1 type="float" lvalue="yes" complexity="1" code="variable" name="h"/>
            <operand_2 type="float" lvalue="yes" complexity="1" code="variable" name="aspect"/>
          </operand_2>
        </expression>
        <expression type="float" lvalue="no" complexity="3" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="2" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="2" code="div">
            <operand_1 type="float" lvalue="yes" complexity="1" code="variable" name="znear"/>
            <operand_2 type="float" lvalue="yes" complexity="1" code="variable" name="w"/>
          </operand_2>
        </expression>
        <expression type="float" lvalue="no" complexity="4" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="1" code="float literal" value="0.000000"/>
        </expression>
        <expression type="float" lvalue="no" complexity="4" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="8"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="1" code="float literal" value="0.000000"/>
        </expression>
        <expression type="float" lvalue="no" complexity="4" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="12"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="1" code="float literal" value="0.000000"/>
        </expression>
        <expression type="float" lvalue="no" complexity="4" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="16"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="1" code="float literal" value="0.000000"/>
        </expression>
        <expression type="float" lvalue="no" complexity="4" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="20"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="2" code="div">
            <operand_1 type="float" lvalue="yes" complexity="1" code="variable" name="znear"/>
            <operand_2 type="float" lvalue="yes" complexity="1" code="variable" name="h"/>
          </operand_2>
        </expression>
        <expression type="float" lvalue="no" complexity="4" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="24"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="1" code="float literal" value="0.000000"/>
        </expression>
        <expression type="float" lvalue="no" complexity="4" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="28"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="1" code="float literal" value="0.000000"/>
        </expression>
        <expression type="float" lvalue="no" complexity="4" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="32"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="1" code="float literal" value="0.000000"/>
        </expression>
        <expression type="float" lvalue="no" complexity="4" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="36"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="1" code="float literal" value="0.000000"/>
        </expression>
        <expression type="float" lvalue="no" complexity="4" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="40"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="3" code="div">
            <operand_1 type="float" lvalue="yes" complexity="1" code="variable" name="zfar"/>
            <operand_2 type="float" lvalue="no" complexity="2" code="sub">
              <operand_1 type="float" lvalue="yes" complexity="1" code="variable" name="zfar"/>
              <operand_2 type="float" lvalue="yes" complexity="1" code="variable" name="znear"/>
            </operand_2>
          </operand_2>
        </expression>
        <expression type="float" lvalue="no" complexity="4" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="44"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="1" code="float literal" value="1.000000"/>
        </expression>
        <expression type="float" lvalue="no" complexity="4" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="48"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="1" code="float literal" value="0.000000"/>
        </expression>
        <expression type="float" lvalue="no" complexity="4" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="52"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="1" code="float literal" value="0.000000"/>
        </expression>
        <expression type="float" lvalue="no" complexity="4" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="56"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="3" code="div">
            <operand_1 type="float" lvalue="no" complexity="2" code="mul">
              <operand_1 type="float" lvalue="yes" complexity="1" code="variable" name="znear"/>
              <operand_2 type="float" lvalue="yes" complexity="1" code="variable" name="zfar"/>
            </operand_1>
            <operand_2 type="float" lvalue="no" complexity="2" code="sub">
              <operand_1 type="float" lvalue="yes" complexity="1" code="variable" name="znear"/>
              <operand_2 type="float" lvalue="yes" complexity="1" code="variable" name="zfar"/>
            </operand_2>
          </operand_2>
        </expression>
        <expression type="float" lvalue="no" complexity="4" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="60"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="1" code="float literal" value="0.000000"/>
        </expression>
        <expression type="null" lvalue="no" complexity="0" code="return" retvalue="void"/>
      </body>
    </function>
    <function>
      <name>matrix4f_make_viewport</name>
      <parameters>
        <parameter name="dst" type="struct matrix4f_decl *"/>
        <parameter name="width" type="float"/>
        <parameter name="height" type="float"/>
        <parameter name="znear" type="float"/>
        <parameter name="zfar" type="float"/>
      </parameters>
      <body>
        <expression type="float" lvalue="no" complexity="3" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="2" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="2" code="div">
            <operand_1 type="float" lvalue="yes" complexity="1" code="variable" name="width"/>
            <operand_2 type="float" lvalue="no" complexity="1" code="float literal" value="2.000000"/>
          </operand_2>
        </expression>
        <expression type="float" lvalue="no" complexity="4" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="1" code="float literal" value="0.000000"/>
        </expression>
        <expression type="float" lvalue="no" complexity="4" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="8"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="1" code="float literal" value="0.000000"/>
        </expression>
        <expression type="float" lvalue="no" complexity="4" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="12"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="1" code="float literal" value="0.000000"/>
        </expression>
        <expression type="float" lvalue="no" complexity="4" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="16"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="1" code="float literal" value="0.000000"/>
        </expression>
        <expression type="float" lvalue="no" complexity="4" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="20"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="3" code="div">
            <operand_1 type="float" lvalue="no" complexity="2" code="neg">
              <operand_1 type="float" lvalue="yes" complexity="1" code="variable" name="height"/>
            </operand_1>
            <operand_2 type="float" lvalue="no" complexity="1" code="float literal" value="2.000000"/>
          </operand_2>
        </expression>
        <expression type="float" lvalue="no" complexity="4" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="24"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="1" code="float literal" value="0.000000"/>
        </expression>
        <expression type="float" lvalue="no" complexity="4" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="28"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="1" code="float literal" value="0.000000"/>
        </expression>
        <expression type="float" lvalue="no" complexity="4" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="32"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="1" code="float literal" value="0.000000"/>
        </expression>
        <expression type="float" lvalue="no" complexity="4" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="36"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="1" code="float literal" value="0.000000"/>
        </expression>
        <expression type="float" lvalue="no" complexity="4" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="40"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="2" code="sub">
            <operand_1 type="float" lvalue="yes" complexity="1" code="variable" name="zfar"/>
            <operand_2 type="float" lvalue="yes" complexity="1" code="variable" name="znear"/>
          </operand_2>
        </expression>
        <expression type="float" lvalue="no" complexity="4" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="44"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="1" code="float literal" value="0.000000"/>
        </expression>
        <expression type="float" lvalue="no" complexity="4" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="48"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="2" code="div">
            <operand_1 type="float" lvalue="yes" complexity="1" code="variable" name="width"/>
            <operand_2 type="float" lvalue="no" complexity="1" code="float literal" value="2.000000"/>
          </operand_2>
        </expression>
        <expression type="float" lvalue="no" complexity="4" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="52"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="2" code="div">
            <operand_1 type="float" lvalue="yes" complexity="1" code="variable" name="height"/>
            <operand_2 type="float" lvalue="no" complexity="1" code="float literal" value="2.000000"/>
          </operand_2>
        </expression>
        <expression type="float" lvalue="no" complexity="4" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="56"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="yes" complexity="1" code="variable" name="znear"/>
        </expression>
        <expression type="float" lvalue="no" complexity="4" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="60"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="1" code="float literal" value="1.000000"/>
        </expression>
        <expression type="null" lvalue="no" complexity="0" code="return" retvalue="void"/>
      </body>
    </function>
    <function>
      <name>matrix4f_mul</name>
      <parameters>
        <parameter name="dst" type="struct matrix4f_decl *"/>
        <parameter name="lhs" type="struct matrix4f_decl *"/>
        <parameter name="rhs" type="struct matrix4f_decl *"/>
      </parameters>
      <body>
        <expression type="float" lvalue="no" complexity="8" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="2" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="7" code="add">
            <operand_1 type="float" lvalue="no" complexity="6" code="add">
              <operand_1 type="float" lvalue="no" complexity="5" code="add">
                <operand_1 type="float" lvalue="no" complexity="3" code="mul">
                  <operand_1 type="float" lvalue="yes" complexity="2" code="dereference">
                    <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                  </operand_1>
                  <operand_2 type="float" lvalue="yes" complexity="2" code="dereference">
                    <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                  </operand_2>
                </operand_1>
                <operand_2 type="float" lvalue="no" complexity="4" code="mul">
                  <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                    </operand_1>
                  </operand_1>
                  <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="16"/>
                    </operand_1>
                  </operand_2>
                </operand_2>
              </operand_1>
              <operand_2 type="float" lvalue="no" complexity="4" code="mul">
                <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                  <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                    <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                    <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="8"/>
                  </operand_1>
                </operand_1>
                <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                  <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                    <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                    <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="32"/>
                  </operand_1>
                </operand_2>
              </operand_2>
            </operand_1>
            <operand_2 type="float" lvalue="no" complexity="4" code="mul">
              <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                  <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                  <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="12"/>
                </operand_1>
              </operand_1>
              <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                  <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                  <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="48"/>
                </operand_1>
              </operand_2>
            </operand_2>
          </operand_2>
        </expression>
        <expression type="float" lvalue="no" complexity="8" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="7" code="add">
            <operand_1 type="float" lvalue="no" complexity="6" code="add">
              <operand_1 type="float" lvalue="no" complexity="5" code="add">
                <operand_1 type="float" lvalue="no" complexity="4" code="mul">
                  <operand_1 type="float" lvalue="yes" complexity="2" code="dereference">
                    <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                  </operand_1>
                  <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                    </operand_1>
                  </operand_2>
                </operand_1>
                <operand_2 type="float" lvalue="no" complexity="4" code="mul">
                  <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                    </operand_1>
                  </operand_1>
                  <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="20"/>
                    </operand_1>
                  </operand_2>
                </operand_2>
              </operand_1>
              <operand_2 type="float" lvalue="no" complexity="4" code="mul">
                <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                  <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                    <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                    <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="8"/>
                  </operand_1>
                </operand_1>
                <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                  <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                    <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                    <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="36"/>
                  </operand_1>
                </operand_2>
              </operand_2>
            </operand_1>
            <operand_2 type="float" lvalue="no" complexity="4" code="mul">
              <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                  <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                  <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="12"/>
                </operand_1>
              </operand_1>
              <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                  <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                  <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="52"/>
                </operand_1>
              </operand_2>
            </operand_2>
          </operand_2>
        </expression>
        <expression type="float" lvalue="no" complexity="8" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="8"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="7" code="add">
            <operand_1 type="float" lvalue="no" complexity="6" code="add">
              <operand_1 type="float" lvalue="no" complexity="5" code="add">
                <operand_1 type="float" lvalue="no" complexity="4" code="mul">
                  <operand_1 type="float" lvalue="yes" complexity="2" code="dereference">
                    <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                  </operand_1>
                  <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="8"/>
                    </operand_1>
                  </operand_2>
                </operand_1>
                <operand_2 type="float" lvalue="no" complexity="4" code="mul">
                  <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                    </operand_1>
                  </operand_1>
                  <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="24"/>
                    </operand_1>
                  </operand_2>
                </operand_2>
              </operand_1>
              <operand_2 type="float" lvalue="no" complexity="4" code="mul">
                <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                  <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                    <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                    <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="8"/>
                  </operand_1>
                </operand_1>
                <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                  <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                    <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                    <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="40"/>
                  </operand_1>
                </operand_2>
              </operand_2>
            </operand_1>
            <operand_2 type="float" lvalue="no" complexity="4" code="mul">
              <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                  <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                  <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="12"/>
                </operand_1>
              </operand_1>
              <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                  <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                  <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="56"/>
                </operand_1>
              </operand_2>
            </operand_2>
          </operand_2>
        </expression>
        <expression type="float" lvalue="no" complexity="8" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="12"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="7" code="add">
            <operand_1 type="float" lvalue="no" complexity="6" code="add">
              <operand_1 type="float" lvalue="no" complexity="5" code="add">
                <operand_1 type="float" lvalue="no" complexity="4" code="mul">
                  <operand_1 type="float" lvalue="yes" complexity="2" code="dereference">
                    <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                  </operand_1>
                  <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="12"/>
                    </operand_1>
                  </operand_2>
                </operand_1>
                <operand_2 type="float" lvalue="no" complexity="4" code="mul">
                  <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                    </operand_1>
                  </operand_1>
                  <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="28"/>
                    </operand_1>
                  </operand_2>
                </operand_2>
              </operand_1>
              <operand_2 type="float" lvalue="no" complexity="4" code="mul">
                <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                  <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                    <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                    <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="8"/>
                  </operand_1>
                </operand_1>
                <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                  <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                    <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                    <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="44"/>
                  </operand_1>
                </operand_2>
              </operand_2>
            </operand_1>
            <operand_2 type="float" lvalue="no" complexity="4" code="mul">
              <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                  <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                  <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="12"/>
                </operand_1>
              </operand_1>
              <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                  <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                  <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="60"/>
                </operand_1>
              </operand_2>
            </operand_2>
          </operand_2>
        </expression>
        <expression type="float" lvalue="no" complexity="8" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="16"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="7" code="add">
            <operand_1 type="float" lvalue="no" complexity="6" code="add">
              <operand_1 type="float" lvalue="no" complexity="5" code="add">
                <operand_1 type="float" lvalue="no" complexity="4" code="mul">
                  <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="16"/>
                    </operand_1>
                  </operand_1>
                  <operand_2 type="float" lvalue="yes" complexity="2" code="dereference">
                    <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                  </operand_2>
                </operand_1>
                <operand_2 type="float" lvalue="no" complexity="4" code="mul">
                  <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="20"/>
                    </operand_1>
                  </operand_1>
                  <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="16"/>
                    </operand_1>
                  </operand_2>
                </operand_2>
              </operand_1>
              <operand_2 type="float" lvalue="no" complexity="4" code="mul">
                <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                  <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                    <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                    <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="24"/>
                  </operand_1>
                </operand_1>
                <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                  <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                    <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                    <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="32"/>
                  </operand_1>
                </operand_2>
              </operand_2>
            </operand_1>
            <operand_2 type="float" lvalue="no" complexity="4" code="mul">
              <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                  <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                  <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="28"/>
                </operand_1>
              </operand_1>
              <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                  <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                  <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="48"/>
                </operand_1>
              </operand_2>
            </operand_2>
          </operand_2>
        </expression>
        <expression type="float" lvalue="no" complexity="8" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="20"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="7" code="add">
            <operand_1 type="float" lvalue="no" complexity="6" code="add">
              <operand_1 type="float" lvalue="no" complexity="5" code="add">
                <operand_1 type="float" lvalue="no" complexity="4" code="mul">
                  <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="16"/>
                    </operand_1>
                  </operand_1>
                  <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                    </operand_1>
                  </operand_2>
                </operand_1>
                <operand_2 type="float" lvalue="no" complexity="4" code="mul">
                  <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="20"/>
                    </operand_1>
                  </operand_1>
                  <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="20"/>
                    </operand_1>
                  </operand_2>
                </operand_2>
              </operand_1>
              <operand_2 type="float" lvalue="no" complexity="4" code="mul">
                <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                  <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                    <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                    <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="24"/>
                  </operand_1>
                </operand_1>
                <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                  <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                    <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                    <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="36"/>
                  </operand_1>
                </operand_2>
              </operand_2>
            </operand_1>
            <operand_2 type="float" lvalue="no" complexity="4" code="mul">
              <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                  <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                  <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="28"/>
                </operand_1>
              </operand_1>
              <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                  <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                  <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="52"/>
                </operand_1>
              </operand_2>
            </operand_2>
          </operand_2>
        </expression>
        <expression type="float" lvalue="no" complexity="8" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="24"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="7" code="add">
            <operand_1 type="float" lvalue="no" complexity="6" code="add">
              <operand_1 type="float" lvalue="no" complexity="5" code="add">
                <operand_1 type="float" lvalue="no" complexity="4" code="mul">
                  <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="16"/>
                    </operand_1>
                  </operand_1>
                  <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="8"/>
                    </operand_1>
                  </operand_2>
                </operand_1>
                <operand_2 type="float" lvalue="no" complexity="4" code="mul">
                  <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="20"/>
                    </operand_1>
                  </operand_1>
                  <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="24"/>
                    </operand_1>
                  </operand_2>
                </operand_2>
              </operand_1>
              <operand_2 type="float" lvalue="no" complexity="4" code="mul">
                <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                  <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                    <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                    <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="24"/>
                  </operand_1>
                </operand_1>
                <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                  <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                    <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                    <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="40"/>
                  </operand_1>
                </operand_2>
              </operand_2>
            </operand_1>
            <operand_2 type="float" lvalue="no" complexity="4" code="mul">
              <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                  <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                  <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="28"/>
                </operand_1>
              </operand_1>
              <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                  <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                  <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="56"/>
                </operand_1>
              </operand_2>
            </operand_2>
          </operand_2>
        </expression>
        <expression type="float" lvalue="no" complexity="8" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="28"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="7" code="add">
            <operand_1 type="float" lvalue="no" complexity="6" code="add">
              <operand_1 type="float" lvalue="no" complexity="5" code="add">
                <operand_1 type="float" lvalue="no" complexity="4" code="mul">
                  <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="16"/>
                    </operand_1>
                  </operand_1>
                  <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="12"/>
                    </operand_1>
                  </operand_2>
                </operand_1>
                <operand_2 type="float" lvalue="no" complexity="4" code="mul">
                  <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="20"/>
                    </operand_1>
                  </operand_1>
                  <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="28"/>
                    </operand_1>
                  </operand_2>
                </operand_2>
              </operand_1>
              <operand_2 type="float" lvalue="no" complexity="4" code="mul">
                <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                  <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                    <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                    <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="24"/>
                  </operand_1>
                </operand_1>
                <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                  <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                    <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                    <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="44"/>
                  </operand_1>
                </operand_2>
              </operand_2>
            </operand_1>
            <operand_2 type="float" lvalue="no" complexity="4" code="mul">
              <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                  <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                  <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="28"/>
                </operand_1>
              </operand_1>
              <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                  <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                  <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="60"/>
                </operand_1>
              </operand_2>
            </operand_2>
          </operand_2>
        </expression>
        <expression type="float" lvalue="no" complexity="8" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="32"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="7" code="add">
            <operand_1 type="float" lvalue="no" complexity="6" code="add">
              <operand_1 type="float" lvalue="no" complexity="5" code="add">
                <operand_1 type="float" lvalue="no" complexity="4" code="mul">
                  <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="32"/>
                    </operand_1>
                  </operand_1>
                  <operand_2 type="float" lvalue="yes" complexity="2" code="dereference">
                    <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                  </operand_2>
                </operand_1>
                <operand_2 type="float" lvalue="no" complexity="4" code="mul">
                  <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="36"/>
                    </operand_1>
                  </operand_1>
                  <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="16"/>
                    </operand_1>
                  </operand_2>
                </operand_2>
              </operand_1>
              <operand_2 type="float" lvalue="no" complexity="4" code="mul">
                <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                  <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                    <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                    <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="40"/>
                  </operand_1>
                </operand_1>
                <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                  <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                    <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                    <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="32"/>
                  </operand_1>
                </operand_2>
              </operand_2>
            </operand_1>
            <operand_2 type="float" lvalue="no" complexity="4" code="mul">
              <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                  <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                  <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="44"/>
                </operand_1>
              </operand_1>
              <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                  <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                  <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="48"/>
                </operand_1>
              </operand_2>
            </operand_2>
          </operand_2>
        </expression>
        <expression type="float" lvalue="no" complexity="8" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="36"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="7" code="add">
            <operand_1 type="float" lvalue="no" complexity="6" code="add">
              <operand_1 type="float" lvalue="no" complexity="5" code="add">
                <operand_1 type="float" lvalue="no" complexity="4" code="mul">
                  <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="32"/>
                    </operand_1>
                  </operand_1>
                  <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                    </operand_1>
                  </operand_2>
                </operand_1>
                <operand_2 type="float" lvalue="no" complexity="4" code="mul">
                  <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="36"/>
                    </operand_1>
                  </operand_1>
                  <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="20"/>
                    </operand_1>
                  </operand_2>
                </operand_2>
              </operand_1>
              <operand_2 type="float" lvalue="no" complexity="4" code="mul">
                <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                  <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                    <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                    <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="40"/>
                  </operand_1>
                </operand_1>
                <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                  <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                    <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                    <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="36"/>
                  </operand_1>
                </operand_2>
              </operand_2>
            </operand_1>
            <operand_2 type="float" lvalue="no" complexity="4" code="mul">
              <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                  <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                  <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="44"/>
                </operand_1>
              </operand_1>
              <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                  <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                  <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="52"/>
                </operand_1>
              </operand_2>
            </operand_2>
          </operand_2>
        </expression>
        <expression type="float" lvalue="no" complexity="8" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="40"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="7" code="add">
            <operand_1 type="float" lvalue="no" complexity="6" code="add">
              <operand_1 type="float" lvalue="no" complexity="5" code="add">
                <operand_1 type="float" lvalue="no" complexity="4" code="mul">
                  <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="32"/>
                    </operand_1>
                  </operand_1>
                  <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="8"/>
                    </operand_1>
                  </operand_2>
                </operand_1>
                <operand_2 type="float" lvalue="no" complexity="4" code="mul">
                  <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="36"/>
                    </operand_1>
                  </operand_1>
                  <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="24"/>
                    </operand_1>
                  </operand_2>
                </operand_2>
              </operand_1>
              <operand_2 type="float" lvalue="no" complexity="4" code="mul">
                <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                  <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                    <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                    <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="40"/>
                  </operand_1>
                </operand_1>
                <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                  <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                    <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                    <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="40"/>
                  </operand_1>
                </operand_2>
              </operand_2>
            </operand_1>
            <operand_2 type="float" lvalue="no" complexity="4" code="mul">
              <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                  <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                  <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="44"/>
                </operand_1>
              </operand_1>
              <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                  <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                  <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="56"/>
                </operand_1>
              </operand_2>
            </operand_2>
          </operand_2>
        </expression>
        <expression type="float" lvalue="no" complexity="8" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="44"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="7" code="add">
            <operand_1 type="float" lvalue="no" complexity="6" code="add">
              <operand_1 type="float" lvalue="no" complexity="5" code="add">
                <operand_1 type="float" lvalue="no" complexity="4" code="mul">
                  <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="32"/>
                    </operand_1>
                  </operand_1>
                  <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="12"/>
                    </operand_1>
                  </operand_2>
                </operand_1>
                <operand_2 type="float" lvalue="no" complexity="4" code="mul">
                  <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="36"/>
                    </operand_1>
                  </operand_1>
                  <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="28"/>
                    </operand_1>
                  </operand_2>
                </operand_2>
              </operand_1>
              <operand_2 type="float" lvalue="no" complexity="4" code="mul">
                <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                  <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                    <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                    <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="40"/>
                  </operand_1>
                </operand_1>
                <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                  <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                    <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                    <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="44"/>
                  </operand_1>
                </operand_2>
              </operand_2>
            </operand_1>
            <operand_2 type="float" lvalue="no" complexity="4" code="mul">
              <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                  <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                  <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="44"/>
                </operand_1>
              </operand_1>
              <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                  <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                  <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="60"/>
                </operand_1>
              </operand_2>
            </operand_2>
          </operand_2>
        </expression>
        <expression type="float" lvalue="no" complexity="8" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="48"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="7" code="add">
            <operand_1 type="float" lvalue="no" complexity="6" code="add">
              <operand_1 type="float" lvalue="no" complexity="5" code="add">
                <operand_1 type="float" lvalue="no" complexity="4" code="mul">
                  <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="48"/>
                    </operand_1>
                  </operand_1>
                  <operand_2 type="float" lvalue="yes" complexity="2" code="dereference">
                    <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                  </operand_2>
                </operand_1>
                <operand_2 type="float" lvalue="no" complexity="4" code="mul">
                  <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="52"/>
                    </operand_1>
                  </operand_1>
                  <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="16"/>
                    </operand_1>
                  </operand_2>
                </operand_2>
              </operand_1>
              <operand_2 type="float" lvalue="no" complexity="4" code="mul">
                <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                  <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                    <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                    <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="56"/>
                  </operand_1>
                </operand_1>
                <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                  <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                    <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                    <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="32"/>
                  </operand_1>
                </operand_2>
              </operand_2>
            </operand_1>
            <operand_2 type="float" lvalue="no" complexity="4" code="mul">
              <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                  <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                  <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="60"/>
                </operand_1>
              </operand_1>
              <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                  <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                  <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="48"/>
                </operand_1>
              </operand_2>
            </operand_2>
          </operand_2>
        </expression>
        <expression type="float" lvalue="no" complexity="8" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="52"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="7" code="add">
            <operand_1 type="float" lvalue="no" complexity="6" code="add">
              <operand_1 type="float" lvalue="no" complexity="5" code="add">
                <operand_1 type="float" lvalue="no" complexity="4" code="mul">
                  <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="48"/>
                    </operand_1>
                  </operand_1>
                  <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                    </operand_1>
                  </operand_2>
                </operand_1>
                <operand_2 type="float" lvalue="no" complexity="4" code="mul">
                  <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="52"/>
                    </operand_1>
                  </operand_1>
                  <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="20"/>
                    </operand_1>
                  </operand_2>
                </operand_2>
              </operand_1>
              <operand_2 type="float" lvalue="no" complexity="4" code="mul">
                <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                  <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                    <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                    <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="56"/>
                  </operand_1>
                </operand_1>
                <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                  <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                    <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                    <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="36"/>
                  </operand_1>
                </operand_2>
              </operand_2>
            </operand_1>
            <operand_2 type="float" lvalue="no" complexity="4" code="mul">
              <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                  <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                  <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="60"/>
                </operand_1>
              </operand_1>
              <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                  <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                  <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="52"/>
                </operand_1>
              </operand_2>
            </operand_2>
          </operand_2>
        </expression>
        <expression type="float" lvalue="no" complexity="8" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="56"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="7" code="add">
            <operand_1 type="float" lvalue="no" complexity="6" code="add">
              <operand_1 type="float" lvalue="no" complexity="5" code="add">
                <operand_1 type="float" lvalue="no" complexity="4" code="mul">
                  <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="48"/>
                    </operand_1>
                  </operand_1>
                  <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="8"/>
                    </operand_1>
                  </operand_2>
                </operand_1>
                <operand_2 type="float" lvalue="no" complexity="4" code="mul">
                  <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="52"/>
                    </operand_1>
                  </operand_1>
                  <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="24"/>
                    </operand_1>
                  </operand_2>
                </operand_2>
              </operand_1>
              <operand_2 type="float" lvalue="no" complexity="4" code="mul">
                <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                  <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                    <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                    <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="56"/>
                  </operand_1>
                </operand_1>
                <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                  <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                    <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                    <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="40"/>
                  </operand_1>
                </operand_2>
              </operand_2>
            </operand_1>
            <operand_2 type="float" lvalue="no" complexity="4" code="mul">
              <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                  <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                  <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="60"/>
                </operand_1>
              </operand_1>
              <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                  <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                  <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="56"/>
                </operand_1>
              </operand_2>
            </operand_2>
          </operand_2>
        </expression>
        <expression type="float" lvalue="no" complexity="8" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="60"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="7" code="add">
            <operand_1 type="float" lvalue="no" complexity="6" code="add">
              <operand_1 type="float" lvalue="no" complexity="5" code="add">
                <operand_1 type="float" lvalue="no" complexity="4" code="mul">
                  <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="48"/>
                    </operand_1>
                  </operand_1>
                  <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="12"/>
                    </operand_1>
                  </operand_2>
                </operand_1>
                <operand_2 type="float" lvalue="no" complexity="4" code="mul">
                  <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="52"/>
                    </operand_1>
                  </operand_1>
                  <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="28"/>
                    </operand_1>
                  </operand_2>
                </operand_2>
              </operand_1>
              <operand_2 type="float" lvalue="no" complexity="4" code="mul">
                <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                  <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                    <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                    <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="56"/>
                  </operand_1>
                </operand_1>
                <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                  <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                    <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                    <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="44"/>
                  </operand_1>
                </operand_2>
              </operand_2>
            </operand_1>
            <operand_2 type="float" lvalue="no" complexity="4" code="mul">
              <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                  <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="lhs"/>
                  <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="60"/>
                </operand_1>
              </operand_1>
              <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                  <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="rhs"/>
                  <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="60"/>
                </operand_1>
              </operand_2>
            </operand_2>
          </operand_2>
        </expression>
        <expression type="null" lvalue="no" complexity="0" code="return" retvalue="void"/>
      </body>
    </function>
    <function>
      <name>matrix4f_transform</name>
      <parameters>
        <parameter name="dst" type="struct vec4f_decl *"/>
        <parameter name="vec" type="struct vec4f_decl *"/>
        <parameter name="mat" type="struct matrix4f_decl *"/>
      </parameters>
      <body>
        <expression type="float" lvalue="no" complexity="8" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="2" code="dereference">
            <operand_1 type="struct vec4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="7" code="add">
            <operand_1 type="float" lvalue="no" complexity="6" code="add">
              <operand_1 type="float" lvalue="no" complexity="5" code="add">
                <operand_1 type="float" lvalue="no" complexity="3" code="mul">
                  <operand_1 type="float" lvalue="yes" complexity="2" code="dereference">
                    <operand_1 type="struct vec4f_decl *" lvalue="yes" complexity="1" code="variable" name="vec"/>
                  </operand_1>
                  <operand_2 type="float" lvalue="yes" complexity="2" code="dereference">
                    <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="mat"/>
                  </operand_2>
                </operand_1>
                <operand_2 type="float" lvalue="no" complexity="4" code="mul">
                  <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct vec4f_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct vec4f_decl *" lvalue="yes" complexity="1" code="variable" name="vec"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                    </operand_1>
                  </operand_1>
                  <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="mat"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="16"/>
                    </operand_1>
                  </operand_2>
                </operand_2>
              </operand_1>
              <operand_2 type="float" lvalue="no" complexity="4" code="mul">
                <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                  <operand_1 type="struct vec4f_decl *" lvalue="no" complexity="2" code="add">
                    <operand_1 type="struct vec4f_decl *" lvalue="yes" complexity="1" code="variable" name="vec"/>
                    <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="8"/>
                  </operand_1>
                </operand_1>
                <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                  <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                    <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="mat"/>
                    <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="32"/>
                  </operand_1>
                </operand_2>
              </operand_2>
            </operand_1>
            <operand_2 type="float" lvalue="no" complexity="4" code="mul">
              <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                <operand_1 type="struct vec4f_decl *" lvalue="no" complexity="2" code="add">
                  <operand_1 type="struct vec4f_decl *" lvalue="yes" complexity="1" code="variable" name="vec"/>
                  <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="12"/>
                </operand_1>
              </operand_1>
              <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                  <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="mat"/>
                  <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="48"/>
                </operand_1>
              </operand_2>
            </operand_2>
          </operand_2>
        </expression>
        <expression type="float" lvalue="no" complexity="8" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct vec4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct vec4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="7" code="add">
            <operand_1 type="float" lvalue="no" complexity="6" code="add">
              <operand_1 type="float" lvalue="no" complexity="5" code="add">
                <operand_1 type="float" lvalue="no" complexity="4" code="mul">
                  <operand_1 type="float" lvalue="yes" complexity="2" code="dereference">
                    <operand_1 type="struct vec4f_decl *" lvalue="yes" complexity="1" code="variable" name="vec"/>
                  </operand_1>
                  <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="mat"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                    </operand_1>
                  </operand_2>
                </operand_1>
                <operand_2 type="float" lvalue="no" complexity="4" code="mul">
                  <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct vec4f_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct vec4f_decl *" lvalue="yes" complexity="1" code="variable" name="vec"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                    </operand_1>
                  </operand_1>
                  <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="mat"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="20"/>
                    </operand_1>
                  </operand_2>
                </operand_2>
              </operand_1>
              <operand_2 type="float" lvalue="no" complexity="4" code="mul">
                <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                  <operand_1 type="struct vec4f_decl *" lvalue="no" complexity="2" code="add">
                    <operand_1 type="struct vec4f_decl *" lvalue="yes" complexity="1" code="variable" name="vec"/>
                    <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="8"/>
                  </operand_1>
                </operand_1>
                <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                  <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                    <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="mat"/>
                    <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="36"/>
                  </operand_1>
                </operand_2>
              </operand_2>
            </operand_1>
            <operand_2 type="float" lvalue="no" complexity="4" code="mul">
              <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                <operand_1 type="struct vec4f_decl *" lvalue="no" complexity="2" code="add">
                  <operand_1 type="struct vec4f_decl *" lvalue="yes" complexity="1" code="variable" name="vec"/>
                  <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="12"/>
                </operand_1>
              </operand_1>
              <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                  <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="mat"/>
                  <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="52"/>
                </operand_1>
              </operand_2>
            </operand_2>
          </operand_2>
        </expression>
        <expression type="float" lvalue="no" complexity="8" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct vec4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct vec4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="8"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="7" code="add">
            <operand_1 type="float" lvalue="no" complexity="6" code="add">
              <operand_1 type="float" lvalue="no" complexity="5" code="add">
                <operand_1 type="float" lvalue="no" complexity="4" code="mul">
                  <operand_1 type="float" lvalue="yes" complexity="2" code="dereference">
                    <operand_1 type="struct vec4f_decl *" lvalue="yes" complexity="1" code="variable" name="vec"/>
                  </operand_1>
                  <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="mat"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="8"/>
                    </operand_1>
                  </operand_2>
                </operand_1>
                <operand_2 type="float" lvalue="no" complexity="4" code="mul">
                  <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct vec4f_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct vec4f_decl *" lvalue="yes" complexity="1" code="variable" name="vec"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                    </operand_1>
                  </operand_1>
                  <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="mat"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="24"/>
                    </operand_1>
                  </operand_2>
                </operand_2>
              </operand_1>
              <operand_2 type="float" lvalue="no" complexity="4" code="mul">
                <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                  <operand_1 type="struct vec4f_decl *" lvalue="no" complexity="2" code="add">
                    <operand_1 type="struct vec4f_decl *" lvalue="yes" complexity="1" code="variable" name="vec"/>
                    <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="8"/>
                  </operand_1>
                </operand_1>
                <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                  <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                    <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="mat"/>
                    <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="40"/>
                  </operand_1>
                </operand_2>
              </operand_2>
            </operand_1>
            <operand_2 type="float" lvalue="no" complexity="4" code="mul">
              <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                <operand_1 type="struct vec4f_decl *" lvalue="no" complexity="2" code="add">
                  <operand_1 type="struct vec4f_decl *" lvalue="yes" complexity="1" code="variable" name="vec"/>
                  <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="12"/>
                </operand_1>
              </operand_1>
              <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                  <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="mat"/>
                  <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="56"/>
                </operand_1>
              </operand_2>
            </operand_2>
          </operand_2>
        </expression>
        <expression type="float" lvalue="no" complexity="8" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct vec4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct vec4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="12"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="no" complexity="7" code="add">
            <operand_1 type="float" lvalue="no" complexity="6" code="add">
              <operand_1 type="float" lvalue="no" complexity="5" code="add">
                <operand_1 type="float" lvalue="no" complexity="4" code="mul">
                  <operand_1 type="float" lvalue="yes" complexity="2" code="dereference">
                    <operand_1 type="struct vec4f_decl *" lvalue="yes" complexity="1" code="variable" name="vec"/>
                  </operand_1>
                  <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="mat"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="12"/>
                    </operand_1>
                  </operand_2>
                </operand_1>
                <operand_2 type="float" lvalue="no" complexity="4" code="mul">
                  <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct vec4f_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct vec4f_decl *" lvalue="yes" complexity="1" code="variable" name="vec"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                    </operand_1>
                  </operand_1>
                  <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="mat"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="28"/>
                    </operand_1>
                  </operand_2>
                </operand_2>
              </operand_1>
              <operand_2 type="float" lvalue="no" complexity="4" code="mul">
                <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                  <operand_1 type="struct vec4f_decl *" lvalue="no" complexity="2" code="add">
                    <operand_1 type="struct vec4f_decl *" lvalue="yes" complexity="1" code="variable" name="vec"/>
                    <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="8"/>
                  </operand_1>
                </operand_1>
                <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                  <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                    <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="mat"/>
                    <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="44"/>
                  </operand_1>
                </operand_2>
              </operand_2>
            </operand_1>
            <operand_2 type="float" lvalue="no" complexity="4" code="mul">
              <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                <operand_1 type="struct vec4f_decl *" lvalue="no" complexity="2" code="add">
                  <operand_1 type="struct vec4f_decl *" lvalue="yes" complexity="1" code="variable" name="vec"/>
                  <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="12"/>
                </operand_1>
              </operand_1>
              <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
                <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
                  <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="mat"/>
                  <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="60"/>
                </operand_1>
              </operand_2>
            </operand_2>
          </operand_2>
        </expression>
        <expression type="null" lvalue="no" complexity="0" code="return" retvalue="void"/>
      </body>
    </function>
    <function>
      <name>matrix4f_transpose</name>
      <parameters>
        <parameter name="mat" type="struct matrix4f_decl *"/>
      </parameters>
      <body>
        <expression type="float" lvalue="no" complexity="4" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="mat"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="mat"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="16"/>
            </operand_1>
          </operand_2>
        </expression>
        <expression type="float" lvalue="no" complexity="4" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="mat"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="8"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="mat"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="32"/>
            </operand_1>
          </operand_2>
        </expression>
        <expression type="float" lvalue="no" complexity="4" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="mat"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="12"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="mat"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="48"/>
            </operand_1>
          </operand_2>
        </expression>
        <expression type="float" lvalue="no" complexity="4" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="mat"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="24"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="mat"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="36"/>
            </operand_1>
          </operand_2>
        </expression>
        <expression type="float" lvalue="no" complexity="4" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="mat"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="28"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="mat"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="52"/>
            </operand_1>
          </operand_2>
        </expression>
        <expression type="float" lvalue="no" complexity="4" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="mat"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="44"/>
            </operand_1>
          </operand_1>
          <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="mat"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="56"/>
            </operand_1>
          </operand_2>
        </expression>
        <expression type="null" lvalue="no" complexity="0" code="return" retvalue="void"/>
      </body>
    </function>
    <function>
      <name>rasterizer_init</name>
      <parameters>
        <parameter name="__dbgprintf" type="void (char *, ...) *"/>
        <parameter name="width" type="int"/>
        <parameter name="height" type="int"/>
        <parameter name="pitch" type="int"/>
        <parameter name="znear" type="float"/>
        <parameter name="zfar" type="float"/>
        <parameter name="tan_fovy2" type="float"/>
      </parameters>
      <local_variables>
        <variable name="__tmp0" type="float"/>
        <variable name="__tmp1" type="float"/>
      </local_variables>
      <body>
        <expression type="void (char *, ...) *" lvalue="no" complexity="2" code="assign">
          <operand_1 type="void (char *, ...) *" lvalue="yes" complexity="1" code="variable" name="_dbgprintf"/>
          <operand_2 type="void (char *, ...) *" lvalue="yes" complexity="1" code="variable" name="__dbgprintf"/>
        </expression>
        <expression type="int" lvalue="no" complexity="2" code="assign">
          <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="_width"/>
          <operand_2 type="int" lvalue="yes" complexity="1" code="variable" name="width"/>
        </expression>
        <expression type="int" lvalue="no" complexity="2" code="assign">
          <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="_height"/>
          <operand_2 type="int" lvalue="yes" complexity="1" code="variable" name="height"/>
        </expression>
        <expression type="int" lvalue="no" complexity="2" code="assign">
          <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="_pitch"/>
          <operand_2 type="int" lvalue="yes" complexity="1" code="variable" name="pitch"/>
        </expression>
        <expression type="void" lvalue="no" complexity="23" code="function call">
          <func_address type="void (struct matrix4f_decl *, float, float, float, float)" lvalue="yes" complexity="1" code="variable" name="matrix4f_make_perspective"/>
          <func_argument_0 type="struct matrix4f_decl *" lvalue="no" complexity="1" code="get_address">
            <operand_1 type="struct matrix4f_decl" lvalue="yes" complexity="1" code="variable" name="_mvproj_matrix"/>
          </func_argument_0>
          <func_argument_1 type="float" lvalue="yes" complexity="1" code="variable" name="znear"/>
          <func_argument_2 type="float" lvalue="yes" complexity="1" code="variable" name="zfar"/>
          <func_argument_3 type="float" lvalue="yes" complexity="1" code="variable" name="tan_fovy2"/>
          <func_argument_4 type="float" lvalue="no" complexity="3" code="div">
            <operand_1 type="float" lvalue="no" complexity="2" code="convert_int2float">
              <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="width"/>
            </operand_1>
            <operand_2 type="float" lvalue="no" complexity="2" code="convert_int2float">
              <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="height"/>
            </operand_2>
          </func_argument_4>
        </expression>
        <expression type="void" lvalue="no" complexity="23" code="function call">
          <func_address type="void (struct matrix4f_decl *, float, float, float, float)" lvalue="yes" complexity="1" code="variable" name="matrix4f_make_viewport"/>
          <func_argument_0 type="struct matrix4f_decl *" lvalue="no" complexity="1" code="get_address">
            <operand_1 type="struct matrix4f_decl" lvalue="yes" complexity="1" code="variable" name="_viewport_matrix"/>
          </func_argument_0>
          <func_argument_1 type="float" lvalue="no" complexity="2" code="convert_int2float">
            <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="width"/>
          </func_argument_1>
          <func_argument_2 type="float" lvalue="no" complexity="2" code="convert_int2float">
            <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="height"/>
          </func_argument_2>
          <func_argument_3 type="float" lvalue="yes" complexity="1" code="variable" name="znear"/>
          <func_argument_4 type="float" lvalue="yes" complexity="1" code="variable" name="zfar"/>
        </expression>
        <expression type="void" lvalue="no" complexity="21" code="function call">
          <func_address type="void (struct vec4f_decl *, float, float, float, float)" lvalue="yes" complexity="1" code="variable" name="vec4f_assign"/>
          <func_argument_0 type="struct vec4f_decl *" lvalue="no" complexity="1" code="get_address">
            <operand_1 type="struct vec4f_decl" lvalue="yes" complexity="1" code="variable" name="_clip_z_near_base"/>
          </func_argument_0>
          <func_argument_1 type="float" lvalue="no" complexity="1" code="float literal" value="0.000000"/>
          <func_argument_2 type="float" lvalue="no" complexity="1" code="float literal" value="0.000000"/>
          <func_argument_3 type="float" lvalue="yes" complexity="1" code="variable" name="znear"/>
          <func_argument_4 type="float" lvalue="no" complexity="1" code="float literal" value="1.000000"/>
        </expression>
        <expression type="null" lvalue="no" complexity="0" code="conditional jump" target="label0000" invert_condition="yes">
          <condition type="int" lvalue="no" complexity="2" code="greater_then">
            <operand_1 type="float" lvalue="yes" complexity="1" code="variable" name="zfar"/>
            <operand_2 type="float" lvalue="yes" complexity="1" code="variable" name="znear"/>
          </condition>
        </expression>
        <expression type="float" lvalue="no" complexity="2" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="1" code="variable" name="__tmp0"/>
          <operand_2 type="float" lvalue="no" complexity="1" code="float literal" value="1.000000"/>
        </expression>
        <expression type="null" lvalue="no" complexity="0" code="jump to label" target="label0001"/>
        <expression type="null" lvalue="no" complexity="0" code="label" name="label0000"/>
        <expression type="float" lvalue="no" complexity="2" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="1" code="variable" name="__tmp0"/>
          <operand_2 type="float" lvalue="no" complexity="1" code="float literal" value="-1.000000"/>
        </expression>
        <expression type="null" lvalue="no" complexity="0" code="label" name="label0001"/>
        <expression type="void" lvalue="no" complexity="21" code="function call">
          <func_address type="void (struct vec4f_decl *, float, float, float, float)" lvalue="yes" complexity="1" code="variable" name="vec4f_assign"/>
          <func_argument_0 type="struct vec4f_decl *" lvalue="no" complexity="1" code="get_address">
            <operand_1 type="struct vec4f_decl" lvalue="yes" complexity="1" code="variable" name="_clip_z_near_norm"/>
          </func_argument_0>
          <func_argument_1 type="float" lvalue="no" complexity="1" code="float literal" value="0.000000"/>
          <func_argument_2 type="float" lvalue="no" complexity="1" code="float literal" value="0.000000"/>
          <func_argument_3 type="float" lvalue="yes" complexity="1" code="variable" name="__tmp0"/>
          <func_argument_4 type="float" lvalue="no" complexity="1" code="float literal" value="1.000000"/>
        </expression>
        <expression type="void" lvalue="no" complexity="21" code="function call">
          <func_address type="void (struct vec4f_decl *, float, float, float, float)" lvalue="yes" complexity="1" code="variable" name="vec4f_assign"/>
          <func_argument_0 type="struct vec4f_decl *" lvalue="no" complexity="1" code="get_address">
            <operand_1 type="struct vec4f_decl" lvalue="yes" complexity="1" code="variable" name="_clip_z_far_base"/>
          </func_argument_0>
          <func_argument_1 type="float" lvalue="no" complexity="1" code="float literal" value="0.000000"/>
          <func_argument_2 type="float" lvalue="no" complexity="1" code="float literal" value="0.000000"/>
          <func_argument_3 type="float" lvalue="yes" complexity="1" code="variable" name="zfar"/>
          <func_argument_4 type="float" lvalue="no" complexity="1" code="float literal" value="1.000000"/>
        </expression>
        <expression type="null" lvalue="no" complexity="0" code="conditional jump" target="label0002" invert_condition="yes">
          <condition type="int" lvalue="no" complexity="2" code="greater_then">
            <operand_1 type="float" lvalue="yes" complexity="1" code="variable" name="zfar"/>
            <operand_2 type="float" lvalue="yes" complexity="1" code="variable" name="znear"/>
          </condition>
        </expression>
        <expression type="float" lvalue="no" complexity="2" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="1" code="variable" name="__tmp1"/>
          <operand_2 type="float" lvalue="no" complexity="1" code="float literal" value="-1.000000"/>
        </expression>
        <expression type="null" lvalue="no" complexity="0" code="jump to label" target="label0003"/>
        <expression type="null" lvalue="no" complexity="0" code="label" name="label0002"/>
        <expression type="float" lvalue="no" complexity="2" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="1" code="variable" name="__tmp1"/>
          <operand_2 type="float" lvalue="no" complexity="1" code="float literal" value="1.000000"/>
        </expression>
        <expression type="null" lvalue="no" complexity="0" code="label" name="label0003"/>
        <expression type="void" lvalue="no" complexity="21" code="function call">
          <func_address type="void (struct vec4f_decl *, float, float, float, float)" lvalue="yes" complexity="1" code="variable" name="vec4f_assign"/>
          <func_argument_0 type="struct vec4f_decl *" lvalue="no" complexity="1" code="get_address">
            <operand_1 type="struct vec4f_decl" lvalue="yes" complexity="1" code="variable" name="_clip_z_far_norm"/>
          </func_argument_0>
          <func_argument_1 type="float" lvalue="no" complexity="1" code="float literal" value="0.000000"/>
          <func_argument_2 type="float" lvalue="no" complexity="1" code="float literal" value="0.000000"/>
          <func_argument_3 type="float" lvalue="yes" complexity="1" code="variable" name="__tmp1"/>
          <func_argument_4 type="float" lvalue="no" complexity="1" code="float literal" value="1.000000"/>
        </expression>
        <expression type="void" lvalue="no" complexity="24" code="function call">
          <func_address type="void (struct vec4f_decl *, float, float, float, float)" lvalue="yes" complexity="1" code="variable" name="vec4f_assign"/>
          <func_argument_0 type="struct vec4f_decl *" lvalue="no" complexity="1" code="get_address">
            <operand_1 type="struct vec4f_decl" lvalue="yes" complexity="1" code="variable" name="_clip_plane_left_base"/>
          </func_argument_0>
          <func_argument_1 type="float" lvalue="no" complexity="4" code="add">
            <operand_1 type="float" lvalue="no" complexity="1" code="float literal" value="-1.000000"/>
            <operand_2 type="float" lvalue="no" complexity="3" code="div">
              <operand_1 type="float" lvalue="no" complexity="1" code="float literal" value="1.000000"/>
              <operand_2 type="float" lvalue="no" complexity="2" code="convert_int2float">
                <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="width"/>
              </operand_2>
            </operand_2>
          </func_argument_1>
          <func_argument_2 type="float" lvalue="no" complexity="1" code="float literal" value="0.000000"/>
          <func_argument_3 type="float" lvalue="no" complexity="1" code="float literal" value="0.000000"/>
          <func_argument_4 type="float" lvalue="no" complexity="1" code="float literal" value="1.000000"/>
        </expression>
        <expression type="void" lvalue="no" complexity="21" code="function call">
          <func_address type="void (struct vec4f_decl *, float, float, float, float)" lvalue="yes" complexity="1" code="variable" name="vec4f_assign"/>
          <func_argument_0 type="struct vec4f_decl *" lvalue="no" complexity="1" code="get_address">
            <operand_1 type="struct vec4f_decl" lvalue="yes" complexity="1" code="variable" name="_clip_plane_left_norm"/>
          </func_argument_0>
          <func_argument_1 type="float" lvalue="no" complexity="1" code="float literal" value="1.000000"/>
          <func_argument_2 type="float" lvalue="no" complexity="1" code="float literal" value="0.000000"/>
          <func_argument_3 type="float" lvalue="no" complexity="1" code="float literal" value="0.000000"/>
          <func_argument_4 type="float" lvalue="no" complexity="1" code="float literal" value="1.000000"/>
        </expression>
        <expression type="void" lvalue="no" complexity="24" code="function call">
          <func_address type="void (struct vec4f_decl *, float, float, float, float)" lvalue="yes" complexity="1" code="variable" name="vec4f_assign"/>
          <func_argument_0 type="struct vec4f_decl *" lvalue="no" complexity="1" code="get_address">
            <operand_1 type="struct vec4f_decl" lvalue="yes" complexity="1" code="variable" name="_clip_plane_right_base"/>
          </func_argument_0>
          <func_argument_1 type="float" lvalue="no" complexity="4" code="sub">
            <operand_1 type="float" lvalue="no" complexity="1" code="float literal" value="1.000000"/>
            <operand_2 type="float" lvalue="no" complexity="3" code="div">
              <operand_1 type="float" lvalue="no" complexity="1" code="float literal" value="1.000000"/>
              <operand_2 type="float" lvalue="no" complexity="2" code="convert_int2float">
                <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="width"/>
              </operand_2>
            </operand_2>
          </func_argument_1>
          <func_argument_2 type="float" lvalue="no" complexity="1" code="float literal" value="0.000000"/>
          <func_argument_3 type="float" lvalue="no" complexity="1" code="float literal" value="0.000000"/>
          <func_argument_4 type="float" lvalue="no" complexity="1" code="float literal" value="1.000000"/>
        </expression>
        <expression type="void" lvalue="no" complexity="21" code="function call">
          <func_address type="void (struct vec4f_decl *, float, float, float, float)" lvalue="yes" complexity="1" code="variable" name="vec4f_assign"/>
          <func_argument_0 type="struct vec4f_decl *" lvalue="no" complexity="1" code="get_address">
            <operand_1 type="struct vec4f_decl" lvalue="yes" complexity="1" code="variable" name="_clip_plane_right_norm"/>
          </func_argument_0>
          <func_argument_1 type="float" lvalue="no" complexity="1" code="float literal" value="-1.000000"/>
          <func_argument_2 type="float" lvalue="no" complexity="1" code="float literal" value="0.000000"/>
          <func_argument_3 type="float" lvalue="no" complexity="1" code="float literal" value="0.000000"/>
          <func_argument_4 type="float" lvalue="no" complexity="1" code="float literal" value="1.000000"/>
        </expression>
        <expression type="void" lvalue="no" complexity="24" code="function call">
          <func_address type="void (struct vec4f_decl *, float, float, float, float)" lvalue="yes" complexity="1" code="variable" name="vec4f_assign"/>
          <func_argument_0 type="struct vec4f_decl *" lvalue="no" complexity="1" code="get_address">
            <operand_1 type="struct vec4f_decl" lvalue="yes" complexity="1" code="variable" name="_clip_plane_top_base"/>
          </func_argument_0>
          <func_argument_1 type="float" lvalue="no" complexity="1" code="float literal" value="0.000000"/>
          <func_argument_2 type="float" lvalue="no" complexity="4" code="add">
            <operand_1 type="float" lvalue="no" complexity="1" code="float literal" value="-1.000000"/>
            <operand_2 type="float" lvalue="no" complexity="3" code="div">
              <operand_1 type="float" lvalue="no" complexity="1" code="float literal" value="1.000000"/>
              <operand_2 type="float" lvalue="no" complexity="2" code="convert_int2float">
                <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="height"/>
              </operand_2>
            </operand_2>
          </func_argument_2>
          <func_argument_3 type="float" lvalue="no" complexity="1" code="float literal" value="0.000000"/>
          <func_argument_4 type="float" lvalue="no" complexity="1" code="float literal" value="1.000000"/>
        </expression>
        <expression type="void" lvalue="no" complexity="21" code="function call">
          <func_address type="void (struct vec4f_decl *, float, float, float, float)" lvalue="yes" complexity="1" code="variable" name="vec4f_assign"/>
          <func_argument_0 type="struct vec4f_decl *" lvalue="no" complexity="1" code="get_address">
            <operand_1 type="struct vec4f_decl" lvalue="yes" complexity="1" code="variable" name="_clip_plane_top_norm"/>
          </func_argument_0>
          <func_argument_1 type="float" lvalue="no" complexity="1" code="float literal" value="0.000000"/>
          <func_argument_2 type="float" lvalue="no" complexity="1" code="float literal" value="1.000000"/>
          <func_argument_3 type="float" lvalue="no" complexity="1" code="float literal" value="0.000000"/>
          <func_argument_4 type="float" lvalue="no" complexity="1" code="float literal" value="1.000000"/>
        </expression>
        <expression type="void" lvalue="no" complexity="21" code="function call">
          <func_address type="void (struct vec4f_decl *, float, float, float, float)" lvalue="yes" complexity="1" code="variable" name="vec4f_assign"/>
          <func_argument_0 type="struct vec4f_decl *" lvalue="no" complexity="1" code="get_address">
            <operand_1 type="struct vec4f_decl" lvalue="yes" complexity="1" code="variable" name="_clip_plane_bottom_base"/>
          </func_argument_0>
          <func_argument_1 type="float" lvalue="no" complexity="1" code="float literal" value="0.000000"/>
          <func_argument_2 type="float" lvalue="no" complexity="1" code="float literal" value="1.000000"/>
          <func_argument_3 type="float" lvalue="no" complexity="1" code="float literal" value="0.000000"/>
          <func_argument_4 type="float" lvalue="no" complexity="1" code="float literal" value="1.000000"/>
        </expression>
        <expression type="void" lvalue="no" complexity="21" code="function call">
          <func_address type="void (struct vec4f_decl *, float, float, float, float)" lvalue="yes" complexity="1" code="variable" name="vec4f_assign"/>
          <func_argument_0 type="struct vec4f_decl *" lvalue="no" complexity="1" code="get_address">
            <operand_1 type="struct vec4f_decl" lvalue="yes" complexity="1" code="variable" name="_clip_plane_bottom_norm"/>
          </func_argument_0>
          <func_argument_1 type="float" lvalue="no" complexity="1" code="float literal" value="0.000000"/>
          <func_argument_2 type="float" lvalue="no" complexity="1" code="float literal" value="-1.000000"/>
          <func_argument_3 type="float" lvalue="no" complexity="1" code="float literal" value="0.000000"/>
          <func_argument_4 type="float" lvalue="no" complexity="1" code="float literal" value="1.000000"/>
        </expression>
        <expression type="null" lvalue="no" complexity="0" code="return" retvalue="void"/>
      </body>
    </function>
    <function>
      <name>rasterizer_begin_frame</name>
      <parameters>
        <parameter name="videomem" type="void *"/>
      </parameters>
      <body>
        <expression type="char *" lvalue="no" complexity="2" code="assign">
          <operand_1 type="char *" lvalue="yes" complexity="1" code="variable" name="_videomem"/>
          <operand_2 type="char *" lvalue="yes" complexity="1" code="variable" name="videomem"/>
        </expression>
        <expression type="null" lvalue="no" complexity="0" code="return" retvalue="void"/>
      </body>
    </function>
    <function>
      <name>rasterizer_set_mvproj</name>
      <parameters>
        <parameter name="matrix" type="float[16]"/>
      </parameters>
      <body>
        <expression type="struct matrix4f_decl" lvalue="no" complexity="3" code="assign">
          <operand_1 type="struct matrix4f_decl" lvalue="yes" complexity="1" code="variable" name="_mvproj_matrix"/>
          <operand_2 type="struct matrix4f_decl" lvalue="yes" complexity="2" code="dereference">
            <operand_1 type="struct matrix4f_decl *" lvalue="yes" complexity="1" code="variable" name="matrix"/>
          </operand_2>
        </expression>
        <expression type="null" lvalue="no" complexity="0" code="return" retvalue="void"/>
      </body>
    </function>
    <function>
      <name>rasterizer_set_color</name>
      <parameters>
        <parameter name="color" type="int"/>
      </parameters>
      <body>
        <expression type="int" lvalue="no" complexity="2" code="assign">
          <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="_color"/>
          <operand_2 type="int" lvalue="yes" complexity="1" code="variable" name="color"/>
        </expression>
        <expression type="null" lvalue="no" complexity="0" code="return" retvalue="void"/>
      </body>
    </function>
    <function>
      <name>rasterizer_set_texture</name>
      <parameters>
        <parameter name="texture_data" type="void *"/>
        <parameter name="texture_width" type="int"/>
        <parameter name="texture_height" type="int"/>
      </parameters>
      <body>
        <expression type="int *" lvalue="no" complexity="2" code="assign">
          <operand_1 type="int *" lvalue="yes" complexity="1" code="variable" name="_texture_data"/>
          <operand_2 type="int *" lvalue="yes" complexity="1" code="variable" name="texture_data"/>
        </expression>
        <expression type="int" lvalue="no" complexity="2" code="assign">
          <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="_texture_width"/>
          <operand_2 type="int" lvalue="yes" complexity="1" code="variable" name="texture_width"/>
        </expression>
        <expression type="int" lvalue="no" complexity="2" code="assign">
          <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="_texture_height"/>
          <operand_2 type="int" lvalue="yes" complexity="1" code="variable" name="texture_height"/>
        </expression>
        <expression type="null" lvalue="no" complexity="0" code="return" retvalue="void"/>
      </body>
    </function>
    <function>
      <name>_tex2d</name>
      <parameters>
        <parameter name="u" type="float"/>
        <parameter name="v" type="float"/>
      </parameters>
      <local_variables>
        <variable name="x" type="int"/>
        <variable name="y" type="int"/>
      </local_variables>
      <body>
        <expression type="int" lvalue="no" complexity="6" code="assign">
          <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="x"/>
          <operand_2 type="int" lvalue="no" complexity="5" code="convert_float2int">
            <operand_1 type="float" lvalue="no" complexity="4" code="mul">
              <operand_1 type="float" lvalue="no" complexity="3" code="convert_int2float">
                <operand_1 type="int" lvalue="no" complexity="2" code="sub">
                  <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="_texture_width"/>
                  <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="1"/>
                </operand_1>
              </operand_1>
              <operand_2 type="float" lvalue="yes" complexity="1" code="variable" name="u"/>
            </operand_1>
          </operand_2>
        </expression>
        <expression type="int" lvalue="no" complexity="6" code="assign">
          <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="y"/>
          <operand_2 type="int" lvalue="no" complexity="5" code="convert_float2int">
            <operand_1 type="float" lvalue="no" complexity="4" code="mul">
              <operand_1 type="float" lvalue="no" complexity="3" code="convert_int2float">
                <operand_1 type="int" lvalue="no" complexity="2" code="sub">
                  <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="_texture_height"/>
                  <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="1"/>
                </operand_1>
              </operand_1>
              <operand_2 type="float" lvalue="yes" complexity="1" code="variable" name="v"/>
            </operand_1>
          </operand_2>
        </expression>
        <expression type="null" lvalue="no" complexity="0" code="return">
          <retvalue type="int" lvalue="yes" complexity="6" code="dereference">
            <operand_1 type="int *" lvalue="no" complexity="5" code="add">
              <operand_1 type="int *" lvalue="yes" complexity="1" code="variable" name="_texture_data"/>
              <operand_2 type="int" lvalue="no" complexity="4" code="shl">
                <operand_1 type="int" lvalue="no" complexity="3" code="add">
                  <operand_1 type="int" lvalue="no" complexity="2" code="mul">
                    <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="y"/>
                    <operand_2 type="int" lvalue="yes" complexity="1" code="variable" name="_texture_width"/>
                  </operand_1>
                  <operand_2 type="int" lvalue="yes" complexity="1" code="variable" name="x"/>
                </operand_1>
                <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="2"/>
              </operand_2>
            </operand_1>
          </retvalue>
        </expression>
      </body>
    </function>
    <function>
      <name>_rasterize_horiz_line</name>
      <parameters>
        <parameter name="x1" type="int"/>
        <parameter name="x2" type="int"/>
        <parameter name="y" type="int"/>
        <parameter name="u" type="float"/>
        <parameter name="v" type="float"/>
        <parameter name="dudx" type="float"/>
        <parameter name="dvdx" type="float"/>
      </parameters>
      <local_variables>
        <variable name="pixel" type="int *"/>
        <variable name="line_end" type="int *"/>
        <variable name="src_color" type="int"/>
        <variable name="res_color" type="int"/>
        <variable name="green" type="int"/>
        <variable name="blue" type="int"/>
        <variable name="dst_color" type="int"/>
        <variable name="dst_green" type="int"/>
        <variable name="dst_blue" type="int"/>
        <variable name="int_alpha" type="int"/>
        <variable name="float_alpha" type="float"/>
      </local_variables>
      <body>
        <expression type="int *" lvalue="no" complexity="5" code="assign">
          <operand_1 type="int *" lvalue="yes" complexity="1" code="variable" name="pixel"/>
          <operand_2 type="int *" lvalue="no" complexity="4" code="add">
            <operand_1 type="int *" lvalue="no" complexity="3" code="add">
              <operand_1 type="char *" lvalue="yes" complexity="1" code="variable" name="_videomem"/>
              <operand_2 type="int" lvalue="no" complexity="2" code="mul">
                <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="_pitch"/>
                <operand_2 type="int" lvalue="yes" complexity="1" code="variable" name="y"/>
              </operand_2>
            </operand_1>
            <operand_2 type="int" lvalue="no" complexity="2" code="shl">
              <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="x1"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="2"/>
            </operand_2>
          </operand_2>
        </expression>
        <expression type="int *" lvalue="no" complexity="5" code="assign">
          <operand_1 type="int *" lvalue="yes" complexity="1" code="variable" name="line_end"/>
          <operand_2 type="int *" lvalue="no" complexity="4" code="sub">
            <operand_1 type="int *" lvalue="no" complexity="3" code="add">
              <operand_1 type="int *" lvalue="yes" complexity="1" code="variable" name="pixel"/>
              <operand_2 type="int" lvalue="no" complexity="2" code="shl">
                <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="x2"/>
                <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="2"/>
              </operand_2>
            </operand_1>
            <operand_2 type="int" lvalue="no" complexity="2" code="shl">
              <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="x1"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="2"/>
            </operand_2>
          </operand_2>
        </expression>
        <expression type="null" lvalue="no" complexity="0" code="label" name="label0000"/>
        <expression type="int" lvalue="no" complexity="19" code="assign">
          <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="src_color"/>
          <operand_2 type="int" lvalue="no" complexity="18" code="function call">
            <func_address type="int (float, float)" lvalue="yes" complexity="1" code="variable" name="_tex2d"/>
            <func_argument_0 type="float" lvalue="yes" complexity="1" code="variable" name="u"/>
            <func_argument_1 type="float" lvalue="yes" complexity="1" code="variable" name="v"/>
          </operand_2>
        </expression>
        <expression type="int" lvalue="no" complexity="4" code="assign">
          <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="int_alpha"/>
          <operand_2 type="int" lvalue="no" complexity="3" code="and">
            <operand_1 type="int" lvalue="no" complexity="2" code="shr">
              <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="src_color"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="24"/>
            </operand_1>
            <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="255"/>
          </operand_2>
        </expression>
        <expression type="null" lvalue="no" complexity="0" code="conditional jump" target="label0003" invert_condition="yes">
          <condition type="int" lvalue="yes" complexity="1" code="variable" name="int_alpha"/>
        </expression>
        <expression type="float" lvalue="no" complexity="4" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="1" code="variable" name="float_alpha"/>
          <operand_2 type="float" lvalue="no" complexity="3" code="div">
            <operand_1 type="float" lvalue="no" complexity="2" code="convert_int2float">
              <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="int_alpha"/>
            </operand_1>
            <operand_2 type="float" lvalue="no" complexity="1" code="float literal" value="255.000000"/>
          </operand_2>
        </expression>
        <expression type="int" lvalue="no" complexity="3" code="assign">
          <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="dst_color"/>
          <operand_2 type="int" lvalue="yes" complexity="2" code="dereference">
            <operand_1 type="int *" lvalue="yes" complexity="1" code="variable" name="pixel"/>
          </operand_2>
        </expression>
        <expression type="int" lvalue="no" complexity="4" code="assign">
          <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="dst_green"/>
          <operand_2 type="int" lvalue="no" complexity="3" code="shr">
            <operand_1 type="int" lvalue="no" complexity="2" code="and">
              <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="dst_color"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="65280"/>
            </operand_1>
            <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="8"/>
          </operand_2>
        </expression>
        <expression type="int" lvalue="no" complexity="3" code="assign">
          <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="dst_blue"/>
          <operand_2 type="int" lvalue="no" complexity="2" code="and">
            <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="dst_color"/>
            <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="255"/>
          </operand_2>
        </expression>
        <expression type="int" lvalue="no" complexity="4" code="assign">
          <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="green"/>
          <operand_2 type="int" lvalue="no" complexity="3" code="shr">
            <operand_1 type="int" lvalue="no" complexity="2" code="and">
              <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="src_color"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="65280"/>
            </operand_1>
            <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="8"/>
          </operand_2>
        </expression>
        <expression type="int" lvalue="no" complexity="3" code="assign">
          <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="blue"/>
          <operand_2 type="int" lvalue="no" complexity="2" code="and">
            <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="src_color"/>
            <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="255"/>
          </operand_2>
        </expression>
        <expression type="int" lvalue="no" complexity="6" code="assign">
          <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="green"/>
          <operand_2 type="int" lvalue="no" complexity="5" code="convert_float2int">
            <operand_1 type="float" lvalue="no" complexity="4" code="add">
              <operand_1 type="float" lvalue="no" complexity="3" code="mul">
                <operand_1 type="float" lvalue="no" complexity="2" code="convert_int2float">
                  <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="green"/>
                </operand_1>
                <operand_2 type="float" lvalue="yes" complexity="1" code="variable" name="float_alpha"/>
              </operand_1>
              <operand_2 type="float" lvalue="no" complexity="3" code="mul">
                <operand_1 type="float" lvalue="no" complexity="2" code="convert_int2float">
                  <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="dst_green"/>
                </operand_1>
                <operand_2 type="float" lvalue="no" complexity="2" code="sub">
                  <operand_1 type="float" lvalue="no" complexity="1" code="float literal" value="1.000000"/>
                  <operand_2 type="float" lvalue="yes" complexity="1" code="variable" name="float_alpha"/>
                </operand_2>
              </operand_2>
            </operand_1>
          </operand_2>
        </expression>
        <expression type="int" lvalue="no" complexity="6" code="assign">
          <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="blue"/>
          <operand_2 type="int" lvalue="no" complexity="5" code="convert_float2int">
            <operand_1 type="float" lvalue="no" complexity="4" code="add">
              <operand_1 type="float" lvalue="no" complexity="3" code="mul">
                <operand_1 type="float" lvalue="no" complexity="2" code="convert_int2float">
                  <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="blue"/>
                </operand_1>
                <operand_2 type="float" lvalue="yes" complexity="1" code="variable" name="float_alpha"/>
              </operand_1>
              <operand_2 type="float" lvalue="no" complexity="3" code="mul">
                <operand_1 type="float" lvalue="no" complexity="2" code="convert_int2float">
                  <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="dst_blue"/>
                </operand_1>
                <operand_2 type="float" lvalue="no" complexity="2" code="sub">
                  <operand_1 type="float" lvalue="no" complexity="1" code="float literal" value="1.000000"/>
                  <operand_2 type="float" lvalue="yes" complexity="1" code="variable" name="float_alpha"/>
                </operand_2>
              </operand_2>
            </operand_1>
          </operand_2>
        </expression>
        <expression type="int" lvalue="no" complexity="4" code="assign">
          <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="res_color"/>
          <operand_2 type="int" lvalue="no" complexity="3" code="add">
            <operand_1 type="int" lvalue="no" complexity="2" code="shl">
              <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="green"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="8"/>
            </operand_1>
            <operand_2 type="int" lvalue="yes" complexity="1" code="variable" name="blue"/>
          </operand_2>
        </expression>
        <expression type="int" lvalue="no" complexity="3" code="assign">
          <operand_1 type="int" lvalue="yes" complexity="2" code="dereference">
            <operand_1 type="int *" lvalue="yes" complexity="1" code="variable" name="pixel"/>
          </operand_1>
          <operand_2 type="int" lvalue="yes" complexity="1" code="variable" name="res_color"/>
        </expression>
        <expression type="null" lvalue="no" complexity="0" code="label" name="label0003"/>
        <expression type="float" lvalue="no" complexity="2" code="add_assign">
          <operand_1 type="float" lvalue="yes" complexity="1" code="variable" name="u"/>
          <operand_2 type="float" lvalue="yes" complexity="1" code="variable" name="dudx"/>
        </expression>
        <expression type="float" lvalue="no" complexity="2" code="add_assign">
          <operand_1 type="float" lvalue="yes" complexity="1" code="variable" name="v"/>
          <operand_2 type="float" lvalue="yes" complexity="1" code="variable" name="dvdx"/>
        </expression>
        <expression type="null" lvalue="no" complexity="0" code="label" name="label0001"/>
        <expression type="null" lvalue="no" complexity="0" code="conditional jump" target="label0000" invert_condition="no">
          <condition type="int" lvalue="no" complexity="3" code="less_then">
            <operand_1 type="int *" lvalue="no" complexity="2" code="increment" step="4">
              <operand_1 type="int *" lvalue="yes" complexity="1" code="variable" name="pixel"/>
            </operand_1>
            <operand_2 type="int *" lvalue="yes" complexity="1" code="variable" name="line_end"/>
          </condition>
        </expression>
        <expression type="null" lvalue="no" complexity="0" code="label" name="label0002"/>
        <expression type="null" lvalue="no" complexity="0" code="return" retvalue="void"/>
      </body>
    </function>
    <function>
      <name>_rasterize_horiz_line__unordered</name>
      <parameters>
        <parameter name="x1" type="int"/>
        <parameter name="x2" type="int"/>
        <parameter name="y" type="int"/>
        <parameter name="u1" type="float"/>
        <parameter name="v1" type="float"/>
        <parameter name="u2" type="float"/>
        <parameter name="v2" type="float"/>
        <parameter name="dudx" type="float"/>
        <parameter name="dvdx" type="float"/>
      </parameters>
      <body>
        <expression type="null" lvalue="no" complexity="0" code="conditional jump" target="label0000" invert_condition="yes">
          <condition type="int" lvalue="no" complexity="2" code="less_equal">
            <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="x1"/>
            <operand_2 type="int" lvalue="yes" complexity="1" code="variable" name="x2"/>
          </condition>
        </expression>
        <expression type="void" lvalue="no" complexity="23" code="function call">
          <func_address type="void (int, int, int, float, float, float, float)" lvalue="yes" complexity="1" code="variable" name="_rasterize_horiz_line"/>
          <func_argument_0 type="int" lvalue="yes" complexity="1" code="variable" name="x1"/>
          <func_argument_1 type="int" lvalue="yes" complexity="1" code="variable" name="x2"/>
          <func_argument_2 type="int" lvalue="yes" complexity="1" code="variable" name="y"/>
          <func_argument_3 type="float" lvalue="yes" complexity="1" code="variable" name="u1"/>
          <func_argument_4 type="float" lvalue="yes" complexity="1" code="variable" name="v1"/>
          <func_argument_5 type="float" lvalue="yes" complexity="1" code="variable" name="dudx"/>
          <func_argument_6 type="float" lvalue="yes" complexity="1" code="variable" name="dvdx"/>
        </expression>
        <expression type="null" lvalue="no" complexity="0" code="jump to label" target="label0001"/>
        <expression type="null" lvalue="no" complexity="0" code="label" name="label0000"/>
        <expression type="void" lvalue="no" complexity="23" code="function call">
          <func_address type="void (int, int, int, float, float, float, float)" lvalue="yes" complexity="1" code="variable" name="_rasterize_horiz_line"/>
          <func_argument_0 type="int" lvalue="yes" complexity="1" code="variable" name="x2"/>
          <func_argument_1 type="int" lvalue="yes" complexity="1" code="variable" name="x1"/>
          <func_argument_2 type="int" lvalue="yes" complexity="1" code="variable" name="y"/>
          <func_argument_3 type="float" lvalue="yes" complexity="1" code="variable" name="u2"/>
          <func_argument_4 type="float" lvalue="yes" complexity="1" code="variable" name="v2"/>
          <func_argument_5 type="float" lvalue="yes" complexity="1" code="variable" name="dudx"/>
          <func_argument_6 type="float" lvalue="yes" complexity="1" code="variable" name="dvdx"/>
        </expression>
        <expression type="null" lvalue="no" complexity="0" code="label" name="label0001"/>
        <expression type="null" lvalue="no" complexity="0" code="return" retvalue="void"/>
      </body>
    </function>
    <function>
      <name>_rasterize_triangle_1i</name>
      <parameters>
        <parameter name="x1" type="int"/>
        <parameter name="x2" type="int"/>
        <parameter name="x3" type="int"/>
        <parameter name="y" type="int"/>
        <parameter name="uv1" type="struct vec2f_decl *"/>
        <parameter name="uv2" type="struct vec2f_decl *"/>
        <parameter name="uv3" type="struct vec2f_decl *"/>
        <parameter name="dudx" type="float"/>
        <parameter name="dvdx" type="float"/>
      </parameters>
      <body>
        <expression type="null" lvalue="no" complexity="0" code="conditional jump" target="label0000" invert_condition="yes">
          <condition type="int" lvalue="no" complexity="2" code="less_then">
            <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="x1"/>
            <operand_2 type="int" lvalue="yes" complexity="1" code="variable" name="x2"/>
          </condition>
        </expression>
        <expression type="null" lvalue="no" complexity="0" code="conditional jump" target="label0001" invert_condition="yes">
          <condition type="int" lvalue="no" complexity="2" code="greater_then">
            <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="x3"/>
            <operand_2 type="int" lvalue="yes" complexity="1" code="variable" name="x2"/>
          </condition>
        </expression>
        <expression type="void" lvalue="no" complexity="26" code="function call">
          <func_address type="void (int, int, int, float, float, float, float)" lvalue="yes" complexity="1" code="variable" name="_rasterize_horiz_line"/>
          <func_argument_0 type="int" lvalue="yes" complexity="1" code="variable" name="x1"/>
          <func_argument_1 type="int" lvalue="yes" complexity="1" code="variable" name="x3"/>
          <func_argument_2 type="int" lvalue="yes" complexity="1" code="variable" name="y"/>
          <func_argument_3 type="float" lvalue="yes" complexity="2" code="dereference">
            <operand_1 type="struct vec2f_decl *" lvalue="yes" complexity="1" code="variable" name="uv1"/>
          </func_argument_3>
          <func_argument_4 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct vec2f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct vec2f_decl *" lvalue="yes" complexity="1" code="variable" name="uv1"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
            </operand_1>
          </func_argument_4>
          <func_argument_5 type="float" lvalue="yes" complexity="1" code="variable" name="dudx"/>
          <func_argument_6 type="float" lvalue="yes" complexity="1" code="variable" name="dvdx"/>
        </expression>
        <expression type="null" lvalue="no" complexity="0" code="jump to label" target="label0002"/>
        <expression type="null" lvalue="no" complexity="0" code="label" name="label0001"/>
        <expression type="null" lvalue="no" complexity="0" code="conditional jump" target="label0003" invert_condition="yes">
          <condition type="int" lvalue="no" complexity="2" code="less_then">
            <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="x3"/>
            <operand_2 type="int" lvalue="yes" complexity="1" code="variable" name="x1"/>
          </condition>
        </expression>
        <expression type="void" lvalue="no" complexity="26" code="function call">
          <func_address type="void (int, int, int, float, float, float, float)" lvalue="yes" complexity="1" code="variable" name="_rasterize_horiz_line"/>
          <func_argument_0 type="int" lvalue="yes" complexity="1" code="variable" name="x3"/>
          <func_argument_1 type="int" lvalue="yes" complexity="1" code="variable" name="x2"/>
          <func_argument_2 type="int" lvalue="yes" complexity="1" code="variable" name="y"/>
          <func_argument_3 type="float" lvalue="yes" complexity="2" code="dereference">
            <operand_1 type="struct vec2f_decl *" lvalue="yes" complexity="1" code="variable" name="uv3"/>
          </func_argument_3>
          <func_argument_4 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct vec2f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct vec2f_decl *" lvalue="yes" complexity="1" code="variable" name="uv3"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
            </operand_1>
          </func_argument_4>
          <func_argument_5 type="float" lvalue="yes" complexity="1" code="variable" name="dudx"/>
          <func_argument_6 type="float" lvalue="yes" complexity="1" code="variable" name="dvdx"/>
        </expression>
        <expression type="null" lvalue="no" complexity="0" code="jump to label" target="label0004"/>
        <expression type="null" lvalue="no" complexity="0" code="label" name="label0003"/>
        <expression type="void" lvalue="no" complexity="26" code="function call">
          <func_address type="void (int, int, int, float, float, float, float)" lvalue="yes" complexity="1" code="variable" name="_rasterize_horiz_line"/>
          <func_argument_0 type="int" lvalue="yes" complexity="1" code="variable" name="x1"/>
          <func_argument_1 type="int" lvalue="yes" complexity="1" code="variable" name="x2"/>
          <func_argument_2 type="int" lvalue="yes" complexity="1" code="variable" name="y"/>
          <func_argument_3 type="float" lvalue="yes" complexity="2" code="dereference">
            <operand_1 type="struct vec2f_decl *" lvalue="yes" complexity="1" code="variable" name="uv1"/>
          </func_argument_3>
          <func_argument_4 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct vec2f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct vec2f_decl *" lvalue="yes" complexity="1" code="variable" name="uv1"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
            </operand_1>
          </func_argument_4>
          <func_argument_5 type="float" lvalue="yes" complexity="1" code="variable" name="dudx"/>
          <func_argument_6 type="float" lvalue="yes" complexity="1" code="variable" name="dvdx"/>
        </expression>
        <expression type="null" lvalue="no" complexity="0" code="label" name="label0004"/>
        <expression type="null" lvalue="no" complexity="0" code="label" name="label0002"/>
        <expression type="null" lvalue="no" complexity="0" code="jump to label" target="label0005"/>
        <expression type="null" lvalue="no" complexity="0" code="label" name="label0000"/>
        <expression type="null" lvalue="no" complexity="0" code="conditional jump" target="label0006" invert_condition="yes">
          <condition type="int" lvalue="no" complexity="2" code="less_then">
            <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="x3"/>
            <operand_2 type="int" lvalue="yes" complexity="1" code="variable" name="x2"/>
          </condition>
        </expression>
        <expression type="void" lvalue="no" complexity="28" code="function call">
          <func_address type="void (int, int, int, float, float, float, float)" lvalue="yes" complexity="1" code="variable" name="_rasterize_horiz_line"/>
          <func_argument_0 type="int" lvalue="yes" complexity="1" code="variable" name="x3"/>
          <func_argument_1 type="int" lvalue="yes" complexity="1" code="variable" name="x1"/>
          <func_argument_2 type="int" lvalue="yes" complexity="1" code="variable" name="y"/>
          <func_argument_3 type="float" lvalue="yes" complexity="2" code="dereference">
            <operand_1 type="struct vec2f_decl *" lvalue="yes" complexity="1" code="variable" name="uv3"/>
          </func_argument_3>
          <func_argument_4 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct vec2f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct vec2f_decl *" lvalue="yes" complexity="1" code="variable" name="uv3"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
            </operand_1>
          </func_argument_4>
          <func_argument_5 type="float" lvalue="no" complexity="2" code="neg">
            <operand_1 type="float" lvalue="yes" complexity="1" code="variable" name="dudx"/>
          </func_argument_5>
          <func_argument_6 type="float" lvalue="no" complexity="2" code="neg">
            <operand_1 type="float" lvalue="yes" complexity="1" code="variable" name="dvdx"/>
          </func_argument_6>
        </expression>
        <expression type="null" lvalue="no" complexity="0" code="jump to label" target="label0007"/>
        <expression type="null" lvalue="no" complexity="0" code="label" name="label0006"/>
        <expression type="null" lvalue="no" complexity="0" code="conditional jump" target="label0008" invert_condition="yes">
          <condition type="int" lvalue="no" complexity="2" code="greater_then">
            <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="x3"/>
            <operand_2 type="int" lvalue="yes" complexity="1" code="variable" name="x1"/>
          </condition>
        </expression>
        <expression type="void" lvalue="no" complexity="28" code="function call">
          <func_address type="void (int, int, int, float, float, float, float)" lvalue="yes" complexity="1" code="variable" name="_rasterize_horiz_line"/>
          <func_argument_0 type="int" lvalue="yes" complexity="1" code="variable" name="x2"/>
          <func_argument_1 type="int" lvalue="yes" complexity="1" code="variable" name="x3"/>
          <func_argument_2 type="int" lvalue="yes" complexity="1" code="variable" name="y"/>
          <func_argument_3 type="float" lvalue="yes" complexity="2" code="dereference">
            <operand_1 type="struct vec2f_decl *" lvalue="yes" complexity="1" code="variable" name="uv2"/>
          </func_argument_3>
          <func_argument_4 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct vec2f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct vec2f_decl *" lvalue="yes" complexity="1" code="variable" name="uv2"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
            </operand_1>
          </func_argument_4>
          <func_argument_5 type="float" lvalue="no" complexity="2" code="neg">
            <operand_1 type="float" lvalue="yes" complexity="1" code="variable" name="dudx"/>
          </func_argument_5>
          <func_argument_6 type="float" lvalue="no" complexity="2" code="neg">
            <operand_1 type="float" lvalue="yes" complexity="1" code="variable" name="dvdx"/>
          </func_argument_6>
        </expression>
        <expression type="null" lvalue="no" complexity="0" code="jump to label" target="label0009"/>
        <expression type="null" lvalue="no" complexity="0" code="label" name="label0008"/>
        <expression type="void" lvalue="no" complexity="28" code="function call">
          <func_address type="void (int, int, int, float, float, float, float)" lvalue="yes" complexity="1" code="variable" name="_rasterize_horiz_line"/>
          <func_argument_0 type="int" lvalue="yes" complexity="1" code="variable" name="x2"/>
          <func_argument_1 type="int" lvalue="yes" complexity="1" code="variable" name="x1"/>
          <func_argument_2 type="int" lvalue="yes" complexity="1" code="variable" name="y"/>
          <func_argument_3 type="float" lvalue="yes" complexity="2" code="dereference">
            <operand_1 type="struct vec2f_decl *" lvalue="yes" complexity="1" code="variable" name="uv2"/>
          </func_argument_3>
          <func_argument_4 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct vec2f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct vec2f_decl *" lvalue="yes" complexity="1" code="variable" name="uv2"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
            </operand_1>
          </func_argument_4>
          <func_argument_5 type="float" lvalue="no" complexity="2" code="neg">
            <operand_1 type="float" lvalue="yes" complexity="1" code="variable" name="dudx"/>
          </func_argument_5>
          <func_argument_6 type="float" lvalue="no" complexity="2" code="neg">
            <operand_1 type="float" lvalue="yes" complexity="1" code="variable" name="dvdx"/>
          </func_argument_6>
        </expression>
        <expression type="null" lvalue="no" complexity="0" code="label" name="label0009"/>
        <expression type="null" lvalue="no" complexity="0" code="label" name="label0007"/>
        <expression type="null" lvalue="no" complexity="0" code="label" name="label0005"/>
        <expression type="null" lvalue="no" complexity="0" code="return" retvalue="void"/>
      </body>
    </function>
    <function>
      <name>_rasterize_triangle_2i</name>
      <parameters>
        <parameter name="a" type="struct vertex2i_decl *"/>
        <parameter name="b" type="struct vertex2i_decl *"/>
        <parameter name="c" type="struct vertex2i_decl *"/>
      </parameters>
      <local_variables>
        <variable name="tmp" type="struct vertex2i_decl *"/>
        <variable name="x1" type="int"/>
        <variable name="x2" type="int"/>
        <variable name="y" type="int"/>
        <variable name="u1" type="float"/>
        <variable name="v1" type="float"/>
        <variable name="u2" type="float"/>
        <variable name="v2" type="float"/>
        <variable name="dudx" type="float"/>
        <variable name="dvdx" type="float"/>
      </local_variables>
      <body>
        <expression type="null" lvalue="no" complexity="0" code="conditional jump" target="label0000" invert_condition="yes">
          <condition type="int" lvalue="no" complexity="5" code="greater_then">
            <operand_1 type="int" lvalue="yes" complexity="4" code="dereference">
              <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="3" code="add">
                <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                  <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                    <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="a"/>
                  </operand_1>
                </operand_1>
                <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
              </operand_1>
            </operand_1>
            <operand_2 type="int" lvalue="yes" complexity="4" code="dereference">
              <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="3" code="add">
                <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                  <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                    <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="b"/>
                  </operand_1>
                </operand_1>
                <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
              </operand_1>
            </operand_2>
          </condition>
        </expression>
        <expression type="struct vertex2i_decl *" lvalue="no" complexity="2" code="assign">
          <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="tmp"/>
          <operand_2 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="a"/>
        </expression>
        <expression type="struct vertex2i_decl *" lvalue="no" complexity="2" code="assign">
          <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="a"/>
          <operand_2 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="b"/>
        </expression>
        <expression type="struct vertex2i_decl *" lvalue="no" complexity="2" code="assign">
          <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="b"/>
          <operand_2 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="tmp"/>
        </expression>
        <expression type="null" lvalue="no" complexity="0" code="label" name="label0000"/>
        <expression type="null" lvalue="no" complexity="0" code="conditional jump" target="label0001" invert_condition="yes">
          <condition type="int" lvalue="no" complexity="5" code="greater_then">
            <operand_1 type="int" lvalue="yes" complexity="4" code="dereference">
              <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="3" code="add">
                <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                  <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                    <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="a"/>
                  </operand_1>
                </operand_1>
                <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
              </operand_1>
            </operand_1>
            <operand_2 type="int" lvalue="yes" complexity="4" code="dereference">
              <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="3" code="add">
                <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                  <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                    <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="c"/>
                  </operand_1>
                </operand_1>
                <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
              </operand_1>
            </operand_2>
          </condition>
        </expression>
        <expression type="struct vertex2i_decl *" lvalue="no" complexity="2" code="assign">
          <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="tmp"/>
          <operand_2 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="a"/>
        </expression>
        <expression type="struct vertex2i_decl *" lvalue="no" complexity="2" code="assign">
          <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="a"/>
          <operand_2 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="c"/>
        </expression>
        <expression type="struct vertex2i_decl *" lvalue="no" complexity="2" code="assign">
          <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="c"/>
          <operand_2 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="tmp"/>
        </expression>
        <expression type="null" lvalue="no" complexity="0" code="label" name="label0001"/>
        <expression type="null" lvalue="no" complexity="0" code="conditional jump" target="label0002" invert_condition="yes">
          <condition type="int" lvalue="no" complexity="5" code="greater_then">
            <operand_1 type="int" lvalue="yes" complexity="4" code="dereference">
              <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="3" code="add">
                <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                  <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                    <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="b"/>
                  </operand_1>
                </operand_1>
                <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
              </operand_1>
            </operand_1>
            <operand_2 type="int" lvalue="yes" complexity="4" code="dereference">
              <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="3" code="add">
                <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                  <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                    <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="c"/>
                  </operand_1>
                </operand_1>
                <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
              </operand_1>
            </operand_2>
          </condition>
        </expression>
        <expression type="struct vertex2i_decl *" lvalue="no" complexity="2" code="assign">
          <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="tmp"/>
          <operand_2 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="b"/>
        </expression>
        <expression type="struct vertex2i_decl *" lvalue="no" complexity="2" code="assign">
          <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="b"/>
          <operand_2 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="c"/>
        </expression>
        <expression type="struct vertex2i_decl *" lvalue="no" complexity="2" code="assign">
          <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="c"/>
          <operand_2 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="tmp"/>
        </expression>
        <expression type="null" lvalue="no" complexity="0" code="label" name="label0002"/>
        <expression type="null" lvalue="no" complexity="0" code="conditional jump" target="label0003" invert_condition="yes">
          <condition type="int" lvalue="no" complexity="5" code="equal">
            <operand_1 type="int" lvalue="yes" complexity="4" code="dereference">
              <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="3" code="add">
                <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                  <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                    <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="a"/>
                  </operand_1>
                </operand_1>
                <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
              </operand_1>
            </operand_1>
            <operand_2 type="int" lvalue="yes" complexity="4" code="dereference">
              <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="3" code="add">
                <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                  <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                    <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="c"/>
                  </operand_1>
                </operand_1>
                <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
              </operand_1>
            </operand_2>
          </condition>
        </expression>
        <expression type="null" lvalue="no" complexity="0" code="conditional jump" target="label0004" invert_condition="yes">
          <condition type="int" lvalue="no" complexity="6" code="logical_and_in_jump">
            <operand_1 type="int" lvalue="no" complexity="5" code="greater_equal">
              <operand_1 type="int" lvalue="yes" complexity="4" code="dereference">
                <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="3" code="add">
                  <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                    <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                      <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="a"/>
                    </operand_1>
                  </operand_1>
                  <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                </operand_1>
              </operand_1>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="0"/>
            </operand_1>
            <operand_2 type="int" lvalue="no" complexity="5" code="less_then">
              <operand_1 type="int" lvalue="yes" complexity="4" code="dereference">
                <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="3" code="add">
                  <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                    <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                      <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="a"/>
                    </operand_1>
                  </operand_1>
                  <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                </operand_1>
              </operand_1>
              <operand_2 type="int" lvalue="yes" complexity="1" code="variable" name="_height"/>
            </operand_2>
          </condition>
        </expression>
        <expression type="void" lvalue="no" complexity="40" code="function call">
          <func_address type="void (int, int, int, int, struct vec2f_decl *, struct vec2f_decl *, struct vec2f_decl *, float, float)" lvalue="yes" complexity="1" code="variable" name="_rasterize_triangle_1i"/>
          <func_argument_0 type="int" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
              <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="a"/>
              </operand_1>
            </operand_1>
          </func_argument_0>
          <func_argument_1 type="int" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
              <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="b"/>
              </operand_1>
            </operand_1>
          </func_argument_1>
          <func_argument_2 type="int" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
              <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="c"/>
              </operand_1>
            </operand_1>
          </func_argument_2>
          <func_argument_3 type="int" lvalue="yes" complexity="4" code="dereference">
            <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="3" code="add">
              <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                  <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="a"/>
                </operand_1>
              </operand_1>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
            </operand_1>
          </func_argument_3>
          <func_argument_4 type="struct vec2f_decl *" lvalue="no" complexity="3" code="get_address">
            <operand_1 type="struct vec2f_decl" lvalue="yes" complexity="3" code="dereference">
              <operand_1 type="struct vertex2i_decl *" lvalue="no" complexity="2" code="add">
                <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="a"/>
                <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="8"/>
              </operand_1>
            </operand_1>
          </func_argument_4>
          <func_argument_5 type="struct vec2f_decl *" lvalue="no" complexity="3" code="get_address">
            <operand_1 type="struct vec2f_decl" lvalue="yes" complexity="3" code="dereference">
              <operand_1 type="struct vertex2i_decl *" lvalue="no" complexity="2" code="add">
                <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="b"/>
                <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="8"/>
              </operand_1>
            </operand_1>
          </func_argument_5>
          <func_argument_6 type="struct vec2f_decl *" lvalue="no" complexity="3" code="get_address">
            <operand_1 type="struct vec2f_decl" lvalue="yes" complexity="3" code="dereference">
              <operand_1 type="struct vertex2i_decl *" lvalue="no" complexity="2" code="add">
                <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="c"/>
                <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="8"/>
              </operand_1>
            </operand_1>
          </func_argument_6>
          <func_argument_7 type="float" lvalue="no" complexity="1" code="float literal" value="0.000000"/>
          <func_argument_8 type="float" lvalue="no" complexity="1" code="float literal" value="0.000000"/>
        </expression>
        <expression type="null" lvalue="no" complexity="0" code="label" name="label0004"/>
        <expression type="null" lvalue="no" complexity="0" code="return" retvalue="void"/>
        <expression type="null" lvalue="no" complexity="0" code="label" name="label0003"/>
        <expression type="int" lvalue="no" complexity="5" code="assign">
          <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="y"/>
          <operand_2 type="int" lvalue="yes" complexity="4" code="dereference">
            <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="3" code="add">
              <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                  <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="a"/>
                </operand_1>
              </operand_1>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
            </operand_1>
          </operand_2>
        </expression>
        <expression type="null" lvalue="no" complexity="0" code="label" name="label0005"/>
        <expression type="null" lvalue="no" complexity="0" code="label" name="label0006"/>
        <expression type="null" lvalue="no" complexity="0" code="conditional jump" target="label0007" invert_condition="yes">
          <condition type="int" lvalue="no" complexity="5" code="less_then">
            <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="y"/>
            <operand_2 type="int" lvalue="yes" complexity="4" code="dereference">
              <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="3" code="add">
                <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                  <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                    <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="b"/>
                  </operand_1>
                </operand_1>
                <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
              </operand_1>
            </operand_2>
          </condition>
        </expression>
        <expression type="int" lvalue="no" complexity="9" code="assign">
          <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="x1"/>
          <operand_2 type="int" lvalue="no" complexity="8" code="add">
            <operand_1 type="int" lvalue="no" complexity="7" code="div">
              <operand_1 type="int" lvalue="no" complexity="6" code="mul">
                <operand_1 type="int" lvalue="no" complexity="5" code="sub">
                  <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="y"/>
                  <operand_2 type="int" lvalue="yes" complexity="4" code="dereference">
                    <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="3" code="add">
                      <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                        <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                          <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="a"/>
                        </operand_1>
                      </operand_1>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                    </operand_1>
                  </operand_2>
                </operand_1>
                <operand_2 type="int" lvalue="no" complexity="4" code="sub">
                  <operand_1 type="int" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                      <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                        <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="b"/>
                      </operand_1>
                    </operand_1>
                  </operand_1>
                  <operand_2 type="int" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                      <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                        <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="a"/>
                      </operand_1>
                    </operand_1>
                  </operand_2>
                </operand_2>
              </operand_1>
              <operand_2 type="int" lvalue="no" complexity="5" code="sub">
                <operand_1 type="int" lvalue="yes" complexity="4" code="dereference">
                  <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="3" code="add">
                    <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                      <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                        <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="b"/>
                      </operand_1>
                    </operand_1>
                    <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                  </operand_1>
                </operand_1>
                <operand_2 type="int" lvalue="yes" complexity="4" code="dereference">
                  <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="3" code="add">
                    <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                      <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                        <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="a"/>
                      </operand_1>
                    </operand_1>
                    <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                  </operand_1>
                </operand_2>
              </operand_2>
            </operand_1>
            <operand_2 type="int" lvalue="yes" complexity="3" code="dereference">
              <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                  <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="a"/>
                </operand_1>
              </operand_1>
            </operand_2>
          </operand_2>
        </expression>
        <expression type="int" lvalue="no" complexity="9" code="assign">
          <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="x2"/>
          <operand_2 type="int" lvalue="no" complexity="8" code="add">
            <operand_1 type="int" lvalue="no" complexity="7" code="div">
              <operand_1 type="int" lvalue="no" complexity="6" code="mul">
                <operand_1 type="int" lvalue="no" complexity="5" code="sub">
                  <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="y"/>
                  <operand_2 type="int" lvalue="yes" complexity="4" code="dereference">
                    <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="3" code="add">
                      <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                        <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                          <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="a"/>
                        </operand_1>
                      </operand_1>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                    </operand_1>
                  </operand_2>
                </operand_1>
                <operand_2 type="int" lvalue="no" complexity="4" code="sub">
                  <operand_1 type="int" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                      <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                        <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="c"/>
                      </operand_1>
                    </operand_1>
                  </operand_1>
                  <operand_2 type="int" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                      <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                        <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="a"/>
                      </operand_1>
                    </operand_1>
                  </operand_2>
                </operand_2>
              </operand_1>
              <operand_2 type="int" lvalue="no" complexity="5" code="sub">
                <operand_1 type="int" lvalue="yes" complexity="4" code="dereference">
                  <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="3" code="add">
                    <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                      <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                        <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="c"/>
                      </operand_1>
                    </operand_1>
                    <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                  </operand_1>
                </operand_1>
                <operand_2 type="int" lvalue="yes" complexity="4" code="dereference">
                  <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="3" code="add">
                    <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                      <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                        <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="a"/>
                      </operand_1>
                    </operand_1>
                    <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                  </operand_1>
                </operand_2>
              </operand_2>
            </operand_1>
            <operand_2 type="int" lvalue="yes" complexity="3" code="dereference">
              <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                  <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="a"/>
                </operand_1>
              </operand_1>
            </operand_2>
          </operand_2>
        </expression>
        <expression type="float" lvalue="no" complexity="10" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="1" code="variable" name="u1"/>
          <operand_2 type="float" lvalue="no" complexity="9" code="add">
            <operand_1 type="float" lvalue="no" complexity="8" code="div">
              <operand_1 type="float" lvalue="no" complexity="7" code="mul">
                <operand_1 type="float" lvalue="no" complexity="6" code="convert_int2float">
                  <operand_1 type="int" lvalue="no" complexity="5" code="sub">
                    <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="y"/>
                    <operand_2 type="int" lvalue="yes" complexity="4" code="dereference">
                      <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="3" code="add">
                        <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                          <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                            <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="a"/>
                          </operand_1>
                        </operand_1>
                        <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                      </operand_1>
                    </operand_2>
                  </operand_1>
                </operand_1>
                <operand_2 type="float" lvalue="no" complexity="5" code="sub">
                  <operand_1 type="float" lvalue="yes" complexity="4" code="dereference">
                    <operand_1 type="struct vec2f_decl *" lvalue="no" complexity="3" code="get_address">
                      <operand_1 type="struct vec2f_decl" lvalue="yes" complexity="3" code="dereference">
                        <operand_1 type="struct vertex2i_decl *" lvalue="no" complexity="2" code="add">
                          <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="b"/>
                          <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="8"/>
                        </operand_1>
                      </operand_1>
                    </operand_1>
                  </operand_1>
                  <operand_2 type="float" lvalue="yes" complexity="4" code="dereference">
                    <operand_1 type="struct vec2f_decl *" lvalue="no" complexity="3" code="get_address">
                      <operand_1 type="struct vec2f_decl" lvalue="yes" complexity="3" code="dereference">
                        <operand_1 type="struct vertex2i_decl *" lvalue="no" complexity="2" code="add">
                          <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="a"/>
                          <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="8"/>
                        </operand_1>
                      </operand_1>
                    </operand_1>
                  </operand_2>
                </operand_2>
              </operand_1>
              <operand_2 type="float" lvalue="no" complexity="6" code="convert_int2float">
                <operand_1 type="int" lvalue="no" complexity="5" code="sub">
                  <operand_1 type="int" lvalue="yes" complexity="4" code="dereference">
                    <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="3" code="add">
                      <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                        <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                          <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="b"/>
                        </operand_1>
                      </operand_1>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                    </operand_1>
                  </operand_1>
                  <operand_2 type="int" lvalue="yes" complexity="4" code="dereference">
                    <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="3" code="add">
                      <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                        <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                          <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="a"/>
                        </operand_1>
                      </operand_1>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                    </operand_1>
                  </operand_2>
                </operand_1>
              </operand_2>
            </operand_1>
            <operand_2 type="float" lvalue="yes" complexity="4" code="dereference">
              <operand_1 type="struct vec2f_decl *" lvalue="no" complexity="3" code="get_address">
                <operand_1 type="struct vec2f_decl" lvalue="yes" complexity="3" code="dereference">
                  <operand_1 type="struct vertex2i_decl *" lvalue="no" complexity="2" code="add">
                    <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="a"/>
                    <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="8"/>
                  </operand_1>
                </operand_1>
              </operand_1>
            </operand_2>
          </operand_2>
        </expression>
        <expression type="float" lvalue="no" complexity="10" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="1" code="variable" name="u2"/>
          <operand_2 type="float" lvalue="no" complexity="9" code="add">
            <operand_1 type="float" lvalue="no" complexity="8" code="div">
              <operand_1 type="float" lvalue="no" complexity="7" code="mul">
                <operand_1 type="float" lvalue="no" complexity="6" code="convert_int2float">
                  <operand_1 type="int" lvalue="no" complexity="5" code="sub">
                    <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="y"/>
                    <operand_2 type="int" lvalue="yes" complexity="4" code="dereference">
                      <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="3" code="add">
                        <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                          <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                            <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="a"/>
                          </operand_1>
                        </operand_1>
                        <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                      </operand_1>
                    </operand_2>
                  </operand_1>
                </operand_1>
                <operand_2 type="float" lvalue="no" complexity="5" code="sub">
                  <operand_1 type="float" lvalue="yes" complexity="4" code="dereference">
                    <operand_1 type="struct vec2f_decl *" lvalue="no" complexity="3" code="get_address">
                      <operand_1 type="struct vec2f_decl" lvalue="yes" complexity="3" code="dereference">
                        <operand_1 type="struct vertex2i_decl *" lvalue="no" complexity="2" code="add">
                          <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="c"/>
                          <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="8"/>
                        </operand_1>
                      </operand_1>
                    </operand_1>
                  </operand_1>
                  <operand_2 type="float" lvalue="yes" complexity="4" code="dereference">
                    <operand_1 type="struct vec2f_decl *" lvalue="no" complexity="3" code="get_address">
                      <operand_1 type="struct vec2f_decl" lvalue="yes" complexity="3" code="dereference">
                        <operand_1 type="struct vertex2i_decl *" lvalue="no" complexity="2" code="add">
                          <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="a"/>
                          <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="8"/>
                        </operand_1>
                      </operand_1>
                    </operand_1>
                  </operand_2>
                </operand_2>
              </operand_1>
              <operand_2 type="float" lvalue="no" complexity="6" code="convert_int2float">
                <operand_1 type="int" lvalue="no" complexity="5" code="sub">
                  <operand_1 type="int" lvalue="yes" complexity="4" code="dereference">
                    <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="3" code="add">
                      <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                        <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                          <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="c"/>
                        </operand_1>
                      </operand_1>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                    </operand_1>
                  </operand_1>
                  <operand_2 type="int" lvalue="yes" complexity="4" code="dereference">
                    <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="3" code="add">
                      <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                        <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                          <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="a"/>
                        </operand_1>
                      </operand_1>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                    </operand_1>
                  </operand_2>
                </operand_1>
              </operand_2>
            </operand_1>
            <operand_2 type="float" lvalue="yes" complexity="4" code="dereference">
              <operand_1 type="struct vec2f_decl *" lvalue="no" complexity="3" code="get_address">
                <operand_1 type="struct vec2f_decl" lvalue="yes" complexity="3" code="dereference">
                  <operand_1 type="struct vertex2i_decl *" lvalue="no" complexity="2" code="add">
                    <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="a"/>
                    <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="8"/>
                  </operand_1>
                </operand_1>
              </operand_1>
            </operand_2>
          </operand_2>
        </expression>
        <expression type="float" lvalue="no" complexity="10" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="1" code="variable" name="v1"/>
          <operand_2 type="float" lvalue="no" complexity="9" code="add">
            <operand_1 type="float" lvalue="no" complexity="8" code="div">
              <operand_1 type="float" lvalue="no" complexity="7" code="mul">
                <operand_1 type="float" lvalue="no" complexity="6" code="convert_int2float">
                  <operand_1 type="int" lvalue="no" complexity="5" code="sub">
                    <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="y"/>
                    <operand_2 type="int" lvalue="yes" complexity="4" code="dereference">
                      <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="3" code="add">
                        <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                          <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                            <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="a"/>
                          </operand_1>
                        </operand_1>
                        <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                      </operand_1>
                    </operand_2>
                  </operand_1>
                </operand_1>
                <operand_2 type="float" lvalue="no" complexity="6" code="sub">
                  <operand_1 type="float" lvalue="yes" complexity="5" code="dereference">
                    <operand_1 type="struct vec2f_decl *" lvalue="no" complexity="4" code="add">
                      <operand_1 type="struct vec2f_decl *" lvalue="no" complexity="3" code="get_address">
                        <operand_1 type="struct vec2f_decl" lvalue="yes" complexity="3" code="dereference">
                          <operand_1 type="struct vertex2i_decl *" lvalue="no" complexity="2" code="add">
                            <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="b"/>
                            <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="8"/>
                          </operand_1>
                        </operand_1>
                      </operand_1>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                    </operand_1>
                  </operand_1>
                  <operand_2 type="float" lvalue="yes" complexity="5" code="dereference">
                    <operand_1 type="struct vec2f_decl *" lvalue="no" complexity="4" code="add">
                      <operand_1 type="struct vec2f_decl *" lvalue="no" complexity="3" code="get_address">
                        <operand_1 type="struct vec2f_decl" lvalue="yes" complexity="3" code="dereference">
                          <operand_1 type="struct vertex2i_decl *" lvalue="no" complexity="2" code="add">
                            <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="a"/>
                            <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="8"/>
                          </operand_1>
                        </operand_1>
                      </operand_1>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                    </operand_1>
                  </operand_2>
                </operand_2>
              </operand_1>
              <operand_2 type="float" lvalue="no" complexity="6" code="convert_int2float">
                <operand_1 type="int" lvalue="no" complexity="5" code="sub">
                  <operand_1 type="int" lvalue="yes" complexity="4" code="dereference">
                    <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="3" code="add">
                      <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                        <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                          <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="b"/>
                        </operand_1>
                      </operand_1>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                    </operand_1>
                  </operand_1>
                  <operand_2 type="int" lvalue="yes" complexity="4" code="dereference">
                    <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="3" code="add">
                      <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                        <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                          <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="a"/>
                        </operand_1>
                      </operand_1>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                    </operand_1>
                  </operand_2>
                </operand_1>
              </operand_2>
            </operand_1>
            <operand_2 type="float" lvalue="yes" complexity="5" code="dereference">
              <operand_1 type="struct vec2f_decl *" lvalue="no" complexity="4" code="add">
                <operand_1 type="struct vec2f_decl *" lvalue="no" complexity="3" code="get_address">
                  <operand_1 type="struct vec2f_decl" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct vertex2i_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="a"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="8"/>
                    </operand_1>
                  </operand_1>
                </operand_1>
                <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
              </operand_1>
            </operand_2>
          </operand_2>
        </expression>
        <expression type="float" lvalue="no" complexity="10" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="1" code="variable" name="v2"/>
          <operand_2 type="float" lvalue="no" complexity="9" code="add">
            <operand_1 type="float" lvalue="no" complexity="8" code="div">
              <operand_1 type="float" lvalue="no" complexity="7" code="mul">
                <operand_1 type="float" lvalue="no" complexity="6" code="convert_int2float">
                  <operand_1 type="int" lvalue="no" complexity="5" code="sub">
                    <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="y"/>
                    <operand_2 type="int" lvalue="yes" complexity="4" code="dereference">
                      <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="3" code="add">
                        <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                          <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                            <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="a"/>
                          </operand_1>
                        </operand_1>
                        <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                      </operand_1>
                    </operand_2>
                  </operand_1>
                </operand_1>
                <operand_2 type="float" lvalue="no" complexity="6" code="sub">
                  <operand_1 type="float" lvalue="yes" complexity="5" code="dereference">
                    <operand_1 type="struct vec2f_decl *" lvalue="no" complexity="4" code="add">
                      <operand_1 type="struct vec2f_decl *" lvalue="no" complexity="3" code="get_address">
                        <operand_1 type="struct vec2f_decl" lvalue="yes" complexity="3" code="dereference">
                          <operand_1 type="struct vertex2i_decl *" lvalue="no" complexity="2" code="add">
                            <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="c"/>
                            <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="8"/>
                          </operand_1>
                        </operand_1>
                      </operand_1>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                    </operand_1>
                  </operand_1>
                  <operand_2 type="float" lvalue="yes" complexity="5" code="dereference">
                    <operand_1 type="struct vec2f_decl *" lvalue="no" complexity="4" code="add">
                      <operand_1 type="struct vec2f_decl *" lvalue="no" complexity="3" code="get_address">
                        <operand_1 type="struct vec2f_decl" lvalue="yes" complexity="3" code="dereference">
                          <operand_1 type="struct vertex2i_decl *" lvalue="no" complexity="2" code="add">
                            <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="a"/>
                            <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="8"/>
                          </operand_1>
                        </operand_1>
                      </operand_1>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                    </operand_1>
                  </operand_2>
                </operand_2>
              </operand_1>
              <operand_2 type="float" lvalue="no" complexity="6" code="convert_int2float">
                <operand_1 type="int" lvalue="no" complexity="5" code="sub">
                  <operand_1 type="int" lvalue="yes" complexity="4" code="dereference">
                    <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="3" code="add">
                      <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                        <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                          <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="c"/>
                        </operand_1>
                      </operand_1>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                    </operand_1>
                  </operand_1>
                  <operand_2 type="int" lvalue="yes" complexity="4" code="dereference">
                    <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="3" code="add">
                      <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                        <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                          <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="a"/>
                        </operand_1>
                      </operand_1>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                    </operand_1>
                  </operand_2>
                </operand_1>
              </operand_2>
            </operand_1>
            <operand_2 type="float" lvalue="yes" complexity="5" code="dereference">
              <operand_1 type="struct vec2f_decl *" lvalue="no" complexity="4" code="add">
                <operand_1 type="struct vec2f_decl *" lvalue="no" complexity="3" code="get_address">
                  <operand_1 type="struct vec2f_decl" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct vertex2i_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="a"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="8"/>
                    </operand_1>
                  </operand_1>
                </operand_1>
                <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
              </operand_1>
            </operand_2>
          </operand_2>
        </expression>
        <expression type="float" lvalue="no" complexity="5" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="1" code="variable" name="dudx"/>
          <operand_2 type="float" lvalue="no" complexity="4" code="div">
            <operand_1 type="float" lvalue="no" complexity="2" code="sub">
              <operand_1 type="float" lvalue="yes" complexity="1" code="variable" name="u2"/>
              <operand_2 type="float" lvalue="yes" complexity="1" code="variable" name="u1"/>
            </operand_1>
            <operand_2 type="float" lvalue="no" complexity="3" code="convert_int2float">
              <operand_1 type="int" lvalue="no" complexity="2" code="sub">
                <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="x2"/>
                <operand_2 type="int" lvalue="yes" complexity="1" code="variable" name="x1"/>
              </operand_1>
            </operand_2>
          </operand_2>
        </expression>
        <expression type="float" lvalue="no" complexity="5" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="1" code="variable" name="dvdx"/>
          <operand_2 type="float" lvalue="no" complexity="4" code="div">
            <operand_1 type="float" lvalue="no" complexity="2" code="sub">
              <operand_1 type="float" lvalue="yes" complexity="1" code="variable" name="v2"/>
              <operand_2 type="float" lvalue="yes" complexity="1" code="variable" name="v1"/>
            </operand_1>
            <operand_2 type="float" lvalue="no" complexity="3" code="convert_int2float">
              <operand_1 type="int" lvalue="no" complexity="2" code="sub">
                <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="x2"/>
                <operand_2 type="int" lvalue="yes" complexity="1" code="variable" name="x1"/>
              </operand_1>
            </operand_2>
          </operand_2>
        </expression>
        <expression type="void" lvalue="no" complexity="25" code="function call">
          <func_address type="void (int, int, int, float, float, float, float, float, float)" lvalue="yes" complexity="1" code="variable" name="_rasterize_horiz_line__unordered"/>
          <func_argument_0 type="int" lvalue="yes" complexity="1" code="variable" name="x1"/>
          <func_argument_1 type="int" lvalue="yes" complexity="1" code="variable" name="x2"/>
          <func_argument_2 type="int" lvalue="yes" complexity="1" code="variable" name="y"/>
          <func_argument_3 type="float" lvalue="yes" complexity="1" code="variable" name="u1"/>
          <func_argument_4 type="float" lvalue="yes" complexity="1" code="variable" name="v1"/>
          <func_argument_5 type="float" lvalue="yes" complexity="1" code="variable" name="u2"/>
          <func_argument_6 type="float" lvalue="yes" complexity="1" code="variable" name="v2"/>
          <func_argument_7 type="float" lvalue="yes" complexity="1" code="variable" name="dudx"/>
          <func_argument_8 type="float" lvalue="yes" complexity="1" code="variable" name="dvdx"/>
        </expression>
        <expression type="int" lvalue="no" complexity="2" code="post_increment" step="1">
          <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="y"/>
        </expression>
        <expression type="null" lvalue="no" complexity="0" code="jump to label" target="label0006"/>
        <expression type="null" lvalue="no" complexity="0" code="label" name="label0007"/>
        <expression type="int" lvalue="no" complexity="9" code="assign">
          <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="x2"/>
          <operand_2 type="int" lvalue="no" complexity="8" code="add">
            <operand_1 type="int" lvalue="no" complexity="7" code="div">
              <operand_1 type="int" lvalue="no" complexity="6" code="mul">
                <operand_1 type="int" lvalue="no" complexity="5" code="sub">
                  <operand_1 type="int" lvalue="yes" complexity="4" code="dereference">
                    <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="3" code="add">
                      <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                        <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                          <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="b"/>
                        </operand_1>
                      </operand_1>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                    </operand_1>
                  </operand_1>
                  <operand_2 type="int" lvalue="yes" complexity="4" code="dereference">
                    <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="3" code="add">
                      <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                        <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                          <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="a"/>
                        </operand_1>
                      </operand_1>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                    </operand_1>
                  </operand_2>
                </operand_1>
                <operand_2 type="int" lvalue="no" complexity="4" code="sub">
                  <operand_1 type="int" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                      <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                        <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="c"/>
                      </operand_1>
                    </operand_1>
                  </operand_1>
                  <operand_2 type="int" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                      <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                        <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="a"/>
                      </operand_1>
                    </operand_1>
                  </operand_2>
                </operand_2>
              </operand_1>
              <operand_2 type="int" lvalue="no" complexity="5" code="sub">
                <operand_1 type="int" lvalue="yes" complexity="4" code="dereference">
                  <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="3" code="add">
                    <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                      <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                        <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="c"/>
                      </operand_1>
                    </operand_1>
                    <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                  </operand_1>
                </operand_1>
                <operand_2 type="int" lvalue="yes" complexity="4" code="dereference">
                  <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="3" code="add">
                    <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                      <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                        <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="a"/>
                      </operand_1>
                    </operand_1>
                    <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                  </operand_1>
                </operand_2>
              </operand_2>
            </operand_1>
            <operand_2 type="int" lvalue="yes" complexity="3" code="dereference">
              <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                  <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="a"/>
                </operand_1>
              </operand_1>
            </operand_2>
          </operand_2>
        </expression>
        <expression type="float" lvalue="no" complexity="10" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="1" code="variable" name="u2"/>
          <operand_2 type="float" lvalue="no" complexity="9" code="add">
            <operand_1 type="float" lvalue="no" complexity="8" code="div">
              <operand_1 type="float" lvalue="no" complexity="7" code="mul">
                <operand_1 type="float" lvalue="no" complexity="6" code="convert_int2float">
                  <operand_1 type="int" lvalue="no" complexity="5" code="sub">
                    <operand_1 type="int" lvalue="yes" complexity="4" code="dereference">
                      <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="3" code="add">
                        <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                          <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                            <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="b"/>
                          </operand_1>
                        </operand_1>
                        <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                      </operand_1>
                    </operand_1>
                    <operand_2 type="int" lvalue="yes" complexity="4" code="dereference">
                      <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="3" code="add">
                        <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                          <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                            <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="a"/>
                          </operand_1>
                        </operand_1>
                        <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                      </operand_1>
                    </operand_2>
                  </operand_1>
                </operand_1>
                <operand_2 type="float" lvalue="no" complexity="5" code="sub">
                  <operand_1 type="float" lvalue="yes" complexity="4" code="dereference">
                    <operand_1 type="struct vec2f_decl *" lvalue="no" complexity="3" code="get_address">
                      <operand_1 type="struct vec2f_decl" lvalue="yes" complexity="3" code="dereference">
                        <operand_1 type="struct vertex2i_decl *" lvalue="no" complexity="2" code="add">
                          <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="c"/>
                          <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="8"/>
                        </operand_1>
                      </operand_1>
                    </operand_1>
                  </operand_1>
                  <operand_2 type="float" lvalue="yes" complexity="4" code="dereference">
                    <operand_1 type="struct vec2f_decl *" lvalue="no" complexity="3" code="get_address">
                      <operand_1 type="struct vec2f_decl" lvalue="yes" complexity="3" code="dereference">
                        <operand_1 type="struct vertex2i_decl *" lvalue="no" complexity="2" code="add">
                          <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="a"/>
                          <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="8"/>
                        </operand_1>
                      </operand_1>
                    </operand_1>
                  </operand_2>
                </operand_2>
              </operand_1>
              <operand_2 type="float" lvalue="no" complexity="6" code="convert_int2float">
                <operand_1 type="int" lvalue="no" complexity="5" code="sub">
                  <operand_1 type="int" lvalue="yes" complexity="4" code="dereference">
                    <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="3" code="add">
                      <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                        <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                          <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="c"/>
                        </operand_1>
                      </operand_1>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                    </operand_1>
                  </operand_1>
                  <operand_2 type="int" lvalue="yes" complexity="4" code="dereference">
                    <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="3" code="add">
                      <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                        <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                          <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="a"/>
                        </operand_1>
                      </operand_1>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                    </operand_1>
                  </operand_2>
                </operand_1>
              </operand_2>
            </operand_1>
            <operand_2 type="float" lvalue="yes" complexity="4" code="dereference">
              <operand_1 type="struct vec2f_decl *" lvalue="no" complexity="3" code="get_address">
                <operand_1 type="struct vec2f_decl" lvalue="yes" complexity="3" code="dereference">
                  <operand_1 type="struct vertex2i_decl *" lvalue="no" complexity="2" code="add">
                    <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="a"/>
                    <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="8"/>
                  </operand_1>
                </operand_1>
              </operand_1>
            </operand_2>
          </operand_2>
        </expression>
        <expression type="float" lvalue="no" complexity="10" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="1" code="variable" name="v2"/>
          <operand_2 type="float" lvalue="no" complexity="9" code="add">
            <operand_1 type="float" lvalue="no" complexity="8" code="div">
              <operand_1 type="float" lvalue="no" complexity="7" code="mul">
                <operand_1 type="float" lvalue="no" complexity="6" code="convert_int2float">
                  <operand_1 type="int" lvalue="no" complexity="5" code="sub">
                    <operand_1 type="int" lvalue="yes" complexity="4" code="dereference">
                      <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="3" code="add">
                        <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                          <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                            <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="b"/>
                          </operand_1>
                        </operand_1>
                        <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                      </operand_1>
                    </operand_1>
                    <operand_2 type="int" lvalue="yes" complexity="4" code="dereference">
                      <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="3" code="add">
                        <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                          <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                            <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="a"/>
                          </operand_1>
                        </operand_1>
                        <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                      </operand_1>
                    </operand_2>
                  </operand_1>
                </operand_1>
                <operand_2 type="float" lvalue="no" complexity="6" code="sub">
                  <operand_1 type="float" lvalue="yes" complexity="5" code="dereference">
                    <operand_1 type="struct vec2f_decl *" lvalue="no" complexity="4" code="add">
                      <operand_1 type="struct vec2f_decl *" lvalue="no" complexity="3" code="get_address">
                        <operand_1 type="struct vec2f_decl" lvalue="yes" complexity="3" code="dereference">
                          <operand_1 type="struct vertex2i_decl *" lvalue="no" complexity="2" code="add">
                            <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="c"/>
                            <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="8"/>
                          </operand_1>
                        </operand_1>
                      </operand_1>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                    </operand_1>
                  </operand_1>
                  <operand_2 type="float" lvalue="yes" complexity="5" code="dereference">
                    <operand_1 type="struct vec2f_decl *" lvalue="no" complexity="4" code="add">
                      <operand_1 type="struct vec2f_decl *" lvalue="no" complexity="3" code="get_address">
                        <operand_1 type="struct vec2f_decl" lvalue="yes" complexity="3" code="dereference">
                          <operand_1 type="struct vertex2i_decl *" lvalue="no" complexity="2" code="add">
                            <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="a"/>
                            <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="8"/>
                          </operand_1>
                        </operand_1>
                      </operand_1>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                    </operand_1>
                  </operand_2>
                </operand_2>
              </operand_1>
              <operand_2 type="float" lvalue="no" complexity="6" code="convert_int2float">
                <operand_1 type="int" lvalue="no" complexity="5" code="sub">
                  <operand_1 type="int" lvalue="yes" complexity="4" code="dereference">
                    <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="3" code="add">
                      <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                        <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                          <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="c"/>
                        </operand_1>
                      </operand_1>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                    </operand_1>
                  </operand_1>
                  <operand_2 type="int" lvalue="yes" complexity="4" code="dereference">
                    <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="3" code="add">
                      <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                        <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                          <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="a"/>
                        </operand_1>
                      </operand_1>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                    </operand_1>
                  </operand_2>
                </operand_1>
              </operand_2>
            </operand_1>
            <operand_2 type="float" lvalue="yes" complexity="5" code="dereference">
              <operand_1 type="struct vec2f_decl *" lvalue="no" complexity="4" code="add">
                <operand_1 type="struct vec2f_decl *" lvalue="no" complexity="3" code="get_address">
                  <operand_1 type="struct vec2f_decl" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct vertex2i_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="a"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="8"/>
                    </operand_1>
                  </operand_1>
                </operand_1>
                <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
              </operand_1>
            </operand_2>
          </operand_2>
        </expression>
        <expression type="float" lvalue="no" complexity="7" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="1" code="variable" name="dudx"/>
          <operand_2 type="float" lvalue="no" complexity="6" code="div">
            <operand_1 type="float" lvalue="no" complexity="5" code="sub">
              <operand_1 type="float" lvalue="yes" complexity="1" code="variable" name="u2"/>
              <operand_2 type="float" lvalue="yes" complexity="4" code="dereference">
                <operand_1 type="struct vec2f_decl *" lvalue="no" complexity="3" code="get_address">
                  <operand_1 type="struct vec2f_decl" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct vertex2i_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="b"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="8"/>
                    </operand_1>
                  </operand_1>
                </operand_1>
              </operand_2>
            </operand_1>
            <operand_2 type="float" lvalue="no" complexity="5" code="convert_int2float">
              <operand_1 type="int" lvalue="no" complexity="4" code="sub">
                <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="x2"/>
                <operand_2 type="int" lvalue="yes" complexity="3" code="dereference">
                  <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                    <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                      <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="b"/>
                    </operand_1>
                  </operand_1>
                </operand_2>
              </operand_1>
            </operand_2>
          </operand_2>
        </expression>
        <expression type="float" lvalue="no" complexity="8" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="1" code="variable" name="dvdx"/>
          <operand_2 type="float" lvalue="no" complexity="7" code="div">
            <operand_1 type="float" lvalue="no" complexity="6" code="sub">
              <operand_1 type="float" lvalue="yes" complexity="1" code="variable" name="v2"/>
              <operand_2 type="float" lvalue="yes" complexity="5" code="dereference">
                <operand_1 type="struct vec2f_decl *" lvalue="no" complexity="4" code="add">
                  <operand_1 type="struct vec2f_decl *" lvalue="no" complexity="3" code="get_address">
                    <operand_1 type="struct vec2f_decl" lvalue="yes" complexity="3" code="dereference">
                      <operand_1 type="struct vertex2i_decl *" lvalue="no" complexity="2" code="add">
                        <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="b"/>
                        <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="8"/>
                      </operand_1>
                    </operand_1>
                  </operand_1>
                  <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                </operand_1>
              </operand_2>
            </operand_1>
            <operand_2 type="float" lvalue="no" complexity="5" code="convert_int2float">
              <operand_1 type="int" lvalue="no" complexity="4" code="sub">
                <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="x2"/>
                <operand_2 type="int" lvalue="yes" complexity="3" code="dereference">
                  <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                    <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                      <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="b"/>
                    </operand_1>
                  </operand_1>
                </operand_2>
              </operand_1>
            </operand_2>
          </operand_2>
        </expression>
        <expression type="void" lvalue="no" complexity="37" code="function call">
          <func_address type="void (int, int, int, float, float, float, float, float, float)" lvalue="yes" complexity="1" code="variable" name="_rasterize_horiz_line__unordered"/>
          <func_argument_0 type="int" lvalue="yes" complexity="1" code="variable" name="x2"/>
          <func_argument_1 type="int" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
              <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="b"/>
              </operand_1>
            </operand_1>
          </func_argument_1>
          <func_argument_2 type="int" lvalue="yes" complexity="4" code="dereference">
            <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="3" code="add">
              <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                  <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="b"/>
                </operand_1>
              </operand_1>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
            </operand_1>
          </func_argument_2>
          <func_argument_3 type="float" lvalue="yes" complexity="1" code="variable" name="u2"/>
          <func_argument_4 type="float" lvalue="yes" complexity="1" code="variable" name="v2"/>
          <func_argument_5 type="float" lvalue="yes" complexity="4" code="dereference">
            <operand_1 type="struct vec2f_decl *" lvalue="no" complexity="3" code="get_address">
              <operand_1 type="struct vec2f_decl" lvalue="yes" complexity="3" code="dereference">
                <operand_1 type="struct vertex2i_decl *" lvalue="no" complexity="2" code="add">
                  <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="b"/>
                  <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="8"/>
                </operand_1>
              </operand_1>
            </operand_1>
          </func_argument_5>
          <func_argument_6 type="float" lvalue="yes" complexity="5" code="dereference">
            <operand_1 type="struct vec2f_decl *" lvalue="no" complexity="4" code="add">
              <operand_1 type="struct vec2f_decl *" lvalue="no" complexity="3" code="get_address">
                <operand_1 type="struct vec2f_decl" lvalue="yes" complexity="3" code="dereference">
                  <operand_1 type="struct vertex2i_decl *" lvalue="no" complexity="2" code="add">
                    <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="b"/>
                    <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="8"/>
                  </operand_1>
                </operand_1>
              </operand_1>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
            </operand_1>
          </func_argument_6>
          <func_argument_7 type="float" lvalue="yes" complexity="1" code="variable" name="dudx"/>
          <func_argument_8 type="float" lvalue="yes" complexity="1" code="variable" name="dvdx"/>
        </expression>
        <expression type="int" lvalue="no" complexity="6" code="assign">
          <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="y"/>
          <operand_2 type="int" lvalue="no" complexity="5" code="add">
            <operand_1 type="int" lvalue="yes" complexity="4" code="dereference">
              <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="3" code="add">
                <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                  <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                    <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="b"/>
                  </operand_1>
                </operand_1>
                <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
              </operand_1>
            </operand_1>
            <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="1"/>
          </operand_2>
        </expression>
        <expression type="null" lvalue="no" complexity="0" code="label" name="label0008"/>
        <expression type="null" lvalue="no" complexity="0" code="label" name="label0009"/>
        <expression type="null" lvalue="no" complexity="0" code="conditional jump" target="label000a" invert_condition="yes">
          <condition type="int" lvalue="no" complexity="5" code="less_then">
            <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="y"/>
            <operand_2 type="int" lvalue="yes" complexity="4" code="dereference">
              <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="3" code="add">
                <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                  <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                    <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="c"/>
                  </operand_1>
                </operand_1>
                <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
              </operand_1>
            </operand_2>
          </condition>
        </expression>
        <expression type="int" lvalue="no" complexity="9" code="assign">
          <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="x1"/>
          <operand_2 type="int" lvalue="no" complexity="8" code="add">
            <operand_1 type="int" lvalue="no" complexity="7" code="div">
              <operand_1 type="int" lvalue="no" complexity="6" code="mul">
                <operand_1 type="int" lvalue="no" complexity="5" code="sub">
                  <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="y"/>
                  <operand_2 type="int" lvalue="yes" complexity="4" code="dereference">
                    <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="3" code="add">
                      <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                        <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                          <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="b"/>
                        </operand_1>
                      </operand_1>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                    </operand_1>
                  </operand_2>
                </operand_1>
                <operand_2 type="int" lvalue="no" complexity="4" code="sub">
                  <operand_1 type="int" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                      <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                        <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="c"/>
                      </operand_1>
                    </operand_1>
                  </operand_1>
                  <operand_2 type="int" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                      <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                        <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="b"/>
                      </operand_1>
                    </operand_1>
                  </operand_2>
                </operand_2>
              </operand_1>
              <operand_2 type="int" lvalue="no" complexity="5" code="sub">
                <operand_1 type="int" lvalue="yes" complexity="4" code="dereference">
                  <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="3" code="add">
                    <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                      <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                        <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="c"/>
                      </operand_1>
                    </operand_1>
                    <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                  </operand_1>
                </operand_1>
                <operand_2 type="int" lvalue="yes" complexity="4" code="dereference">
                  <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="3" code="add">
                    <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                      <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                        <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="b"/>
                      </operand_1>
                    </operand_1>
                    <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                  </operand_1>
                </operand_2>
              </operand_2>
            </operand_1>
            <operand_2 type="int" lvalue="yes" complexity="3" code="dereference">
              <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                  <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="b"/>
                </operand_1>
              </operand_1>
            </operand_2>
          </operand_2>
        </expression>
        <expression type="int" lvalue="no" complexity="9" code="assign">
          <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="x2"/>
          <operand_2 type="int" lvalue="no" complexity="8" code="add">
            <operand_1 type="int" lvalue="no" complexity="7" code="div">
              <operand_1 type="int" lvalue="no" complexity="6" code="mul">
                <operand_1 type="int" lvalue="no" complexity="5" code="sub">
                  <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="y"/>
                  <operand_2 type="int" lvalue="yes" complexity="4" code="dereference">
                    <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="3" code="add">
                      <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                        <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                          <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="a"/>
                        </operand_1>
                      </operand_1>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                    </operand_1>
                  </operand_2>
                </operand_1>
                <operand_2 type="int" lvalue="no" complexity="4" code="sub">
                  <operand_1 type="int" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                      <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                        <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="c"/>
                      </operand_1>
                    </operand_1>
                  </operand_1>
                  <operand_2 type="int" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                      <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                        <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="a"/>
                      </operand_1>
                    </operand_1>
                  </operand_2>
                </operand_2>
              </operand_1>
              <operand_2 type="int" lvalue="no" complexity="5" code="sub">
                <operand_1 type="int" lvalue="yes" complexity="4" code="dereference">
                  <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="3" code="add">
                    <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                      <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                        <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="c"/>
                      </operand_1>
                    </operand_1>
                    <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                  </operand_1>
                </operand_1>
                <operand_2 type="int" lvalue="yes" complexity="4" code="dereference">
                  <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="3" code="add">
                    <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                      <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                        <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="a"/>
                      </operand_1>
                    </operand_1>
                    <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                  </operand_1>
                </operand_2>
              </operand_2>
            </operand_1>
            <operand_2 type="int" lvalue="yes" complexity="3" code="dereference">
              <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                  <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="a"/>
                </operand_1>
              </operand_1>
            </operand_2>
          </operand_2>
        </expression>
        <expression type="float" lvalue="no" complexity="10" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="1" code="variable" name="u1"/>
          <operand_2 type="float" lvalue="no" complexity="9" code="add">
            <operand_1 type="float" lvalue="no" complexity="8" code="div">
              <operand_1 type="float" lvalue="no" complexity="7" code="mul">
                <operand_1 type="float" lvalue="no" complexity="6" code="convert_int2float">
                  <operand_1 type="int" lvalue="no" complexity="5" code="sub">
                    <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="y"/>
                    <operand_2 type="int" lvalue="yes" complexity="4" code="dereference">
                      <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="3" code="add">
                        <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                          <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                            <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="b"/>
                          </operand_1>
                        </operand_1>
                        <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                      </operand_1>
                    </operand_2>
                  </operand_1>
                </operand_1>
                <operand_2 type="float" lvalue="no" complexity="5" code="sub">
                  <operand_1 type="float" lvalue="yes" complexity="4" code="dereference">
                    <operand_1 type="struct vec2f_decl *" lvalue="no" complexity="3" code="get_address">
                      <operand_1 type="struct vec2f_decl" lvalue="yes" complexity="3" code="dereference">
                        <operand_1 type="struct vertex2i_decl *" lvalue="no" complexity="2" code="add">
                          <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="c"/>
                          <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="8"/>
                        </operand_1>
                      </operand_1>
                    </operand_1>
                  </operand_1>
                  <operand_2 type="float" lvalue="yes" complexity="4" code="dereference">
                    <operand_1 type="struct vec2f_decl *" lvalue="no" complexity="3" code="get_address">
                      <operand_1 type="struct vec2f_decl" lvalue="yes" complexity="3" code="dereference">
                        <operand_1 type="struct vertex2i_decl *" lvalue="no" complexity="2" code="add">
                          <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="b"/>
                          <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="8"/>
                        </operand_1>
                      </operand_1>
                    </operand_1>
                  </operand_2>
                </operand_2>
              </operand_1>
              <operand_2 type="float" lvalue="no" complexity="6" code="convert_int2float">
                <operand_1 type="int" lvalue="no" complexity="5" code="sub">
                  <operand_1 type="int" lvalue="yes" complexity="4" code="dereference">
                    <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="3" code="add">
                      <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                        <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                          <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="c"/>
                        </operand_1>
                      </operand_1>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                    </operand_1>
                  </operand_1>
                  <operand_2 type="int" lvalue="yes" complexity="4" code="dereference">
                    <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="3" code="add">
                      <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                        <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                          <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="b"/>
                        </operand_1>
                      </operand_1>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                    </operand_1>
                  </operand_2>
                </operand_1>
              </operand_2>
            </operand_1>
            <operand_2 type="float" lvalue="yes" complexity="4" code="dereference">
              <operand_1 type="struct vec2f_decl *" lvalue="no" complexity="3" code="get_address">
                <operand_1 type="struct vec2f_decl" lvalue="yes" complexity="3" code="dereference">
                  <operand_1 type="struct vertex2i_decl *" lvalue="no" complexity="2" code="add">
                    <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="b"/>
                    <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="8"/>
                  </operand_1>
                </operand_1>
              </operand_1>
            </operand_2>
          </operand_2>
        </expression>
        <expression type="float" lvalue="no" complexity="10" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="1" code="variable" name="u2"/>
          <operand_2 type="float" lvalue="no" complexity="9" code="add">
            <operand_1 type="float" lvalue="no" complexity="8" code="div">
              <operand_1 type="float" lvalue="no" complexity="7" code="mul">
                <operand_1 type="float" lvalue="no" complexity="6" code="convert_int2float">
                  <operand_1 type="int" lvalue="no" complexity="5" code="sub">
                    <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="y"/>
                    <operand_2 type="int" lvalue="yes" complexity="4" code="dereference">
                      <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="3" code="add">
                        <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                          <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                            <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="a"/>
                          </operand_1>
                        </operand_1>
                        <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                      </operand_1>
                    </operand_2>
                  </operand_1>
                </operand_1>
                <operand_2 type="float" lvalue="no" complexity="5" code="sub">
                  <operand_1 type="float" lvalue="yes" complexity="4" code="dereference">
                    <operand_1 type="struct vec2f_decl *" lvalue="no" complexity="3" code="get_address">
                      <operand_1 type="struct vec2f_decl" lvalue="yes" complexity="3" code="dereference">
                        <operand_1 type="struct vertex2i_decl *" lvalue="no" complexity="2" code="add">
                          <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="c"/>
                          <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="8"/>
                        </operand_1>
                      </operand_1>
                    </operand_1>
                  </operand_1>
                  <operand_2 type="float" lvalue="yes" complexity="4" code="dereference">
                    <operand_1 type="struct vec2f_decl *" lvalue="no" complexity="3" code="get_address">
                      <operand_1 type="struct vec2f_decl" lvalue="yes" complexity="3" code="dereference">
                        <operand_1 type="struct vertex2i_decl *" lvalue="no" complexity="2" code="add">
                          <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="a"/>
                          <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="8"/>
                        </operand_1>
                      </operand_1>
                    </operand_1>
                  </operand_2>
                </operand_2>
              </operand_1>
              <operand_2 type="float" lvalue="no" complexity="6" code="convert_int2float">
                <operand_1 type="int" lvalue="no" complexity="5" code="sub">
                  <operand_1 type="int" lvalue="yes" complexity="4" code="dereference">
                    <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="3" code="add">
                      <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                        <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                          <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="c"/>
                        </operand_1>
                      </operand_1>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                    </operand_1>
                  </operand_1>
                  <operand_2 type="int" lvalue="yes" complexity="4" code="dereference">
                    <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="3" code="add">
                      <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                        <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                          <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="a"/>
                        </operand_1>
                      </operand_1>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                    </operand_1>
                  </operand_2>
                </operand_1>
              </operand_2>
            </operand_1>
            <operand_2 type="float" lvalue="yes" complexity="4" code="dereference">
              <operand_1 type="struct vec2f_decl *" lvalue="no" complexity="3" code="get_address">
                <operand_1 type="struct vec2f_decl" lvalue="yes" complexity="3" code="dereference">
                  <operand_1 type="struct vertex2i_decl *" lvalue="no" complexity="2" code="add">
                    <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="a"/>
                    <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="8"/>
                  </operand_1>
                </operand_1>
              </operand_1>
            </operand_2>
          </operand_2>
        </expression>
        <expression type="float" lvalue="no" complexity="10" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="1" code="variable" name="v1"/>
          <operand_2 type="float" lvalue="no" complexity="9" code="add">
            <operand_1 type="float" lvalue="no" complexity="8" code="div">
              <operand_1 type="float" lvalue="no" complexity="7" code="mul">
                <operand_1 type="float" lvalue="no" complexity="6" code="convert_int2float">
                  <operand_1 type="int" lvalue="no" complexity="5" code="sub">
                    <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="y"/>
                    <operand_2 type="int" lvalue="yes" complexity="4" code="dereference">
                      <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="3" code="add">
                        <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                          <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                            <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="b"/>
                          </operand_1>
                        </operand_1>
                        <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                      </operand_1>
                    </operand_2>
                  </operand_1>
                </operand_1>
                <operand_2 type="float" lvalue="no" complexity="6" code="sub">
                  <operand_1 type="float" lvalue="yes" complexity="5" code="dereference">
                    <operand_1 type="struct vec2f_decl *" lvalue="no" complexity="4" code="add">
                      <operand_1 type="struct vec2f_decl *" lvalue="no" complexity="3" code="get_address">
                        <operand_1 type="struct vec2f_decl" lvalue="yes" complexity="3" code="dereference">
                          <operand_1 type="struct vertex2i_decl *" lvalue="no" complexity="2" code="add">
                            <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="c"/>
                            <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="8"/>
                          </operand_1>
                        </operand_1>
                      </operand_1>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                    </operand_1>
                  </operand_1>
                  <operand_2 type="float" lvalue="yes" complexity="5" code="dereference">
                    <operand_1 type="struct vec2f_decl *" lvalue="no" complexity="4" code="add">
                      <operand_1 type="struct vec2f_decl *" lvalue="no" complexity="3" code="get_address">
                        <operand_1 type="struct vec2f_decl" lvalue="yes" complexity="3" code="dereference">
                          <operand_1 type="struct vertex2i_decl *" lvalue="no" complexity="2" code="add">
                            <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="b"/>
                            <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="8"/>
                          </operand_1>
                        </operand_1>
                      </operand_1>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                    </operand_1>
                  </operand_2>
                </operand_2>
              </operand_1>
              <operand_2 type="float" lvalue="no" complexity="6" code="convert_int2float">
                <operand_1 type="int" lvalue="no" complexity="5" code="sub">
                  <operand_1 type="int" lvalue="yes" complexity="4" code="dereference">
                    <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="3" code="add">
                      <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                        <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                          <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="c"/>
                        </operand_1>
                      </operand_1>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                    </operand_1>
                  </operand_1>
                  <operand_2 type="int" lvalue="yes" complexity="4" code="dereference">
                    <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="3" code="add">
                      <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                        <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                          <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="b"/>
                        </operand_1>
                      </operand_1>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                    </operand_1>
                  </operand_2>
                </operand_1>
              </operand_2>
            </operand_1>
            <operand_2 type="float" lvalue="yes" complexity="5" code="dereference">
              <operand_1 type="struct vec2f_decl *" lvalue="no" complexity="4" code="add">
                <operand_1 type="struct vec2f_decl *" lvalue="no" complexity="3" code="get_address">
                  <operand_1 type="struct vec2f_decl" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct vertex2i_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="b"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="8"/>
                    </operand_1>
                  </operand_1>
                </operand_1>
                <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
              </operand_1>
            </operand_2>
          </operand_2>
        </expression>
        <expression type="float" lvalue="no" complexity="10" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="1" code="variable" name="v2"/>
          <operand_2 type="float" lvalue="no" complexity="9" code="add">
            <operand_1 type="float" lvalue="no" complexity="8" code="div">
              <operand_1 type="float" lvalue="no" complexity="7" code="mul">
                <operand_1 type="float" lvalue="no" complexity="6" code="convert_int2float">
                  <operand_1 type="int" lvalue="no" complexity="5" code="sub">
                    <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="y"/>
                    <operand_2 type="int" lvalue="yes" complexity="4" code="dereference">
                      <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="3" code="add">
                        <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                          <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                            <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="a"/>
                          </operand_1>
                        </operand_1>
                        <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                      </operand_1>
                    </operand_2>
                  </operand_1>
                </operand_1>
                <operand_2 type="float" lvalue="no" complexity="6" code="sub">
                  <operand_1 type="float" lvalue="yes" complexity="5" code="dereference">
                    <operand_1 type="struct vec2f_decl *" lvalue="no" complexity="4" code="add">
                      <operand_1 type="struct vec2f_decl *" lvalue="no" complexity="3" code="get_address">
                        <operand_1 type="struct vec2f_decl" lvalue="yes" complexity="3" code="dereference">
                          <operand_1 type="struct vertex2i_decl *" lvalue="no" complexity="2" code="add">
                            <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="c"/>
                            <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="8"/>
                          </operand_1>
                        </operand_1>
                      </operand_1>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                    </operand_1>
                  </operand_1>
                  <operand_2 type="float" lvalue="yes" complexity="5" code="dereference">
                    <operand_1 type="struct vec2f_decl *" lvalue="no" complexity="4" code="add">
                      <operand_1 type="struct vec2f_decl *" lvalue="no" complexity="3" code="get_address">
                        <operand_1 type="struct vec2f_decl" lvalue="yes" complexity="3" code="dereference">
                          <operand_1 type="struct vertex2i_decl *" lvalue="no" complexity="2" code="add">
                            <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="a"/>
                            <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="8"/>
                          </operand_1>
                        </operand_1>
                      </operand_1>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                    </operand_1>
                  </operand_2>
                </operand_2>
              </operand_1>
              <operand_2 type="float" lvalue="no" complexity="6" code="convert_int2float">
                <operand_1 type="int" lvalue="no" complexity="5" code="sub">
                  <operand_1 type="int" lvalue="yes" complexity="4" code="dereference">
                    <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="3" code="add">
                      <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                        <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                          <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="c"/>
                        </operand_1>
                      </operand_1>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                    </operand_1>
                  </operand_1>
                  <operand_2 type="int" lvalue="yes" complexity="4" code="dereference">
                    <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="3" code="add">
                      <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="get_address">
                        <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="2" code="dereference">
                          <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="a"/>
                        </operand_1>
                      </operand_1>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                    </operand_1>
                  </operand_2>
                </operand_1>
              </operand_2>
            </operand_1>
            <operand_2 type="float" lvalue="yes" complexity="5" code="dereference">
              <operand_1 type="struct vec2f_decl *" lvalue="no" complexity="4" code="add">
                <operand_1 type="struct vec2f_decl *" lvalue="no" complexity="3" code="get_address">
                  <operand_1 type="struct vec2f_decl" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct vertex2i_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct vertex2i_decl *" lvalue="yes" complexity="1" code="variable" name="a"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="8"/>
                    </operand_1>
                  </operand_1>
                </operand_1>
                <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
              </operand_1>
            </operand_2>
          </operand_2>
        </expression>
        <expression type="float" lvalue="no" complexity="5" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="1" code="variable" name="dudx"/>
          <operand_2 type="float" lvalue="no" complexity="4" code="div">
            <operand_1 type="float" lvalue="no" complexity="2" code="sub">
              <operand_1 type="float" lvalue="yes" complexity="1" code="variable" name="u2"/>
              <operand_2 type="float" lvalue="yes" complexity="1" code="variable" name="u1"/>
            </operand_1>
            <operand_2 type="float" lvalue="no" complexity="3" code="convert_int2float">
              <operand_1 type="int" lvalue="no" complexity="2" code="sub">
                <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="x2"/>
                <operand_2 type="int" lvalue="yes" complexity="1" code="variable" name="x1"/>
              </operand_1>
            </operand_2>
          </operand_2>
        </expression>
        <expression type="float" lvalue="no" complexity="5" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="1" code="variable" name="dvdx"/>
          <operand_2 type="float" lvalue="no" complexity="4" code="div">
            <operand_1 type="float" lvalue="no" complexity="2" code="sub">
              <operand_1 type="float" lvalue="yes" complexity="1" code="variable" name="v2"/>
              <operand_2 type="float" lvalue="yes" complexity="1" code="variable" name="v1"/>
            </operand_1>
            <operand_2 type="float" lvalue="no" complexity="3" code="convert_int2float">
              <operand_1 type="int" lvalue="no" complexity="2" code="sub">
                <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="x2"/>
                <operand_2 type="int" lvalue="yes" complexity="1" code="variable" name="x1"/>
              </operand_1>
            </operand_2>
          </operand_2>
        </expression>
        <expression type="void" lvalue="no" complexity="25" code="function call">
          <func_address type="void (int, int, int, float, float, float, float, float, float)" lvalue="yes" complexity="1" code="variable" name="_rasterize_horiz_line__unordered"/>
          <func_argument_0 type="int" lvalue="yes" complexity="1" code="variable" name="x1"/>
          <func_argument_1 type="int" lvalue="yes" complexity="1" code="variable" name="x2"/>
          <func_argument_2 type="int" lvalue="yes" complexity="1" code="variable" name="y"/>
          <func_argument_3 type="float" lvalue="yes" complexity="1" code="variable" name="u1"/>
          <func_argument_4 type="float" lvalue="yes" complexity="1" code="variable" name="v1"/>
          <func_argument_5 type="float" lvalue="yes" complexity="1" code="variable" name="u2"/>
          <func_argument_6 type="float" lvalue="yes" complexity="1" code="variable" name="v2"/>
          <func_argument_7 type="float" lvalue="yes" complexity="1" code="variable" name="dudx"/>
          <func_argument_8 type="float" lvalue="yes" complexity="1" code="variable" name="dvdx"/>
        </expression>
        <expression type="int" lvalue="no" complexity="2" code="post_increment" step="1">
          <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="y"/>
        </expression>
        <expression type="null" lvalue="no" complexity="0" code="jump to label" target="label0009"/>
        <expression type="null" lvalue="no" complexity="0" code="label" name="label000a"/>
        <expression type="null" lvalue="no" complexity="0" code="return" retvalue="void"/>
      </body>
    </function>
    <function>
      <name>_clip_on_plain</name>
      <parameters>
        <parameter name="dst" type="struct polygon4f_decl *"/>
        <parameter name="src" type="struct polygon4f_decl *"/>
        <parameter name="base" type="struct vec4f_decl *"/>
        <parameter name="normal" type="struct vec4f_decl *"/>
      </parameters>
      <local_variables>
        <variable name="i" type="struct vertex4f_decl *"/>
        <variable name="j" type="struct vertex4f_decl *"/>
        <variable name="tmp" type="struct vec4f_decl"/>
        <variable name="tmp2" type="struct vec4f_decl"/>
        <variable name="texcoord_diff" type="struct vec2f_decl"/>
        <variable name="mul_beg" type="float"/>
        <variable name="mul_end" type="float"/>
        <variable name="scale" type="float"/>
      </local_variables>
      <body>
        <expression type="int" lvalue="no" complexity="4" code="assign">
          <operand_1 type="int" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct polygon4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct polygon4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="192"/>
            </operand_1>
          </operand_1>
          <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="0"/>
        </expression>
        <expression type="struct vertex4f_decl *" lvalue="no" complexity="3" code="assign">
          <operand_1 type="struct vertex4f_decl *" lvalue="yes" complexity="1" code="variable" name="i"/>
          <operand_2 type="struct vertex4f_decl *" lvalue="no" complexity="2" code="get_address">
            <operand_1 type="struct vertex4f_decl[8]" lvalue="yes" complexity="2" code="dereference">
              <operand_1 type="struct polygon4f_decl *" lvalue="yes" complexity="1" code="variable" name="src"/>
            </operand_1>
          </operand_2>
        </expression>
        <expression type="struct vertex4f_decl *" lvalue="no" complexity="4" code="assign">
          <operand_1 type="struct vertex4f_decl *" lvalue="yes" complexity="1" code="variable" name="j"/>
          <operand_2 type="struct vertex4f_decl *" lvalue="no" complexity="3" code="add">
            <operand_1 type="struct vertex4f_decl *" lvalue="no" complexity="2" code="get_address">
              <operand_1 type="struct vertex4f_decl[8]" lvalue="yes" complexity="2" code="dereference">
                <operand_1 type="struct polygon4f_decl *" lvalue="yes" complexity="1" code="variable" name="src"/>
              </operand_1>
            </operand_1>
            <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="24"/>
          </operand_2>
        </expression>
        <expression type="null" lvalue="no" complexity="0" code="label" name="label0000"/>
        <expression type="null" lvalue="no" complexity="0" code="label" name="label0001"/>
        <expression type="null" lvalue="no" complexity="0" code="conditional jump" target="label0002" invert_condition="yes">
          <condition type="int" lvalue="no" complexity="6" code="less_then">
            <operand_1 type="struct vertex4f_decl *" lvalue="yes" complexity="1" code="variable" name="j"/>
            <operand_2 type="struct vertex4f_decl *" lvalue="no" complexity="5" code="add">
              <operand_1 type="struct vertex4f_decl *" lvalue="no" complexity="2" code="get_address">
                <operand_1 type="struct vertex4f_decl[8]" lvalue="yes" complexity="2" code="dereference">
                  <operand_1 type="struct polygon4f_decl *" lvalue="yes" complexity="1" code="variable" name="src"/>
                </operand_1>
              </operand_1>
              <operand_2 type="int" lvalue="no" complexity="4" code="mul">
                <operand_1 type="int" lvalue="yes" complexity="3" code="dereference">
                  <operand_1 type="struct polygon4f_decl *" lvalue="no" complexity="2" code="add">
                    <operand_1 type="struct polygon4f_decl *" lvalue="yes" complexity="1" code="variable" name="src"/>
                    <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="192"/>
                  </operand_1>
                </operand_1>
                <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="24"/>
              </operand_2>
            </operand_2>
          </condition>
        </expression>
        <expression type="void" lvalue="no" complexity="20" code="function call">
          <func_address type="void (struct vec4f_decl *, struct vec4f_decl *, struct vec4f_decl *)" lvalue="yes" complexity="1" code="variable" name="vec4f_subtract"/>
          <func_argument_0 type="struct vec4f_decl *" lvalue="no" complexity="1" code="get_address">
            <operand_1 type="struct vec4f_decl" lvalue="yes" complexity="1" code="variable" name="tmp"/>
          </func_argument_0>
          <func_argument_1 type="struct vec4f_decl *" lvalue="no" complexity="2" code="get_address">
            <operand_1 type="struct vec4f_decl" lvalue="yes" complexity="2" code="dereference">
              <operand_1 type="struct vertex4f_decl *" lvalue="yes" complexity="1" code="variable" name="i"/>
            </operand_1>
          </func_argument_1>
          <func_argument_2 type="struct vec4f_decl *" lvalue="yes" complexity="1" code="variable" name="base"/>
        </expression>
        <expression type="float" lvalue="no" complexity="19" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="1" code="variable" name="mul_beg"/>
          <operand_2 type="float" lvalue="no" complexity="18" code="function call">
            <func_address type="float (struct vec4f_decl *, struct vec4f_decl *)" lvalue="yes" complexity="1" code="variable" name="vec4f_dot"/>
            <func_argument_0 type="struct vec4f_decl *" lvalue="no" complexity="1" code="get_address">
              <operand_1 type="struct vec4f_decl" lvalue="yes" complexity="1" code="variable" name="tmp"/>
            </func_argument_0>
            <func_argument_1 type="struct vec4f_decl *" lvalue="yes" complexity="1" code="variable" name="normal"/>
          </operand_2>
        </expression>
        <expression type="void" lvalue="no" complexity="20" code="function call">
          <func_address type="void (struct vec4f_decl *, struct vec4f_decl *, struct vec4f_decl *)" lvalue="yes" complexity="1" code="variable" name="vec4f_subtract"/>
          <func_argument_0 type="struct vec4f_decl *" lvalue="no" complexity="1" code="get_address">
            <operand_1 type="struct vec4f_decl" lvalue="yes" complexity="1" code="variable" name="tmp"/>
          </func_argument_0>
          <func_argument_1 type="struct vec4f_decl *" lvalue="no" complexity="2" code="get_address">
            <operand_1 type="struct vec4f_decl" lvalue="yes" complexity="2" code="dereference">
              <operand_1 type="struct vertex4f_decl *" lvalue="yes" complexity="1" code="variable" name="j"/>
            </operand_1>
          </func_argument_1>
          <func_argument_2 type="struct vec4f_decl *" lvalue="yes" complexity="1" code="variable" name="base"/>
        </expression>
        <expression type="float" lvalue="no" complexity="19" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="1" code="variable" name="mul_end"/>
          <operand_2 type="float" lvalue="no" complexity="18" code="function call">
            <func_address type="float (struct vec4f_decl *, struct vec4f_decl *)" lvalue="yes" complexity="1" code="variable" name="vec4f_dot"/>
            <func_argument_0 type="struct vec4f_decl *" lvalue="no" complexity="1" code="get_address">
              <operand_1 type="struct vec4f_decl" lvalue="yes" complexity="1" code="variable" name="tmp"/>
            </func_argument_0>
            <func_argument_1 type="struct vec4f_decl *" lvalue="yes" complexity="1" code="variable" name="normal"/>
          </operand_2>
        </expression>
        <expression type="null" lvalue="no" complexity="0" code="conditional jump" target="label0003" invert_condition="yes">
          <condition type="int" lvalue="no" complexity="2" code="greater_equal">
            <operand_1 type="float" lvalue="yes" complexity="1" code="variable" name="mul_beg"/>
            <operand_2 type="float" lvalue="no" complexity="1" code="float literal" value="0.000000"/>
          </condition>
        </expression>
        <expression type="struct vertex4f_decl" lvalue="no" complexity="8" code="assign">
          <operand_1 type="struct vertex4f_decl" lvalue="yes" complexity="7" code="dereference">
            <operand_1 type="struct vertex4f_decl *" lvalue="no" complexity="6" code="add">
              <operand_1 type="struct vertex4f_decl *" lvalue="no" complexity="2" code="get_address">
                <operand_1 type="struct vertex4f_decl[8]" lvalue="yes" complexity="2" code="dereference">
                  <operand_1 type="struct polygon4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
                </operand_1>
              </operand_1>
              <operand_2 type="int" lvalue="no" complexity="5" code="mul">
                <operand_1 type="int" lvalue="no" complexity="4" code="post_increment" step="1">
                  <operand_1 type="int" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct polygon4f_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct polygon4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="192"/>
                    </operand_1>
                  </operand_1>
                </operand_1>
                <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="24"/>
              </operand_2>
            </operand_1>
          </operand_1>
          <operand_2 type="struct vertex4f_decl" lvalue="yes" complexity="2" code="dereference">
            <operand_1 type="struct vertex4f_decl *" lvalue="yes" complexity="1" code="variable" name="i"/>
          </operand_2>
        </expression>
        <expression type="null" lvalue="no" complexity="0" code="label" name="label0003"/>
        <expression type="null" lvalue="no" complexity="0" code="conditional jump" target="label0004" invert_condition="yes">
          <condition type="int" lvalue="no" complexity="4" code="logical_or_in_jump">
            <operand_1 type="int" lvalue="no" complexity="3" code="logical_and_in_jump">
              <operand_1 type="int" lvalue="no" complexity="2" code="greater_then">
                <operand_1 type="float" lvalue="yes" complexity="1" code="variable" name="mul_beg"/>
                <operand_2 type="float" lvalue="no" complexity="1" code="float literal" value="0.000000"/>
              </operand_1>
              <operand_2 type="int" lvalue="no" complexity="2" code="less_then">
                <operand_1 type="float" lvalue="yes" complexity="1" code="variable" name="mul_end"/>
                <operand_2 type="float" lvalue="no" complexity="1" code="float literal" value="0.000000"/>
              </operand_2>
            </operand_1>
            <operand_2 type="int" lvalue="no" complexity="3" code="logical_and_in_jump">
              <operand_1 type="int" lvalue="no" complexity="2" code="greater_equal">
                <operand_1 type="float" lvalue="yes" complexity="1" code="variable" name="mul_end"/>
                <operand_2 type="float" lvalue="no" complexity="1" code="float literal" value="0.000000"/>
              </operand_1>
              <operand_2 type="int" lvalue="no" complexity="2" code="less_then">
                <operand_1 type="float" lvalue="yes" complexity="1" code="variable" name="mul_beg"/>
                <operand_2 type="float" lvalue="no" complexity="1" code="float literal" value="0.000000"/>
              </operand_2>
            </operand_2>
          </condition>
        </expression>
        <expression type="void" lvalue="no" complexity="20" code="function call">
          <func_address type="void (struct vec4f_decl *, struct vec4f_decl *, struct vec4f_decl *)" lvalue="yes" complexity="1" code="variable" name="vec4f_subtract"/>
          <func_argument_0 type="struct vec4f_decl *" lvalue="no" complexity="1" code="get_address">
            <operand_1 type="struct vec4f_decl" lvalue="yes" complexity="1" code="variable" name="tmp"/>
          </func_argument_0>
          <func_argument_1 type="struct vec4f_decl *" lvalue="yes" complexity="1" code="variable" name="base"/>
          <func_argument_2 type="struct vec4f_decl *" lvalue="no" complexity="2" code="get_address">
            <operand_1 type="struct vec4f_decl" lvalue="yes" complexity="2" code="dereference">
              <operand_1 type="struct vertex4f_decl *" lvalue="yes" complexity="1" code="variable" name="i"/>
            </operand_1>
          </func_argument_2>
        </expression>
        <expression type="void" lvalue="no" complexity="21" code="function call">
          <func_address type="void (struct vec4f_decl *, struct vec4f_decl *, struct vec4f_decl *)" lvalue="yes" complexity="1" code="variable" name="vec4f_subtract"/>
          <func_argument_0 type="struct vec4f_decl *" lvalue="no" complexity="1" code="get_address">
            <operand_1 type="struct vec4f_decl" lvalue="yes" complexity="1" code="variable" name="tmp2"/>
          </func_argument_0>
          <func_argument_1 type="struct vec4f_decl *" lvalue="no" complexity="2" code="get_address">
            <operand_1 type="struct vec4f_decl" lvalue="yes" complexity="2" code="dereference">
              <operand_1 type="struct vertex4f_decl *" lvalue="yes" complexity="1" code="variable" name="j"/>
            </operand_1>
          </func_argument_1>
          <func_argument_2 type="struct vec4f_decl *" lvalue="no" complexity="2" code="get_address">
            <operand_1 type="struct vec4f_decl" lvalue="yes" complexity="2" code="dereference">
              <operand_1 type="struct vertex4f_decl *" lvalue="yes" complexity="1" code="variable" name="i"/>
            </operand_1>
          </func_argument_2>
        </expression>
        <expression type="float" lvalue="no" complexity="20" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="1" code="variable" name="scale"/>
          <operand_2 type="float" lvalue="no" complexity="19" code="div">
            <operand_1 type="float" lvalue="no" complexity="18" code="function call">
              <func_address type="float (struct vec4f_decl *, struct vec4f_decl *)" lvalue="yes" complexity="1" code="variable" name="vec4f_dot"/>
              <func_argument_0 type="struct vec4f_decl *" lvalue="no" complexity="1" code="get_address">
                <operand_1 type="struct vec4f_decl" lvalue="yes" complexity="1" code="variable" name="tmp"/>
              </func_argument_0>
              <func_argument_1 type="struct vec4f_decl *" lvalue="yes" complexity="1" code="variable" name="normal"/>
            </operand_1>
            <operand_2 type="float" lvalue="no" complexity="18" code="function call">
              <func_address type="float (struct vec4f_decl *, struct vec4f_decl *)" lvalue="yes" complexity="1" code="variable" name="vec4f_dot"/>
              <func_argument_0 type="struct vec4f_decl *" lvalue="no" complexity="1" code="get_address">
                <operand_1 type="struct vec4f_decl" lvalue="yes" complexity="1" code="variable" name="tmp2"/>
              </func_argument_0>
              <func_argument_1 type="struct vec4f_decl *" lvalue="yes" complexity="1" code="variable" name="normal"/>
            </operand_2>
          </operand_2>
        </expression>
        <expression type="void" lvalue="no" complexity="18" code="function call">
          <func_address type="void (struct vec4f_decl *, float)" lvalue="yes" complexity="1" code="variable" name="vec4f_mul"/>
          <func_argument_0 type="struct vec4f_decl *" lvalue="no" complexity="1" code="get_address">
            <operand_1 type="struct vec4f_decl" lvalue="yes" complexity="1" code="variable" name="tmp2"/>
          </func_argument_0>
          <func_argument_1 type="float" lvalue="yes" complexity="1" code="variable" name="scale"/>
        </expression>
        <expression type="void" lvalue="no" complexity="26" code="function call">
          <func_address type="void (struct vec4f_decl *, struct vec4f_decl *, struct vec4f_decl *)" lvalue="yes" complexity="1" code="variable" name="vec4f_add"/>
          <func_argument_0 type="struct vec4f_decl *" lvalue="no" complexity="7" code="get_address">
            <operand_1 type="struct vec4f_decl" lvalue="yes" complexity="7" code="dereference">
              <operand_1 type="struct vertex4f_decl *" lvalue="no" complexity="6" code="get_address">
                <operand_1 type="struct vertex4f_decl" lvalue="yes" complexity="6" code="dereference">
                  <operand_1 type="struct vertex4f_decl *" lvalue="no" complexity="5" code="add">
                    <operand_1 type="struct vertex4f_decl *" lvalue="no" complexity="2" code="get_address">
                      <operand_1 type="struct vertex4f_decl[8]" lvalue="yes" complexity="2" code="dereference">
                        <operand_1 type="struct polygon4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
                      </operand_1>
                    </operand_1>
                    <operand_2 type="int" lvalue="no" complexity="4" code="mul">
                      <operand_1 type="int" lvalue="yes" complexity="3" code="dereference">
                        <operand_1 type="struct polygon4f_decl *" lvalue="no" complexity="2" code="add">
                          <operand_1 type="struct polygon4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
                          <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="192"/>
                        </operand_1>
                      </operand_1>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="24"/>
                    </operand_2>
                  </operand_1>
                </operand_1>
              </operand_1>
            </operand_1>
          </func_argument_0>
          <func_argument_1 type="struct vec4f_decl *" lvalue="no" complexity="2" code="get_address">
            <operand_1 type="struct vec4f_decl" lvalue="yes" complexity="2" code="dereference">
              <operand_1 type="struct vertex4f_decl *" lvalue="yes" complexity="1" code="variable" name="i"/>
            </operand_1>
          </func_argument_1>
          <func_argument_2 type="struct vec4f_decl *" lvalue="no" complexity="1" code="get_address">
            <operand_1 type="struct vec4f_decl" lvalue="yes" complexity="1" code="variable" name="tmp2"/>
          </func_argument_2>
        </expression>
        <expression type="void" lvalue="no" complexity="23" code="function call">
          <func_address type="void (struct vec2f_decl *, struct vec2f_decl *, struct vec2f_decl *)" lvalue="yes" complexity="1" code="variable" name="vec2f_subtract"/>
          <func_argument_0 type="struct vec2f_decl *" lvalue="no" complexity="1" code="get_address">
            <operand_1 type="struct vec2f_decl" lvalue="yes" complexity="1" code="variable" name="texcoord_diff"/>
          </func_argument_0>
          <func_argument_1 type="struct vec2f_decl *" lvalue="no" complexity="3" code="get_address">
            <operand_1 type="struct vec2f_decl" lvalue="yes" complexity="3" code="dereference">
              <operand_1 type="struct vertex4f_decl *" lvalue="no" complexity="2" code="add">
                <operand_1 type="struct vertex4f_decl *" lvalue="yes" complexity="1" code="variable" name="j"/>
                <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="16"/>
              </operand_1>
            </operand_1>
          </func_argument_1>
          <func_argument_2 type="struct vec2f_decl *" lvalue="no" complexity="3" code="get_address">
            <operand_1 type="struct vec2f_decl" lvalue="yes" complexity="3" code="dereference">
              <operand_1 type="struct vertex4f_decl *" lvalue="no" complexity="2" code="add">
                <operand_1 type="struct vertex4f_decl *" lvalue="yes" complexity="1" code="variable" name="i"/>
                <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="16"/>
              </operand_1>
            </operand_1>
          </func_argument_2>
        </expression>
        <expression type="void" lvalue="no" complexity="18" code="function call">
          <func_address type="void (struct vec2f_decl *, float)" lvalue="yes" complexity="1" code="variable" name="vec2f_mul"/>
          <func_argument_0 type="struct vec2f_decl *" lvalue="no" complexity="1" code="get_address">
            <operand_1 type="struct vec2f_decl" lvalue="yes" complexity="1" code="variable" name="texcoord_diff"/>
          </func_argument_0>
          <func_argument_1 type="float" lvalue="yes" complexity="1" code="variable" name="scale"/>
        </expression>
        <expression type="void" lvalue="no" complexity="28" code="function call">
          <func_address type="void (struct vec2f_decl *, struct vec2f_decl *, struct vec2f_decl *)" lvalue="yes" complexity="1" code="variable" name="vec2f_add"/>
          <func_argument_0 type="struct vec2f_decl *" lvalue="no" complexity="8" code="get_address">
            <operand_1 type="struct vec2f_decl" lvalue="yes" complexity="8" code="dereference">
              <operand_1 type="struct vertex4f_decl *" lvalue="no" complexity="7" code="add">
                <operand_1 type="struct vertex4f_decl *" lvalue="no" complexity="6" code="get_address">
                  <operand_1 type="struct vertex4f_decl" lvalue="yes" complexity="6" code="dereference">
                    <operand_1 type="struct vertex4f_decl *" lvalue="no" complexity="5" code="add">
                      <operand_1 type="struct vertex4f_decl *" lvalue="no" complexity="2" code="get_address">
                        <operand_1 type="struct vertex4f_decl[8]" lvalue="yes" complexity="2" code="dereference">
                          <operand_1 type="struct polygon4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
                        </operand_1>
                      </operand_1>
                      <operand_2 type="int" lvalue="no" complexity="4" code="mul">
                        <operand_1 type="int" lvalue="yes" complexity="3" code="dereference">
                          <operand_1 type="struct polygon4f_decl *" lvalue="no" complexity="2" code="add">
                            <operand_1 type="struct polygon4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
                            <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="192"/>
                          </operand_1>
                        </operand_1>
                        <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="24"/>
                      </operand_2>
                    </operand_1>
                  </operand_1>
                </operand_1>
                <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="16"/>
              </operand_1>
            </operand_1>
          </func_argument_0>
          <func_argument_1 type="struct vec2f_decl *" lvalue="no" complexity="3" code="get_address">
            <operand_1 type="struct vec2f_decl" lvalue="yes" complexity="3" code="dereference">
              <operand_1 type="struct vertex4f_decl *" lvalue="no" complexity="2" code="add">
                <operand_1 type="struct vertex4f_decl *" lvalue="yes" complexity="1" code="variable" name="i"/>
                <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="16"/>
              </operand_1>
            </operand_1>
          </func_argument_1>
          <func_argument_2 type="struct vec2f_decl *" lvalue="no" complexity="1" code="get_address">
            <operand_1 type="struct vec2f_decl" lvalue="yes" complexity="1" code="variable" name="texcoord_diff"/>
          </func_argument_2>
        </expression>
        <expression type="int" lvalue="no" complexity="4" code="post_increment" step="1">
          <operand_1 type="int" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct polygon4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct polygon4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="192"/>
            </operand_1>
          </operand_1>
        </expression>
        <expression type="null" lvalue="no" complexity="0" code="label" name="label0004"/>
        <expression type="struct vertex4f_decl *" lvalue="no" complexity="2" code="post_increment" step="24">
          <operand_1 type="struct vertex4f_decl *" lvalue="yes" complexity="1" code="variable" name="i"/>
        </expression>
        <expression type="struct vertex4f_decl *" lvalue="no" complexity="2" code="post_increment" step="24">
          <operand_1 type="struct vertex4f_decl *" lvalue="yes" complexity="1" code="variable" name="j"/>
        </expression>
        <expression type="null" lvalue="no" complexity="0" code="jump to label" target="label0001"/>
        <expression type="null" lvalue="no" complexity="0" code="label" name="label0002"/>
        <expression type="struct vertex4f_decl" lvalue="no" complexity="8" code="assign">
          <operand_1 type="struct vertex4f_decl" lvalue="yes" complexity="7" code="dereference">
            <operand_1 type="struct vertex4f_decl *" lvalue="no" complexity="6" code="add">
              <operand_1 type="struct vertex4f_decl *" lvalue="no" complexity="2" code="get_address">
                <operand_1 type="struct vertex4f_decl[8]" lvalue="yes" complexity="2" code="dereference">
                  <operand_1 type="struct polygon4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
                </operand_1>
              </operand_1>
              <operand_2 type="int" lvalue="no" complexity="5" code="mul">
                <operand_1 type="int" lvalue="no" complexity="4" code="post_increment" step="1">
                  <operand_1 type="int" lvalue="yes" complexity="3" code="dereference">
                    <operand_1 type="struct polygon4f_decl *" lvalue="no" complexity="2" code="add">
                      <operand_1 type="struct polygon4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="192"/>
                    </operand_1>
                  </operand_1>
                </operand_1>
                <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="24"/>
              </operand_2>
            </operand_1>
          </operand_1>
          <operand_2 type="struct vertex4f_decl" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct vertex4f_decl *" lvalue="no" complexity="2" code="get_address">
              <operand_1 type="struct vertex4f_decl[8]" lvalue="yes" complexity="2" code="dereference">
                <operand_1 type="struct polygon4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              </operand_1>
            </operand_1>
          </operand_2>
        </expression>
        <expression type="null" lvalue="no" complexity="0" code="return" retvalue="void"/>
      </body>
    </function>
    <function>
      <name>_clip_poligon</name>
      <parameters>
        <parameter name="poly" type="struct polygon4f_decl *"/>
      </parameters>
      <local_variables>
        <variable name="tmp" type="struct polygon4f_decl"/>
      </local_variables>
      <body>
        <expression type="void" lvalue="no" complexity="20" code="function call">
          <func_address type="void (struct polygon4f_decl *, struct polygon4f_decl *, struct vec4f_decl *, struct vec4f_decl *)" lvalue="yes" complexity="1" code="variable" name="_clip_on_plain"/>
          <func_argument_0 type="struct polygon4f_decl *" lvalue="no" complexity="1" code="get_address">
            <operand_1 type="struct polygon4f_decl" lvalue="yes" complexity="1" code="variable" name="tmp"/>
          </func_argument_0>
          <func_argument_1 type="struct polygon4f_decl *" lvalue="yes" complexity="1" code="variable" name="poly"/>
          <func_argument_2 type="struct vec4f_decl *" lvalue="no" complexity="1" code="get_address">
            <operand_1 type="struct vec4f_decl" lvalue="yes" complexity="1" code="variable" name="_clip_z_far_base"/>
          </func_argument_2>
          <func_argument_3 type="struct vec4f_decl *" lvalue="no" complexity="1" code="get_address">
            <operand_1 type="struct vec4f_decl" lvalue="yes" complexity="1" code="variable" name="_clip_z_far_norm"/>
          </func_argument_3>
        </expression>
        <expression type="void" lvalue="no" complexity="20" code="function call">
          <func_address type="void (struct polygon4f_decl *, struct polygon4f_decl *, struct vec4f_decl *, struct vec4f_decl *)" lvalue="yes" complexity="1" code="variable" name="_clip_on_plain"/>
          <func_argument_0 type="struct polygon4f_decl *" lvalue="yes" complexity="1" code="variable" name="poly"/>
          <func_argument_1 type="struct polygon4f_decl *" lvalue="no" complexity="1" code="get_address">
            <operand_1 type="struct polygon4f_decl" lvalue="yes" complexity="1" code="variable" name="tmp"/>
          </func_argument_1>
          <func_argument_2 type="struct vec4f_decl *" lvalue="no" complexity="1" code="get_address">
            <operand_1 type="struct vec4f_decl" lvalue="yes" complexity="1" code="variable" name="_clip_z_near_base"/>
          </func_argument_2>
          <func_argument_3 type="struct vec4f_decl *" lvalue="no" complexity="1" code="get_address">
            <operand_1 type="struct vec4f_decl" lvalue="yes" complexity="1" code="variable" name="_clip_z_near_norm"/>
          </func_argument_3>
        </expression>
        <expression type="void" lvalue="no" complexity="20" code="function call">
          <func_address type="void (struct polygon4f_decl *, struct polygon4f_decl *, struct vec4f_decl *, struct vec4f_decl *)" lvalue="yes" complexity="1" code="variable" name="_clip_on_plain"/>
          <func_argument_0 type="struct polygon4f_decl *" lvalue="no" complexity="1" code="get_address">
            <operand_1 type="struct polygon4f_decl" lvalue="yes" complexity="1" code="variable" name="tmp"/>
          </func_argument_0>
          <func_argument_1 type="struct polygon4f_decl *" lvalue="yes" complexity="1" code="variable" name="poly"/>
          <func_argument_2 type="struct vec4f_decl *" lvalue="no" complexity="1" code="get_address">
            <operand_1 type="struct vec4f_decl" lvalue="yes" complexity="1" code="variable" name="_clip_plane_left_base"/>
          </func_argument_2>
          <func_argument_3 type="struct vec4f_decl *" lvalue="no" complexity="1" code="get_address">
            <operand_1 type="struct vec4f_decl" lvalue="yes" complexity="1" code="variable" name="_clip_plane_left_norm"/>
          </func_argument_3>
        </expression>
        <expression type="void" lvalue="no" complexity="20" code="function call">
          <func_address type="void (struct polygon4f_decl *, struct polygon4f_decl *, struct vec4f_decl *, struct vec4f_decl *)" lvalue="yes" complexity="1" code="variable" name="_clip_on_plain"/>
          <func_argument_0 type="struct polygon4f_decl *" lvalue="yes" complexity="1" code="variable" name="poly"/>
          <func_argument_1 type="struct polygon4f_decl *" lvalue="no" complexity="1" code="get_address">
            <operand_1 type="struct polygon4f_decl" lvalue="yes" complexity="1" code="variable" name="tmp"/>
          </func_argument_1>
          <func_argument_2 type="struct vec4f_decl *" lvalue="no" complexity="1" code="get_address">
            <operand_1 type="struct vec4f_decl" lvalue="yes" complexity="1" code="variable" name="_clip_plane_right_base"/>
          </func_argument_2>
          <func_argument_3 type="struct vec4f_decl *" lvalue="no" complexity="1" code="get_address">
            <operand_1 type="struct vec4f_decl" lvalue="yes" complexity="1" code="variable" name="_clip_plane_right_norm"/>
          </func_argument_3>
        </expression>
        <expression type="void" lvalue="no" complexity="20" code="function call">
          <func_address type="void (struct polygon4f_decl *, struct polygon4f_decl *, struct vec4f_decl *, struct vec4f_decl *)" lvalue="yes" complexity="1" code="variable" name="_clip_on_plain"/>
          <func_argument_0 type="struct polygon4f_decl *" lvalue="no" complexity="1" code="get_address">
            <operand_1 type="struct polygon4f_decl" lvalue="yes" complexity="1" code="variable" name="tmp"/>
          </func_argument_0>
          <func_argument_1 type="struct polygon4f_decl *" lvalue="yes" complexity="1" code="variable" name="poly"/>
          <func_argument_2 type="struct vec4f_decl *" lvalue="no" complexity="1" code="get_address">
            <operand_1 type="struct vec4f_decl" lvalue="yes" complexity="1" code="variable" name="_clip_plane_top_base"/>
          </func_argument_2>
          <func_argument_3 type="struct vec4f_decl *" lvalue="no" complexity="1" code="get_address">
            <operand_1 type="struct vec4f_decl" lvalue="yes" complexity="1" code="variable" name="_clip_plane_top_norm"/>
          </func_argument_3>
        </expression>
        <expression type="void" lvalue="no" complexity="20" code="function call">
          <func_address type="void (struct polygon4f_decl *, struct polygon4f_decl *, struct vec4f_decl *, struct vec4f_decl *)" lvalue="yes" complexity="1" code="variable" name="_clip_on_plain"/>
          <func_argument_0 type="struct polygon4f_decl *" lvalue="yes" complexity="1" code="variable" name="poly"/>
          <func_argument_1 type="struct polygon4f_decl *" lvalue="no" complexity="1" code="get_address">
            <operand_1 type="struct polygon4f_decl" lvalue="yes" complexity="1" code="variable" name="tmp"/>
          </func_argument_1>
          <func_argument_2 type="struct vec4f_decl *" lvalue="no" complexity="1" code="get_address">
            <operand_1 type="struct vec4f_decl" lvalue="yes" complexity="1" code="variable" name="_clip_plane_bottom_base"/>
          </func_argument_2>
          <func_argument_3 type="struct vec4f_decl *" lvalue="no" complexity="1" code="get_address">
            <operand_1 type="struct vec4f_decl" lvalue="yes" complexity="1" code="variable" name="_clip_plane_bottom_norm"/>
          </func_argument_3>
        </expression>
        <expression type="null" lvalue="no" complexity="0" code="return">
          <retvalue type="int" lvalue="no" complexity="4" code="greater_then">
            <operand_1 type="int" lvalue="yes" complexity="3" code="dereference">
              <operand_1 type="struct polygon4f_decl *" lvalue="no" complexity="2" code="add">
                <operand_1 type="struct polygon4f_decl *" lvalue="yes" complexity="1" code="variable" name="poly"/>
                <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="192"/>
              </operand_1>
            </operand_1>
            <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="1"/>
          </retvalue>
        </expression>
      </body>
    </function>
    <function>
      <name>_transform_to_screen_space</name>
      <parameters>
        <parameter name="dst" type="struct vec2i_decl *"/>
        <parameter name="vec" type="struct vec4f_decl *"/>
      </parameters>
      <local_variables>
        <variable name="viewport_coord" type="struct vec4f_decl"/>
        <variable name="rsp" type="float"/>
      </local_variables>
      <body>
        <expression type="void" lvalue="no" complexity="19" code="function call">
          <func_address type="void (struct vec4f_decl *, struct vec4f_decl *, struct matrix4f_decl *)" lvalue="yes" complexity="1" code="variable" name="matrix4f_transform"/>
          <func_argument_0 type="struct vec4f_decl *" lvalue="no" complexity="1" code="get_address">
            <operand_1 type="struct vec4f_decl" lvalue="yes" complexity="1" code="variable" name="viewport_coord"/>
          </func_argument_0>
          <func_argument_1 type="struct vec4f_decl *" lvalue="yes" complexity="1" code="variable" name="vec"/>
          <func_argument_2 type="struct matrix4f_decl *" lvalue="no" complexity="1" code="get_address">
            <operand_1 type="struct matrix4f_decl" lvalue="yes" complexity="1" code="variable" name="_viewport_matrix"/>
          </func_argument_2>
        </expression>
        <expression type="float" lvalue="no" complexity="5" code="assign">
          <operand_1 type="float" lvalue="yes" complexity="1" code="variable" name="rsp"/>
          <operand_2 type="float" lvalue="no" complexity="4" code="div">
            <operand_1 type="float" lvalue="no" complexity="1" code="float literal" value="1.000000"/>
            <operand_2 type="float" lvalue="yes" complexity="3" code="dereference">
              <operand_1 type="struct vec4f_decl *" lvalue="no" complexity="2" code="add">
                <operand_1 type="struct vec4f_decl *" lvalue="no" complexity="1" code="get_address">
                  <operand_1 type="struct vec4f_decl" lvalue="yes" complexity="1" code="variable" name="viewport_coord"/>
                </operand_1>
                <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="12"/>
              </operand_1>
            </operand_2>
          </operand_2>
        </expression>
        <expression type="int" lvalue="no" complexity="5" code="assign">
          <operand_1 type="int" lvalue="yes" complexity="2" code="dereference">
            <operand_1 type="struct vec2i_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
          </operand_1>
          <operand_2 type="int" lvalue="no" complexity="4" code="convert_float2int">
            <operand_1 type="float" lvalue="no" complexity="3" code="mul">
              <operand_1 type="float" lvalue="yes" complexity="2" code="dereference">
                <operand_1 type="struct vec4f_decl *" lvalue="no" complexity="1" code="get_address">
                  <operand_1 type="struct vec4f_decl" lvalue="yes" complexity="1" code="variable" name="viewport_coord"/>
                </operand_1>
              </operand_1>
              <operand_2 type="float" lvalue="yes" complexity="1" code="variable" name="rsp"/>
            </operand_1>
          </operand_2>
        </expression>
        <expression type="int" lvalue="no" complexity="6" code="assign">
          <operand_1 type="int" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct vec2i_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
            </operand_1>
          </operand_1>
          <operand_2 type="int" lvalue="no" complexity="5" code="convert_float2int">
            <operand_1 type="float" lvalue="no" complexity="4" code="mul">
              <operand_1 type="float" lvalue="yes" complexity="3" code="dereference">
                <operand_1 type="struct vec4f_decl *" lvalue="no" complexity="2" code="add">
                  <operand_1 type="struct vec4f_decl *" lvalue="no" complexity="1" code="get_address">
                    <operand_1 type="struct vec4f_decl" lvalue="yes" complexity="1" code="variable" name="viewport_coord"/>
                  </operand_1>
                  <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                </operand_1>
              </operand_1>
              <operand_2 type="float" lvalue="yes" complexity="1" code="variable" name="rsp"/>
            </operand_1>
          </operand_2>
        </expression>
        <expression type="null" lvalue="no" complexity="0" code="conditional jump" target="label0000" invert_condition="yes">
          <condition type="int" lvalue="no" complexity="6" code="logical_or_in_jump">
            <operand_1 type="int" lvalue="no" complexity="5" code="logical_or_in_jump">
              <operand_1 type="int" lvalue="no" complexity="4" code="logical_or_in_jump">
                <operand_1 type="int" lvalue="no" complexity="3" code="less_then">
                  <operand_1 type="int" lvalue="yes" complexity="2" code="dereference">
                    <operand_1 type="struct vec2i_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
                  </operand_1>
                  <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="0"/>
                </operand_1>
                <operand_2 type="int" lvalue="no" complexity="3" code="greater_equal">
                  <operand_1 type="int" lvalue="yes" complexity="2" code="dereference">
                    <operand_1 type="struct vec2i_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
                  </operand_1>
                  <operand_2 type="int" lvalue="yes" complexity="1" code="variable" name="_width"/>
                </operand_2>
              </operand_1>
              <operand_2 type="int" lvalue="no" complexity="4" code="less_then">
                <operand_1 type="int" lvalue="yes" complexity="3" code="dereference">
                  <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="add">
                    <operand_1 type="struct vec2i_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
                    <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                  </operand_1>
                </operand_1>
                <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="0"/>
              </operand_2>
            </operand_1>
            <operand_2 type="int" lvalue="no" complexity="4" code="greater_equal">
              <operand_1 type="int" lvalue="yes" complexity="3" code="dereference">
                <operand_1 type="struct vec2i_decl *" lvalue="no" complexity="2" code="add">
                  <operand_1 type="struct vec2i_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
                  <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                </operand_1>
              </operand_1>
              <operand_2 type="int" lvalue="yes" complexity="1" code="variable" name="_height"/>
            </operand_2>
          </condition>
        </expression>
        <expression type="int" lvalue="no" complexity="3" code="assign">
          <operand_1 type="int" lvalue="yes" complexity="2" code="dereference">
            <operand_1 type="int *" lvalue="no" complexity="1" code="integer literal" value="0"/>
          </operand_1>
          <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="0"/>
        </expression>
        <expression type="null" lvalue="no" complexity="0" code="label" name="label0000"/>
        <expression type="null" lvalue="no" complexity="0" code="return" retvalue="void"/>
      </body>
    </function>
    <function>
      <name>_rasterize_polygon_4f</name>
      <parameters>
        <parameter name="poly" type="struct polygon4f_decl *"/>
      </parameters>
      <local_variables>
        <variable name="screen_poly" type="struct polygon2i_decl"/>
        <variable name="i" type="int"/>
      </local_variables>
      <body>
        <expression type="null" lvalue="no" complexity="0" code="conditional jump" target="label0000" invert_condition="yes">
          <condition type="int" lvalue="no" complexity="18" code="not">
            <operand_1 type="int" lvalue="no" complexity="17" code="function call">
              <func_address type="int (struct polygon4f_decl *)" lvalue="yes" complexity="1" code="variable" name="_clip_poligon"/>
              <func_argument_0 type="struct polygon4f_decl *" lvalue="yes" complexity="1" code="variable" name="poly"/>
            </operand_1>
          </condition>
        </expression>
        <expression type="null" lvalue="no" complexity="0" code="return" retvalue="void"/>
        <expression type="null" lvalue="no" complexity="0" code="label" name="label0000"/>
        <expression type="null" lvalue="no" complexity="0" code="conditional jump" target="label0001" invert_condition="yes">
          <condition type="int" lvalue="no" complexity="4" code="greater_then">
            <operand_1 type="unsigned int" lvalue="yes" complexity="3" code="dereference">
              <operand_1 type="struct polygon4f_decl *" lvalue="no" complexity="2" code="add">
                <operand_1 type="struct polygon4f_decl *" lvalue="yes" complexity="1" code="variable" name="poly"/>
                <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="192"/>
              </operand_1>
            </operand_1>
            <operand_2 type="unsigned int" lvalue="no" complexity="1" code="integer literal" value="8"/>
          </condition>
        </expression>
        <expression type="int" lvalue="no" complexity="3" code="assign">
          <operand_1 type="int" lvalue="yes" complexity="2" code="dereference">
            <operand_1 type="int *" lvalue="no" complexity="1" code="integer literal" value="0"/>
          </operand_1>
          <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="0"/>
        </expression>
        <expression type="null" lvalue="no" complexity="0" code="label" name="label0001"/>
        <expression type="int" lvalue="no" complexity="2" code="assign">
          <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="i"/>
          <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="0"/>
        </expression>
        <expression type="null" lvalue="no" complexity="0" code="label" name="label0002"/>
        <expression type="null" lvalue="no" complexity="0" code="label" name="label0003"/>
        <expression type="null" lvalue="no" complexity="0" code="conditional jump" target="label0004" invert_condition="yes">
          <condition type="int" lvalue="no" complexity="4" code="less_then">
            <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="i"/>
            <operand_2 type="int" lvalue="yes" complexity="3" code="dereference">
              <operand_1 type="struct polygon4f_decl *" lvalue="no" complexity="2" code="add">
                <operand_1 type="struct polygon4f_decl *" lvalue="yes" complexity="1" code="variable" name="poly"/>
                <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="192"/>
              </operand_1>
            </operand_2>
          </condition>
        </expression>
        <expression type="void" lvalue="no" complexity="26" code="function call">
          <func_address type="void (struct vec2i_decl *, struct vec4f_decl *)" lvalue="yes" complexity="1" code="variable" name="_transform_to_screen_space"/>
          <func_argument_0 type="struct vec2i_decl *" lvalue="no" complexity="5" code="get_address">
            <operand_1 type="struct vec2i_decl" lvalue="yes" complexity="5" code="dereference">
              <operand_1 type="struct vertex2i_decl *" lvalue="no" complexity="4" code="get_address">
                <operand_1 type="struct vertex2i_decl" lvalue="yes" complexity="4" code="dereference">
                  <operand_1 type="struct vertex2i_decl *" lvalue="no" complexity="3" code="add">
                    <operand_1 type="struct vertex2i_decl *" lvalue="no" complexity="2" code="get_address">
                      <operand_1 type="struct vertex2i_decl[8]" lvalue="yes" complexity="2" code="dereference">
                        <operand_1 type="struct polygon2i_decl *" lvalue="no" complexity="1" code="get_address">
                          <operand_1 type="struct polygon2i_decl" lvalue="yes" complexity="1" code="variable" name="screen_poly"/>
                        </operand_1>
                      </operand_1>
                    </operand_1>
                    <operand_2 type="int" lvalue="no" complexity="2" code="shl">
                      <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="i"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                    </operand_2>
                  </operand_1>
                </operand_1>
              </operand_1>
            </operand_1>
          </func_argument_0>
          <func_argument_1 type="struct vec4f_decl *" lvalue="no" complexity="5" code="get_address">
            <operand_1 type="struct vec4f_decl" lvalue="yes" complexity="5" code="dereference">
              <operand_1 type="struct vertex4f_decl *" lvalue="no" complexity="4" code="get_address">
                <operand_1 type="struct vertex4f_decl" lvalue="yes" complexity="4" code="dereference">
                  <operand_1 type="struct vertex4f_decl *" lvalue="no" complexity="3" code="add">
                    <operand_1 type="struct vertex4f_decl *" lvalue="no" complexity="2" code="get_address">
                      <operand_1 type="struct vertex4f_decl[8]" lvalue="yes" complexity="2" code="dereference">
                        <operand_1 type="struct polygon4f_decl *" lvalue="yes" complexity="1" code="variable" name="poly"/>
                      </operand_1>
                    </operand_1>
                    <operand_2 type="int" lvalue="no" complexity="2" code="mul">
                      <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="i"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="24"/>
                    </operand_2>
                  </operand_1>
                </operand_1>
              </operand_1>
            </operand_1>
          </func_argument_1>
        </expression>
        <expression type="struct vec2f_decl" lvalue="no" complexity="7" code="assign">
          <operand_1 type="struct vec2f_decl" lvalue="yes" complexity="6" code="dereference">
            <operand_1 type="struct vertex2i_decl *" lvalue="no" complexity="5" code="add">
              <operand_1 type="struct vertex2i_decl *" lvalue="no" complexity="4" code="get_address">
                <operand_1 type="struct vertex2i_decl" lvalue="yes" complexity="4" code="dereference">
                  <operand_1 type="struct vertex2i_decl *" lvalue="no" complexity="3" code="add">
                    <operand_1 type="struct vertex2i_decl *" lvalue="no" complexity="2" code="get_address">
                      <operand_1 type="struct vertex2i_decl[8]" lvalue="yes" complexity="2" code="dereference">
                        <operand_1 type="struct polygon2i_decl *" lvalue="no" complexity="1" code="get_address">
                          <operand_1 type="struct polygon2i_decl" lvalue="yes" complexity="1" code="variable" name="screen_poly"/>
                        </operand_1>
                      </operand_1>
                    </operand_1>
                    <operand_2 type="int" lvalue="no" complexity="2" code="shl">
                      <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="i"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                    </operand_2>
                  </operand_1>
                </operand_1>
              </operand_1>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="8"/>
            </operand_1>
          </operand_1>
          <operand_2 type="struct vec2f_decl" lvalue="yes" complexity="6" code="dereference">
            <operand_1 type="struct vertex4f_decl *" lvalue="no" complexity="5" code="add">
              <operand_1 type="struct vertex4f_decl *" lvalue="no" complexity="4" code="get_address">
                <operand_1 type="struct vertex4f_decl" lvalue="yes" complexity="4" code="dereference">
                  <operand_1 type="struct vertex4f_decl *" lvalue="no" complexity="3" code="add">
                    <operand_1 type="struct vertex4f_decl *" lvalue="no" complexity="2" code="get_address">
                      <operand_1 type="struct vertex4f_decl[8]" lvalue="yes" complexity="2" code="dereference">
                        <operand_1 type="struct polygon4f_decl *" lvalue="yes" complexity="1" code="variable" name="poly"/>
                      </operand_1>
                    </operand_1>
                    <operand_2 type="int" lvalue="no" complexity="2" code="mul">
                      <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="i"/>
                      <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="24"/>
                    </operand_2>
                  </operand_1>
                </operand_1>
              </operand_1>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="16"/>
            </operand_1>
          </operand_2>
        </expression>
        <expression type="int" lvalue="no" complexity="2" code="post_increment" step="1">
          <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="i"/>
        </expression>
        <expression type="null" lvalue="no" complexity="0" code="jump to label" target="label0003"/>
        <expression type="null" lvalue="no" complexity="0" code="label" name="label0004"/>
        <expression type="int" lvalue="no" complexity="2" code="assign">
          <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="i"/>
          <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="2"/>
        </expression>
        <expression type="null" lvalue="no" complexity="0" code="label" name="label0005"/>
        <expression type="null" lvalue="no" complexity="0" code="label" name="label0006"/>
        <expression type="null" lvalue="no" complexity="0" code="conditional jump" target="label0007" invert_condition="yes">
          <condition type="int" lvalue="no" complexity="5" code="less_then">
            <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="i"/>
            <operand_2 type="int" lvalue="no" complexity="4" code="sub">
              <operand_1 type="int" lvalue="yes" complexity="3" code="dereference">
                <operand_1 type="struct polygon4f_decl *" lvalue="no" complexity="2" code="add">
                  <operand_1 type="struct polygon4f_decl *" lvalue="yes" complexity="1" code="variable" name="poly"/>
                  <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="192"/>
                </operand_1>
              </operand_1>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="1"/>
            </operand_2>
          </condition>
        </expression>
        <expression type="void" lvalue="no" complexity="28" code="function call">
          <func_address type="void (struct vertex2i_decl *, struct vertex2i_decl *, struct vertex2i_decl *)" lvalue="yes" complexity="1" code="variable" name="_rasterize_triangle_2i"/>
          <func_argument_0 type="struct vertex2i_decl *" lvalue="no" complexity="3" code="get_address">
            <operand_1 type="struct vertex2i_decl" lvalue="yes" complexity="3" code="dereference">
              <operand_1 type="struct vertex2i_decl *" lvalue="no" complexity="2" code="get_address">
                <operand_1 type="struct vertex2i_decl[8]" lvalue="yes" complexity="2" code="dereference">
                  <operand_1 type="struct polygon2i_decl *" lvalue="no" complexity="1" code="get_address">
                    <operand_1 type="struct polygon2i_decl" lvalue="yes" complexity="1" code="variable" name="screen_poly"/>
                  </operand_1>
                </operand_1>
              </operand_1>
            </operand_1>
          </func_argument_0>
          <func_argument_1 type="struct vertex2i_decl *" lvalue="no" complexity="5" code="get_address">
            <operand_1 type="struct vertex2i_decl" lvalue="yes" complexity="5" code="dereference">
              <operand_1 type="struct vertex2i_decl *" lvalue="no" complexity="4" code="add">
                <operand_1 type="struct vertex2i_decl *" lvalue="no" complexity="2" code="get_address">
                  <operand_1 type="struct vertex2i_decl[8]" lvalue="yes" complexity="2" code="dereference">
                    <operand_1 type="struct polygon2i_decl *" lvalue="no" complexity="1" code="get_address">
                      <operand_1 type="struct polygon2i_decl" lvalue="yes" complexity="1" code="variable" name="screen_poly"/>
                    </operand_1>
                  </operand_1>
                </operand_1>
                <operand_2 type="int" lvalue="no" complexity="3" code="shl">
                  <operand_1 type="int" lvalue="no" complexity="2" code="sub">
                    <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="i"/>
                    <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="1"/>
                  </operand_1>
                  <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                </operand_2>
              </operand_1>
            </operand_1>
          </func_argument_1>
          <func_argument_2 type="struct vertex2i_decl *" lvalue="no" complexity="4" code="get_address">
            <operand_1 type="struct vertex2i_decl" lvalue="yes" complexity="4" code="dereference">
              <operand_1 type="struct vertex2i_decl *" lvalue="no" complexity="3" code="add">
                <operand_1 type="struct vertex2i_decl *" lvalue="no" complexity="2" code="get_address">
                  <operand_1 type="struct vertex2i_decl[8]" lvalue="yes" complexity="2" code="dereference">
                    <operand_1 type="struct polygon2i_decl *" lvalue="no" complexity="1" code="get_address">
                      <operand_1 type="struct polygon2i_decl" lvalue="yes" complexity="1" code="variable" name="screen_poly"/>
                    </operand_1>
                  </operand_1>
                </operand_1>
                <operand_2 type="int" lvalue="no" complexity="2" code="shl">
                  <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="i"/>
                  <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
                </operand_2>
              </operand_1>
            </operand_1>
          </func_argument_2>
        </expression>
        <expression type="int" lvalue="no" complexity="2" code="post_increment" step="1">
          <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="i"/>
        </expression>
        <expression type="null" lvalue="no" complexity="0" code="jump to label" target="label0006"/>
        <expression type="null" lvalue="no" complexity="0" code="label" name="label0007"/>
        <expression type="null" lvalue="no" complexity="0" code="return" retvalue="void"/>
      </body>
    </function>
    <function>
      <name>_transform_to_projection_space</name>
      <parameters>
        <parameter name="dst" type="struct vec4f_decl *"/>
        <parameter name="src" type="struct vec3f_decl *"/>
      </parameters>
      <local_variables>
        <variable name="vertex" type="struct vec4f_decl"/>
      </local_variables>
      <body>
        <expression type="void" lvalue="no" complexity="26" code="function call">
          <func_address type="void (struct vec4f_decl *, float, float, float, float)" lvalue="yes" complexity="1" code="variable" name="vec4f_assign"/>
          <func_argument_0 type="struct vec4f_decl *" lvalue="no" complexity="1" code="get_address">
            <operand_1 type="struct vec4f_decl" lvalue="yes" complexity="1" code="variable" name="vertex"/>
          </func_argument_0>
          <func_argument_1 type="float" lvalue="yes" complexity="2" code="dereference">
            <operand_1 type="struct vec3f_decl *" lvalue="yes" complexity="1" code="variable" name="src"/>
          </func_argument_1>
          <func_argument_2 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct vec3f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct vec3f_decl *" lvalue="yes" complexity="1" code="variable" name="src"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
            </operand_1>
          </func_argument_2>
          <func_argument_3 type="float" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct vec3f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct vec3f_decl *" lvalue="yes" complexity="1" code="variable" name="src"/>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="8"/>
            </operand_1>
          </func_argument_3>
          <func_argument_4 type="float" lvalue="no" complexity="1" code="float literal" value="1.000000"/>
        </expression>
        <expression type="void" lvalue="no" complexity="19" code="function call">
          <func_address type="void (struct vec4f_decl *, struct vec4f_decl *, struct matrix4f_decl *)" lvalue="yes" complexity="1" code="variable" name="matrix4f_transform"/>
          <func_argument_0 type="struct vec4f_decl *" lvalue="yes" complexity="1" code="variable" name="dst"/>
          <func_argument_1 type="struct vec4f_decl *" lvalue="no" complexity="1" code="get_address">
            <operand_1 type="struct vec4f_decl" lvalue="yes" complexity="1" code="variable" name="vertex"/>
          </func_argument_1>
          <func_argument_2 type="struct matrix4f_decl *" lvalue="no" complexity="1" code="get_address">
            <operand_1 type="struct matrix4f_decl" lvalue="yes" complexity="1" code="variable" name="_mvproj_matrix"/>
          </func_argument_2>
        </expression>
        <expression type="null" lvalue="no" complexity="0" code="return" retvalue="void"/>
      </body>
    </function>
    <function>
      <name>rasterizer_triangle3f</name>
      <parameters>
        <parameter name="a" type="struct vec3f_decl *"/>
        <parameter name="b" type="struct vec3f_decl *"/>
        <parameter name="c" type="struct vec3f_decl *"/>
        <parameter name="a_tex" type="struct vec2f_decl *"/>
        <parameter name="b_tex" type="struct vec2f_decl *"/>
        <parameter name="c_tex" type="struct vec2f_decl *"/>
      </parameters>
      <local_variables>
        <variable name="poly" type="struct polygon4f_decl"/>
      </local_variables>
      <body>
        <expression type="void" lvalue="no" complexity="21" code="function call">
          <func_address type="void (struct vec4f_decl *, struct vec3f_decl *)" lvalue="yes" complexity="1" code="variable" name="_transform_to_projection_space"/>
          <func_argument_0 type="struct vec4f_decl *" lvalue="no" complexity="4" code="get_address">
            <operand_1 type="struct vec4f_decl" lvalue="yes" complexity="4" code="dereference">
              <operand_1 type="struct vertex4f_decl *" lvalue="no" complexity="3" code="get_address">
                <operand_1 type="struct vertex4f_decl" lvalue="yes" complexity="3" code="dereference">
                  <operand_1 type="struct vertex4f_decl *" lvalue="no" complexity="2" code="get_address">
                    <operand_1 type="struct vertex4f_decl[8]" lvalue="yes" complexity="2" code="dereference">
                      <operand_1 type="struct polygon4f_decl *" lvalue="no" complexity="1" code="get_address">
                        <operand_1 type="struct polygon4f_decl" lvalue="yes" complexity="1" code="variable" name="poly"/>
                      </operand_1>
                    </operand_1>
                  </operand_1>
                </operand_1>
              </operand_1>
            </operand_1>
          </func_argument_0>
          <func_argument_1 type="struct vec3f_decl *" lvalue="yes" complexity="1" code="variable" name="a"/>
        </expression>
        <expression type="struct vec2f_decl" lvalue="no" complexity="6" code="assign">
          <operand_1 type="struct vec2f_decl" lvalue="yes" complexity="5" code="dereference">
            <operand_1 type="struct vertex4f_decl *" lvalue="no" complexity="4" code="add">
              <operand_1 type="struct vertex4f_decl *" lvalue="no" complexity="3" code="get_address">
                <operand_1 type="struct vertex4f_decl" lvalue="yes" complexity="3" code="dereference">
                  <operand_1 type="struct vertex4f_decl *" lvalue="no" complexity="2" code="get_address">
                    <operand_1 type="struct vertex4f_decl[8]" lvalue="yes" complexity="2" code="dereference">
                      <operand_1 type="struct polygon4f_decl *" lvalue="no" complexity="1" code="get_address">
                        <operand_1 type="struct polygon4f_decl" lvalue="yes" complexity="1" code="variable" name="poly"/>
                      </operand_1>
                    </operand_1>
                  </operand_1>
                </operand_1>
              </operand_1>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="16"/>
            </operand_1>
          </operand_1>
          <operand_2 type="struct vec2f_decl" lvalue="yes" complexity="2" code="dereference">
            <operand_1 type="struct vec2f_decl *" lvalue="yes" complexity="1" code="variable" name="a_tex"/>
          </operand_2>
        </expression>
        <expression type="void" lvalue="no" complexity="22" code="function call">
          <func_address type="void (struct vec4f_decl *, struct vec3f_decl *)" lvalue="yes" complexity="1" code="variable" name="_transform_to_projection_space"/>
          <func_argument_0 type="struct vec4f_decl *" lvalue="no" complexity="5" code="get_address">
            <operand_1 type="struct vec4f_decl" lvalue="yes" complexity="5" code="dereference">
              <operand_1 type="struct vertex4f_decl *" lvalue="no" complexity="4" code="get_address">
                <operand_1 type="struct vertex4f_decl" lvalue="yes" complexity="4" code="dereference">
                  <operand_1 type="struct vertex4f_decl *" lvalue="no" complexity="3" code="add">
                    <operand_1 type="struct vertex4f_decl *" lvalue="no" complexity="2" code="get_address">
                      <operand_1 type="struct vertex4f_decl[8]" lvalue="yes" complexity="2" code="dereference">
                        <operand_1 type="struct polygon4f_decl *" lvalue="no" complexity="1" code="get_address">
                          <operand_1 type="struct polygon4f_decl" lvalue="yes" complexity="1" code="variable" name="poly"/>
                        </operand_1>
                      </operand_1>
                    </operand_1>
                    <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="24"/>
                  </operand_1>
                </operand_1>
              </operand_1>
            </operand_1>
          </func_argument_0>
          <func_argument_1 type="struct vec3f_decl *" lvalue="yes" complexity="1" code="variable" name="b"/>
        </expression>
        <expression type="struct vec2f_decl" lvalue="no" complexity="7" code="assign">
          <operand_1 type="struct vec2f_decl" lvalue="yes" complexity="6" code="dereference">
            <operand_1 type="struct vertex4f_decl *" lvalue="no" complexity="5" code="add">
              <operand_1 type="struct vertex4f_decl *" lvalue="no" complexity="4" code="get_address">
                <operand_1 type="struct vertex4f_decl" lvalue="yes" complexity="4" code="dereference">
                  <operand_1 type="struct vertex4f_decl *" lvalue="no" complexity="3" code="add">
                    <operand_1 type="struct vertex4f_decl *" lvalue="no" complexity="2" code="get_address">
                      <operand_1 type="struct vertex4f_decl[8]" lvalue="yes" complexity="2" code="dereference">
                        <operand_1 type="struct polygon4f_decl *" lvalue="no" complexity="1" code="get_address">
                          <operand_1 type="struct polygon4f_decl" lvalue="yes" complexity="1" code="variable" name="poly"/>
                        </operand_1>
                      </operand_1>
                    </operand_1>
                    <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="24"/>
                  </operand_1>
                </operand_1>
              </operand_1>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="16"/>
            </operand_1>
          </operand_1>
          <operand_2 type="struct vec2f_decl" lvalue="yes" complexity="2" code="dereference">
            <operand_1 type="struct vec2f_decl *" lvalue="yes" complexity="1" code="variable" name="b_tex"/>
          </operand_2>
        </expression>
        <expression type="void" lvalue="no" complexity="22" code="function call">
          <func_address type="void (struct vec4f_decl *, struct vec3f_decl *)" lvalue="yes" complexity="1" code="variable" name="_transform_to_projection_space"/>
          <func_argument_0 type="struct vec4f_decl *" lvalue="no" complexity="5" code="get_address">
            <operand_1 type="struct vec4f_decl" lvalue="yes" complexity="5" code="dereference">
              <operand_1 type="struct vertex4f_decl *" lvalue="no" complexity="4" code="get_address">
                <operand_1 type="struct vertex4f_decl" lvalue="yes" complexity="4" code="dereference">
                  <operand_1 type="struct vertex4f_decl *" lvalue="no" complexity="3" code="add">
                    <operand_1 type="struct vertex4f_decl *" lvalue="no" complexity="2" code="get_address">
                      <operand_1 type="struct vertex4f_decl[8]" lvalue="yes" complexity="2" code="dereference">
                        <operand_1 type="struct polygon4f_decl *" lvalue="no" complexity="1" code="get_address">
                          <operand_1 type="struct polygon4f_decl" lvalue="yes" complexity="1" code="variable" name="poly"/>
                        </operand_1>
                      </operand_1>
                    </operand_1>
                    <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="48"/>
                  </operand_1>
                </operand_1>
              </operand_1>
            </operand_1>
          </func_argument_0>
          <func_argument_1 type="struct vec3f_decl *" lvalue="yes" complexity="1" code="variable" name="c"/>
        </expression>
        <expression type="struct vec2f_decl" lvalue="no" complexity="7" code="assign">
          <operand_1 type="struct vec2f_decl" lvalue="yes" complexity="6" code="dereference">
            <operand_1 type="struct vertex4f_decl *" lvalue="no" complexity="5" code="add">
              <operand_1 type="struct vertex4f_decl *" lvalue="no" complexity="4" code="get_address">
                <operand_1 type="struct vertex4f_decl" lvalue="yes" complexity="4" code="dereference">
                  <operand_1 type="struct vertex4f_decl *" lvalue="no" complexity="3" code="add">
                    <operand_1 type="struct vertex4f_decl *" lvalue="no" complexity="2" code="get_address">
                      <operand_1 type="struct vertex4f_decl[8]" lvalue="yes" complexity="2" code="dereference">
                        <operand_1 type="struct polygon4f_decl *" lvalue="no" complexity="1" code="get_address">
                          <operand_1 type="struct polygon4f_decl" lvalue="yes" complexity="1" code="variable" name="poly"/>
                        </operand_1>
                      </operand_1>
                    </operand_1>
                    <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="48"/>
                  </operand_1>
                </operand_1>
              </operand_1>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="16"/>
            </operand_1>
          </operand_1>
          <operand_2 type="struct vec2f_decl" lvalue="yes" complexity="2" code="dereference">
            <operand_1 type="struct vec2f_decl *" lvalue="yes" complexity="1" code="variable" name="c_tex"/>
          </operand_2>
        </expression>
        <expression type="struct vertex4f_decl" lvalue="no" complexity="5" code="assign">
          <operand_1 type="struct vertex4f_decl" lvalue="yes" complexity="4" code="dereference">
            <operand_1 type="struct vertex4f_decl *" lvalue="no" complexity="3" code="add">
              <operand_1 type="struct vertex4f_decl *" lvalue="no" complexity="2" code="get_address">
                <operand_1 type="struct vertex4f_decl[8]" lvalue="yes" complexity="2" code="dereference">
                  <operand_1 type="struct polygon4f_decl *" lvalue="no" complexity="1" code="get_address">
                    <operand_1 type="struct polygon4f_decl" lvalue="yes" complexity="1" code="variable" name="poly"/>
                  </operand_1>
                </operand_1>
              </operand_1>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="72"/>
            </operand_1>
          </operand_1>
          <operand_2 type="struct vertex4f_decl" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct vertex4f_decl *" lvalue="no" complexity="2" code="get_address">
              <operand_1 type="struct vertex4f_decl[8]" lvalue="yes" complexity="2" code="dereference">
                <operand_1 type="struct polygon4f_decl *" lvalue="no" complexity="1" code="get_address">
                  <operand_1 type="struct polygon4f_decl" lvalue="yes" complexity="1" code="variable" name="poly"/>
                </operand_1>
              </operand_1>
            </operand_1>
          </operand_2>
        </expression>
        <expression type="int" lvalue="no" complexity="4" code="assign">
          <operand_1 type="int" lvalue="yes" complexity="3" code="dereference">
            <operand_1 type="struct polygon4f_decl *" lvalue="no" complexity="2" code="add">
              <operand_1 type="struct polygon4f_decl *" lvalue="no" complexity="1" code="get_address">
                <operand_1 type="struct polygon4f_decl" lvalue="yes" complexity="1" code="variable" name="poly"/>
              </operand_1>
              <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="192"/>
            </operand_1>
          </operand_1>
          <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="4"/>
        </expression>
        <expression type="void" lvalue="no" complexity="17" code="function call">
          <func_address type="void (struct polygon4f_decl *)" lvalue="yes" complexity="1" code="variable" name="_rasterize_polygon_4f"/>
          <func_argument_0 type="struct polygon4f_decl *" lvalue="no" complexity="1" code="get_address">
            <operand_1 type="struct polygon4f_decl" lvalue="yes" complexity="1" code="variable" name="poly"/>
          </func_argument_0>
        </expression>
        <expression type="null" lvalue="no" complexity="0" code="return" retvalue="void"/>
      </body>
    </function>
  </functions_list>
</unit>
