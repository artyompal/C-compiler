<?xml version="1.0" encoding="utf-8"?>
<unit>
  <general>
    <source_module>..\basic__regalloc_bug.c</source_module>
  </general>
  <functions_list>
    <function>
      <name>f</name>
      <parameters>
        <parameter name="a" type="int"/>
        <parameter name="b" type="int"/>
      </parameters>
      <body>
        <expression type="null" lvalue="no" complexity="0" code="return">
          <retvalue type="int" lvalue="no" complexity="2" code="add">
            <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="a"/>
            <operand_2 type="int" lvalue="yes" complexity="1" code="variable" name="b"/>
          </retvalue>
        </expression>
      </body>
    </function>
    <function>
      <name>g</name>
      <parameters>
        <parameter name="a" type="int"/>
        <parameter name="b" type="int"/>
      </parameters>
      <body>
        <expression type="null" lvalue="no" complexity="0" code="return">
          <retvalue type="int" lvalue="no" complexity="2" code="sub">
            <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="a"/>
            <operand_2 type="int" lvalue="yes" complexity="1" code="variable" name="b"/>
          </retvalue>
        </expression>
      </body>
    </function>
    <function>
      <name>test</name>
      <parameters>
      </parameters>
      <local_variables>
        <variable name="a" type="int"/>
        <variable name="b" type="int"/>
        <variable name="res" type="int"/>
      </local_variables>
      <body>
        <expression type="int" lvalue="no" complexity="2" code="assign">
          <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="a"/>
          <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="2"/>
        </expression>
        <expression type="int" lvalue="no" complexity="2" code="assign">
          <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="b"/>
          <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="3"/>
        </expression>
        <expression type="null" lvalue="no" complexity="0" code="conditional jump" target="label0000" invert_condition="yes">
          <condition type="int" lvalue="no" complexity="2" code="greater_then">
            <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="a"/>
            <operand_2 type="int" lvalue="yes" complexity="1" code="variable" name="b"/>
          </condition>
        </expression>
        <expression type="int" lvalue="no" complexity="19" code="assign">
          <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="res"/>
          <operand_2 type="int" lvalue="no" complexity="18" code="function call">
            <func_address type="int (int, int)" lvalue="yes" complexity="1" code="variable" name="f"/>
            <func_argument_0 type="int" lvalue="yes" complexity="1" code="variable" name="a"/>
            <func_argument_1 type="int" lvalue="yes" complexity="1" code="variable" name="b"/>
          </operand_2>
        </expression>
        <expression type="null" lvalue="no" complexity="0" code="jump to label" target="label0001"/>
        <expression type="null" lvalue="no" complexity="0" code="label" name="label0000"/>
        <expression type="int" lvalue="no" complexity="19" code="assign">
          <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="res"/>
          <operand_2 type="int" lvalue="no" complexity="18" code="function call">
            <func_address type="int (int, int)" lvalue="yes" complexity="1" code="variable" name="g"/>
            <func_argument_0 type="int" lvalue="yes" complexity="1" code="variable" name="a"/>
            <func_argument_1 type="int" lvalue="yes" complexity="1" code="variable" name="b"/>
          </operand_2>
        </expression>
        <expression type="null" lvalue="no" complexity="0" code="label" name="label0001"/>
        <expression type="null" lvalue="no" complexity="0" code="return">
          <retvalue type="int" lvalue="no" complexity="2" code="add">
            <operand_1 type="int" lvalue="yes" complexity="1" code="variable" name="res"/>
            <operand_2 type="int" lvalue="no" complexity="1" code="integer literal" value="1"/>
          </retvalue>
        </expression>
      </body>
    </function>
  </functions_list>
</unit>
